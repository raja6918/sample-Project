// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Compare component renders without crash 1`] = `
.c1 {
  margin-bottom: 2em;
}

.c1 h2 {
  margin: 0;
  font-size: 20px;
  color: rgba(0,0,0,0.87);
  font-weight: normal;
}

.c1 .right-wrapper {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  position: absolute;
  right: 0;
}

.c1 .right-wrapper > div {
  display: inline-block;
  vertical-align: bottom;
  margin-right: 1em;
}

.c1 button {
  font-size: 13px;
  text-transform: capitalize;
  width: 100px;
  margin-left: 20px;
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  top: 4px;
}

.c3 {
  color: #0A75C2 !important;
  margin: 0;
  background-color: transparent;
  border-radius: initial;
}

.c2 .Select {
  padding-bottom: 3px;
}

.c2 .Select-control {
  width: 95%;
  overflow: hidden;
  border: 0;
  height: auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  background: transparent;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 .Select-control:hover {
  box-shadow: none;
}

.c2 .Select-multi-value-wrapper {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  overflow: hidden;
  height: 16px;
  padding-bottom: 7px;
}

.c2 .Select-multi-value-wrapper > div:first-child {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  margin: 0 0 -2px 0;
  max-width: 95%;
  width: auto;
}

.c2 .Select--multi .Select-input {
  margin: 0;
}

.c2 .Select.has-value.is-clearable.Select--single > .Select-control .Select-value {
  padding: 0;
}

.c2 .Select-noresults {
  padding: 16px;
}

.c2 .Select-input {
  height: auto;
  display: -webkit-inline-box !important;
  display: -webkit-inline-flex !important;
  display: -ms-inline-flexbox !important;
  display: inline-flex !important;
  padding: 0;
}

.c2 .Select-input input {
  border: 0;
  cursor: default;
  margin: 0;
  padding: 0;
  display: inline-block;
  outline: 0;
  font-size: inherit;
  background: transparent;
  font-family: inherit;
  box-shadow: none;
}

.c2 .Select-placeholder,
.c2 .Select--single .Select-value {
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 0;
  position: absolute;
  font-size: 1rem;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-family: 'Roboto','Helvetica','Arial',sans-serif;
}

.c2 .Select-placeholder {
  color: rgba(0,0,0,0.87);
}

.c2 .Select-menu-outer {
  top: calc(100% + 8px);
  left: 0;
  width: 100%;
  z-index: 99;
  position: absolute;
  box-shadow: 0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12);
  max-height: 216px;
  background-color: #fff;
}

.c2 .Select-menu-outer > div > div {
  display: block;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

.c2 .Select.is-focused:not(.is-open) > .Select-control {
  box-shadow: none;
}

.c2 .Select-menu {
  max-height: 216px;
  overflow-y: auto;
  z-index: 99;
}

.c2 .Select-menu div {
  box-sizing: content-box;
}

.c2 .Select-arrow-zone {
  position: absolute;
  right: 0;
  top: 0;
}

.c2 .Select-clear-zone {
  -webkit-transform: translateY(-4px);
  -ms-transform: translateY(-4px);
  transform: translateY(-4px);
}

.c2 .Select-arrow-zone,
.c2 .Select-clear-zone {
  color: rgba(0,0,0,0.54);
  width: 21px;
  cursor: pointer;
  height: 21px;
  z-index: 1;
}

.c2 .Select-aria-only {
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  width: 1px;
  height: 1px;
  margin: -1px;
  position: absolute;
  overflow: hidden;
}

.c2 .Select.is-open .Select-control .Select-clear-zone {
  display: block;
}

.c2 .Select .Select-control .Select-clear-zone {
  display: none;
}

.c2 .Select.is-open .Select-control .Select-clear-zone span {
  font-size: 16px;
  margin-top: 5px;
}

.c0 {
  width: 100%;
  margin: 0 auto;
  position: relative;
  height: 100%;
}

.c0 .cell .Select {
  padding: 0;
}

.c0 .container .table .col.left:first-child,
.c0 .container .table .col.left:first-child .column.sticky-left,
.c0 .container .table .col.left:first-child .column.sticky-left .cells-wrapper .cell,
.c0 .container .table .col.left:first-child .column.sticky-left .header.cell {
  min-width: 250px;
}

.c0 .col:not(.left),
.c0 .col:not(.right) {
  min-width: 175px;
}

.c0 .Select-multi-value-wrapper > div:first-child {
  font-size: 14px;
}

.c0 .container {
  height: calc(100% - 104px);
}

@media (max-width:880px) {
  .c1 .right-wrapper {
    position: static;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
  }
}

@media (max-width:709px) {
  .c1 button {
    margin-left: 0;
  }
}

@media (max-width:689px) {
  .c1 .right-wrapper {
    -webkit-flex-flow: row wrap;
    -ms-flex-flow: row wrap;
    flex-flow: row wrap;
  }

  .c1 button {
    top: 10px;
    margin-left: 0;
  }
}

@media (max-width:878px) {
  .c0 .container {
    height: calc(100% - 170px);
  }
}

<Compare
  solvers={
    Array [
      Object {
        "bases": Array [
          "VAN",
          "LND",
          "MTL",
          "TOR",
        ],
        "data": Object {
          "salaryCost": Object {
            "LND": "512005.62",
            "MTL": "423145.14",
            "TOR": "384677.4",
            "VAN": "465459.66",
            "total": "1785287.83",
          },
        },
        "id": 1,
        "name": "CreW Bse Test 1",
        "status": Object {
          "status": "completed",
          "statusId": 1,
        },
      },
    ]
  }
  t={
    [MockFunction] {
      "calls": Array [
        Array [
          "SOLVER.tabCompare.statistic",
        ],
        Array [
          "SOLVER.tabCompare.compareTitle",
        ],
        Array [
          "SOLVER.tabCompare.saveButton",
        ],
        Array [
          "SOLVER.tabCompare.allCrewBases",
        ],
        Array [
          "SOLVER.KpiParameters.salaryCost",
        ],
        Array [
          "SOLVER.KpiParameters.salaryCost",
        ],
        Array [
          "SOLVER.tabCompare.statistic",
        ],
        Array [
          "SOLVER.tabCompare.compareTitle",
        ],
        Array [
          "SOLVER.tabCompare.saveButton",
        ],
        Array [
          "SOLVER.tabCompare.allCrewBases",
        ],
        Array [
          "GLOBAL.dataNotFound.noResults",
        ],
        Array [
          "GLOBAL.dataNotFound.noResults",
        ],
      ],
    }
  }
>
  <Compare__Container>
    <div
      className="c0"
    >
      <CompareHeader
        columnValue="total"
        crewbases={
          Array [
            "VAN",
            "LND",
            "MTL",
            "TOR",
          ]
        }
        handleChangeColumn={[Function]}
        handleChangeKPI={[Function]}
        kpiValue={5}
        t={
          [MockFunction] {
            "calls": Array [
              Array [
                "SOLVER.tabCompare.statistic",
              ],
              Array [
                "SOLVER.tabCompare.compareTitle",
              ],
              Array [
                "SOLVER.tabCompare.saveButton",
              ],
              Array [
                "SOLVER.tabCompare.allCrewBases",
              ],
              Array [
                "SOLVER.KpiParameters.salaryCost",
              ],
              Array [
                "SOLVER.KpiParameters.salaryCost",
              ],
              Array [
                "SOLVER.tabCompare.statistic",
              ],
              Array [
                "SOLVER.tabCompare.compareTitle",
              ],
              Array [
                "SOLVER.tabCompare.saveButton",
              ],
              Array [
                "SOLVER.tabCompare.allCrewBases",
              ],
              Array [
                "GLOBAL.dataNotFound.noResults",
              ],
              Array [
                "GLOBAL.dataNotFound.noResults",
              ],
            ],
          }
        }
        title=""
      >
        <CompareHeader__Header>
          <div
            className="c1"
          >
            <h2 />
            <div
              className="drops-wrapper"
            >
              <WithStyles(ForwardRef(FormControl))>
                <ForwardRef(FormControl)
                  classes={
                    Object {
                      "fullWidth": "MuiFormControl-fullWidth",
                      "marginDense": "MuiFormControl-marginDense",
                      "marginNormal": "MuiFormControl-marginNormal",
                      "root": "MuiFormControl-root",
                    }
                  }
                >
                  <div
                    className="MuiFormControl-root"
                  >
                    <WithStyles(ForwardRef(Select))
                      MenuProps={
                        Object {
                          "anchorOrigin": Object {
                            "horizontal": "left",
                            "vertical": "bottom",
                          },
                          "getContentAnchorEl": null,
                        }
                      }
                      inputProps={
                        Object {
                          "id": "crewBaseSelected",
                          "name": "crewBaseSelected",
                        }
                      }
                      onChange={[Function]}
                      style={
                        Object {
                          "margin": "1em 0 0",
                          "width": "150px",
                        }
                      }
                      value="total"
                    >
                      <ForwardRef(Select)
                        MenuProps={
                          Object {
                            "anchorOrigin": Object {
                              "horizontal": "left",
                              "vertical": "bottom",
                            },
                            "getContentAnchorEl": null,
                          }
                        }
                        classes={
                          Object {
                            "disabled": "Mui-disabled",
                            "filled": "MuiSelect-filled",
                            "icon": "MuiSelect-icon",
                            "iconFilled": "MuiSelect-iconFilled",
                            "iconOpen": "MuiSelect-iconOpen",
                            "iconOutlined": "MuiSelect-iconOutlined",
                            "outlined": "MuiSelect-outlined",
                            "root": "MuiSelect-root",
                            "select": "MuiSelect-select",
                            "selectMenu": "MuiSelect-selectMenu",
                          }
                        }
                        inputProps={
                          Object {
                            "id": "crewBaseSelected",
                            "name": "crewBaseSelected",
                          }
                        }
                        onChange={[Function]}
                        style={
                          Object {
                            "margin": "1em 0 0",
                            "width": "150px",
                          }
                        }
                        value="total"
                      >
                        <WithStyles(ForwardRef(Input))
                          inputComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "propTypes": Object {
                                "IconComponent": [Function],
                                "MenuProps": [Function],
                                "SelectDisplayProps": [Function],
                                "aria-label": [Function],
                                "autoFocus": [Function],
                                "autoWidth": [Function],
                                "children": [Function],
                                "className": [Function],
                                "classes": [Function],
                                "defaultValue": [Function],
                                "disabled": [Function],
                                "displayEmpty": [Function],
                                "inputRef": [Function],
                                "labelId": [Function],
                                "multiple": [Function],
                                "name": [Function],
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onClose": [Function],
                                "onFocus": [Function],
                                "onOpen": [Function],
                                "open": [Function],
                                "readOnly": [Function],
                                "renderValue": [Function],
                                "required": [Function],
                                "tabIndex": [Function],
                                "type": [Function],
                                "value": [Function],
                                "variant": [Function],
                              },
                              "render": [Function],
                            }
                          }
                          inputProps={
                            Object {
                              "IconComponent": Object {
                                "$$typeof": Symbol(react.memo),
                                "compare": null,
                                "displayName": "ArrowDropDownIcon",
                                "muiName": "SvgIcon",
                                "type": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                              },
                              "MenuProps": Object {
                                "anchorOrigin": Object {
                                  "horizontal": "left",
                                  "vertical": "bottom",
                                },
                                "getContentAnchorEl": null,
                              },
                              "SelectDisplayProps": Object {
                                "id": undefined,
                              },
                              "autoWidth": false,
                              "children": Array [
                                <UNDEFINED
                                  value="total"
                                />,
                                Array [
                                  <UNDEFINED
                                    value="VAN"
                                  >
                                    VAN
                                  </UNDEFINED>,
                                  <UNDEFINED
                                    value="LND"
                                  >
                                    LND
                                  </UNDEFINED>,
                                  <UNDEFINED
                                    value="MTL"
                                  >
                                    MTL
                                  </UNDEFINED>,
                                  <UNDEFINED
                                    value="TOR"
                                  >
                                    TOR
                                  </UNDEFINED>,
                                ],
                              ],
                              "classes": Object {
                                "disabled": "Mui-disabled",
                                "filled": "MuiSelect-filled",
                                "icon": "MuiSelect-icon",
                                "iconFilled": "MuiSelect-iconFilled",
                                "iconOpen": "MuiSelect-iconOpen",
                                "iconOutlined": "MuiSelect-iconOutlined",
                                "outlined": "MuiSelect-outlined",
                                "root": "MuiSelect-root",
                                "select": "MuiSelect-select",
                                "selectMenu": "MuiSelect-selectMenu",
                              },
                              "displayEmpty": false,
                              "id": "crewBaseSelected",
                              "labelId": undefined,
                              "multiple": false,
                              "name": "crewBaseSelected",
                              "onClose": undefined,
                              "onOpen": undefined,
                              "open": undefined,
                              "renderValue": undefined,
                              "type": undefined,
                              "variant": "standard",
                            }
                          }
                          onChange={[Function]}
                          style={
                            Object {
                              "margin": "1em 0 0",
                              "width": "150px",
                            }
                          }
                          value="total"
                        >
                          <ForwardRef(Input)
                            classes={
                              Object {
                                "colorSecondary": "MuiInput-colorSecondary",
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused",
                                "formControl": "MuiInput-formControl",
                                "fullWidth": "MuiInput-fullWidth",
                                "input": "MuiInput-input",
                                "inputMarginDense": "MuiInput-inputMarginDense",
                                "inputMultiline": "MuiInput-inputMultiline",
                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                "marginDense": "MuiInput-marginDense",
                                "multiline": "MuiInput-multiline",
                                "root": "MuiInput-root",
                                "underline": "MuiInput-underline",
                              }
                            }
                            inputComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "propTypes": Object {
                                  "IconComponent": [Function],
                                  "MenuProps": [Function],
                                  "SelectDisplayProps": [Function],
                                  "aria-label": [Function],
                                  "autoFocus": [Function],
                                  "autoWidth": [Function],
                                  "children": [Function],
                                  "className": [Function],
                                  "classes": [Function],
                                  "defaultValue": [Function],
                                  "disabled": [Function],
                                  "displayEmpty": [Function],
                                  "inputRef": [Function],
                                  "labelId": [Function],
                                  "multiple": [Function],
                                  "name": [Function],
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onClose": [Function],
                                  "onFocus": [Function],
                                  "onOpen": [Function],
                                  "open": [Function],
                                  "readOnly": [Function],
                                  "renderValue": [Function],
                                  "required": [Function],
                                  "tabIndex": [Function],
                                  "type": [Function],
                                  "value": [Function],
                                  "variant": [Function],
                                },
                                "render": [Function],
                              }
                            }
                            inputProps={
                              Object {
                                "IconComponent": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "MenuProps": Object {
                                  "anchorOrigin": Object {
                                    "horizontal": "left",
                                    "vertical": "bottom",
                                  },
                                  "getContentAnchorEl": null,
                                },
                                "SelectDisplayProps": Object {
                                  "id": undefined,
                                },
                                "autoWidth": false,
                                "children": Array [
                                  <UNDEFINED
                                    value="total"
                                  />,
                                  Array [
                                    <UNDEFINED
                                      value="VAN"
                                    >
                                      VAN
                                    </UNDEFINED>,
                                    <UNDEFINED
                                      value="LND"
                                    >
                                      LND
                                    </UNDEFINED>,
                                    <UNDEFINED
                                      value="MTL"
                                    >
                                      MTL
                                    </UNDEFINED>,
                                    <UNDEFINED
                                      value="TOR"
                                    >
                                      TOR
                                    </UNDEFINED>,
                                  ],
                                ],
                                "classes": Object {
                                  "disabled": "Mui-disabled",
                                  "filled": "MuiSelect-filled",
                                  "icon": "MuiSelect-icon",
                                  "iconFilled": "MuiSelect-iconFilled",
                                  "iconOpen": "MuiSelect-iconOpen",
                                  "iconOutlined": "MuiSelect-iconOutlined",
                                  "outlined": "MuiSelect-outlined",
                                  "root": "MuiSelect-root",
                                  "select": "MuiSelect-select",
                                  "selectMenu": "MuiSelect-selectMenu",
                                },
                                "displayEmpty": false,
                                "id": "crewBaseSelected",
                                "labelId": undefined,
                                "multiple": false,
                                "name": "crewBaseSelected",
                                "onClose": undefined,
                                "onOpen": undefined,
                                "open": undefined,
                                "renderValue": undefined,
                                "type": undefined,
                                "variant": "standard",
                              }
                            }
                            onChange={[Function]}
                            style={
                              Object {
                                "margin": "1em 0 0",
                                "width": "150px",
                              }
                            }
                            value="total"
                          >
                            <WithStyles(ForwardRef(InputBase))
                              classes={
                                Object {
                                  "colorSecondary": "MuiInput-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "error": "Mui-error",
                                  "focused": "Mui-focused",
                                  "formControl": "MuiInput-formControl",
                                  "fullWidth": "MuiInput-fullWidth",
                                  "input": "MuiInput-input",
                                  "inputMarginDense": "MuiInput-inputMarginDense",
                                  "inputMultiline": "MuiInput-inputMultiline",
                                  "inputTypeSearch": "MuiInput-inputTypeSearch",
                                  "marginDense": "MuiInput-marginDense",
                                  "multiline": "MuiInput-multiline",
                                  "root": "MuiInput-root MuiInput-underline",
                                  "underline": null,
                                }
                              }
                              fullWidth={false}
                              inputComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "IconComponent": [Function],
                                    "MenuProps": [Function],
                                    "SelectDisplayProps": [Function],
                                    "aria-label": [Function],
                                    "autoFocus": [Function],
                                    "autoWidth": [Function],
                                    "children": [Function],
                                    "className": [Function],
                                    "classes": [Function],
                                    "defaultValue": [Function],
                                    "disabled": [Function],
                                    "displayEmpty": [Function],
                                    "inputRef": [Function],
                                    "labelId": [Function],
                                    "multiple": [Function],
                                    "name": [Function],
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onClose": [Function],
                                    "onFocus": [Function],
                                    "onOpen": [Function],
                                    "open": [Function],
                                    "readOnly": [Function],
                                    "renderValue": [Function],
                                    "required": [Function],
                                    "tabIndex": [Function],
                                    "type": [Function],
                                    "value": [Function],
                                    "variant": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              inputProps={
                                Object {
                                  "IconComponent": Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  },
                                  "MenuProps": Object {
                                    "anchorOrigin": Object {
                                      "horizontal": "left",
                                      "vertical": "bottom",
                                    },
                                    "getContentAnchorEl": null,
                                  },
                                  "SelectDisplayProps": Object {
                                    "id": undefined,
                                  },
                                  "autoWidth": false,
                                  "children": Array [
                                    <UNDEFINED
                                      value="total"
                                    />,
                                    Array [
                                      <UNDEFINED
                                        value="VAN"
                                      >
                                        VAN
                                      </UNDEFINED>,
                                      <UNDEFINED
                                        value="LND"
                                      >
                                        LND
                                      </UNDEFINED>,
                                      <UNDEFINED
                                        value="MTL"
                                      >
                                        MTL
                                      </UNDEFINED>,
                                      <UNDEFINED
                                        value="TOR"
                                      >
                                        TOR
                                      </UNDEFINED>,
                                    ],
                                  ],
                                  "classes": Object {
                                    "disabled": "Mui-disabled",
                                    "filled": "MuiSelect-filled",
                                    "icon": "MuiSelect-icon",
                                    "iconFilled": "MuiSelect-iconFilled",
                                    "iconOpen": "MuiSelect-iconOpen",
                                    "iconOutlined": "MuiSelect-iconOutlined",
                                    "outlined": "MuiSelect-outlined",
                                    "root": "MuiSelect-root",
                                    "select": "MuiSelect-select",
                                    "selectMenu": "MuiSelect-selectMenu",
                                  },
                                  "displayEmpty": false,
                                  "id": "crewBaseSelected",
                                  "labelId": undefined,
                                  "multiple": false,
                                  "name": "crewBaseSelected",
                                  "onClose": undefined,
                                  "onOpen": undefined,
                                  "open": undefined,
                                  "renderValue": undefined,
                                  "type": undefined,
                                  "variant": "standard",
                                }
                              }
                              multiline={false}
                              onChange={[Function]}
                              style={
                                Object {
                                  "margin": "1em 0 0",
                                  "width": "150px",
                                }
                              }
                              type="text"
                              value="total"
                            >
                              <ForwardRef(InputBase)
                                classes={
                                  Object {
                                    "adornedEnd": "MuiInputBase-adornedEnd",
                                    "adornedStart": "MuiInputBase-adornedStart",
                                    "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                    "disabled": "Mui-disabled Mui-disabled",
                                    "error": "Mui-error Mui-error",
                                    "focused": "Mui-focused Mui-focused",
                                    "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                    "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                    "input": "MuiInputBase-input MuiInput-input",
                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                    "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                    "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                    "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                    "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                  }
                                }
                                fullWidth={false}
                                inputComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "IconComponent": [Function],
                                      "MenuProps": [Function],
                                      "SelectDisplayProps": [Function],
                                      "aria-label": [Function],
                                      "autoFocus": [Function],
                                      "autoWidth": [Function],
                                      "children": [Function],
                                      "className": [Function],
                                      "classes": [Function],
                                      "defaultValue": [Function],
                                      "disabled": [Function],
                                      "displayEmpty": [Function],
                                      "inputRef": [Function],
                                      "labelId": [Function],
                                      "multiple": [Function],
                                      "name": [Function],
                                      "onBlur": [Function],
                                      "onChange": [Function],
                                      "onClose": [Function],
                                      "onFocus": [Function],
                                      "onOpen": [Function],
                                      "open": [Function],
                                      "readOnly": [Function],
                                      "renderValue": [Function],
                                      "required": [Function],
                                      "tabIndex": [Function],
                                      "type": [Function],
                                      "value": [Function],
                                      "variant": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                inputProps={
                                  Object {
                                    "IconComponent": Object {
                                      "$$typeof": Symbol(react.memo),
                                      "compare": null,
                                      "displayName": "ArrowDropDownIcon",
                                      "muiName": "SvgIcon",
                                      "type": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "render": [Function],
                                      },
                                    },
                                    "MenuProps": Object {
                                      "anchorOrigin": Object {
                                        "horizontal": "left",
                                        "vertical": "bottom",
                                      },
                                      "getContentAnchorEl": null,
                                    },
                                    "SelectDisplayProps": Object {
                                      "id": undefined,
                                    },
                                    "autoWidth": false,
                                    "children": Array [
                                      <UNDEFINED
                                        value="total"
                                      />,
                                      Array [
                                        <UNDEFINED
                                          value="VAN"
                                        >
                                          VAN
                                        </UNDEFINED>,
                                        <UNDEFINED
                                          value="LND"
                                        >
                                          LND
                                        </UNDEFINED>,
                                        <UNDEFINED
                                          value="MTL"
                                        >
                                          MTL
                                        </UNDEFINED>,
                                        <UNDEFINED
                                          value="TOR"
                                        >
                                          TOR
                                        </UNDEFINED>,
                                      ],
                                    ],
                                    "classes": Object {
                                      "disabled": "Mui-disabled",
                                      "filled": "MuiSelect-filled",
                                      "icon": "MuiSelect-icon",
                                      "iconFilled": "MuiSelect-iconFilled",
                                      "iconOpen": "MuiSelect-iconOpen",
                                      "iconOutlined": "MuiSelect-iconOutlined",
                                      "outlined": "MuiSelect-outlined",
                                      "root": "MuiSelect-root",
                                      "select": "MuiSelect-select",
                                      "selectMenu": "MuiSelect-selectMenu",
                                    },
                                    "displayEmpty": false,
                                    "id": "crewBaseSelected",
                                    "labelId": undefined,
                                    "multiple": false,
                                    "name": "crewBaseSelected",
                                    "onClose": undefined,
                                    "onOpen": undefined,
                                    "open": undefined,
                                    "renderValue": undefined,
                                    "type": undefined,
                                    "variant": "standard",
                                  }
                                }
                                multiline={false}
                                onChange={[Function]}
                                style={
                                  Object {
                                    "margin": "1em 0 0",
                                    "width": "150px",
                                  }
                                }
                                type="text"
                                value="total"
                              >
                                <div
                                  className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "margin": "1em 0 0",
                                      "width": "150px",
                                    }
                                  }
                                >
                                  <ForwardRef(SelectInput)
                                    IconComponent={
                                      Object {
                                        "$$typeof": Symbol(react.memo),
                                        "compare": null,
                                        "displayName": "ArrowDropDownIcon",
                                        "muiName": "SvgIcon",
                                        "type": Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "render": [Function],
                                        },
                                      }
                                    }
                                    MenuProps={
                                      Object {
                                        "anchorOrigin": Object {
                                          "horizontal": "left",
                                          "vertical": "bottom",
                                        },
                                        "getContentAnchorEl": null,
                                      }
                                    }
                                    SelectDisplayProps={
                                      Object {
                                        "id": undefined,
                                      }
                                    }
                                    aria-invalid={false}
                                    autoWidth={false}
                                    className="MuiInputBase-input MuiInput-input"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "filled": "MuiSelect-filled",
                                        "icon": "MuiSelect-icon",
                                        "iconFilled": "MuiSelect-iconFilled",
                                        "iconOpen": "MuiSelect-iconOpen",
                                        "iconOutlined": "MuiSelect-iconOutlined",
                                        "outlined": "MuiSelect-outlined",
                                        "root": "MuiSelect-root",
                                        "select": "MuiSelect-select",
                                        "selectMenu": "MuiSelect-selectMenu",
                                      }
                                    }
                                    disabled={false}
                                    displayEmpty={false}
                                    id="crewBaseSelected"
                                    inputRef={[Function]}
                                    multiple={false}
                                    name="crewBaseSelected"
                                    onAnimationStart={[Function]}
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    required={false}
                                    value="total"
                                    variant="standard"
                                  >
                                    <div
                                      aria-haspopup="listbox"
                                      aria-labelledby="mui-component-select-crewBaseSelected"
                                      className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                      id="mui-component-select-crewBaseSelected"
                                      onBlur={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onMouseDown={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      <span
                                        dangerouslySetInnerHTML={
                                          Object {
                                            "__html": "&#8203;",
                                          }
                                        }
                                      />
                                    </div>
                                    <input
                                      id="crewBaseSelected"
                                      name="crewBaseSelected"
                                      onAnimationStart={[Function]}
                                      type="hidden"
                                      value="total"
                                    />
                                    <ForwardRef
                                      className="MuiSelect-icon"
                                    >
                                      <WithStyles(ForwardRef(SvgIcon))
                                        className="MuiSelect-icon"
                                      >
                                        <ForwardRef(SvgIcon)
                                          className="MuiSelect-icon"
                                          classes={
                                            Object {
                                              "colorAction": "MuiSvgIcon-colorAction",
                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                              "colorError": "MuiSvgIcon-colorError",
                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                              "root": "MuiSvgIcon-root",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden="true"
                                            className="MuiSvgIcon-root MuiSelect-icon"
                                            focusable="false"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M7 10l5 5 5-5z"
                                            />
                                          </svg>
                                        </ForwardRef(SvgIcon)>
                                      </WithStyles(ForwardRef(SvgIcon))>
                                    </ForwardRef>
                                    <WithStyles(ForwardRef(Menu))
                                      MenuListProps={
                                        Object {
                                          "aria-labelledby": undefined,
                                          "disableListWrap": true,
                                          "role": "listbox",
                                        }
                                      }
                                      PaperProps={
                                        Object {
                                          "style": Object {
                                            "minWidth": undefined,
                                          },
                                        }
                                      }
                                      anchorEl={
                                        <div
                                          aria-haspopup="listbox"
                                          aria-labelledby="mui-component-select-crewBaseSelected"
                                          class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                          id="mui-component-select-crewBaseSelected"
                                          role="button"
                                          tabindex="0"
                                        >
                                          <span>
                                            ​
                                          </span>
                                        </div>
                                      }
                                      anchorOrigin={
                                        Object {
                                          "horizontal": "left",
                                          "vertical": "bottom",
                                        }
                                      }
                                      getContentAnchorEl={null}
                                      id="menu-crewBaseSelected"
                                      onClose={[Function]}
                                      open={false}
                                    >
                                      <ForwardRef(Menu)
                                        MenuListProps={
                                          Object {
                                            "aria-labelledby": undefined,
                                            "disableListWrap": true,
                                            "role": "listbox",
                                          }
                                        }
                                        PaperProps={
                                          Object {
                                            "style": Object {
                                              "minWidth": undefined,
                                            },
                                          }
                                        }
                                        anchorEl={
                                          <div
                                            aria-haspopup="listbox"
                                            aria-labelledby="mui-component-select-crewBaseSelected"
                                            class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                            id="mui-component-select-crewBaseSelected"
                                            role="button"
                                            tabindex="0"
                                          >
                                            <span>
                                              ​
                                            </span>
                                          </div>
                                        }
                                        anchorOrigin={
                                          Object {
                                            "horizontal": "left",
                                            "vertical": "bottom",
                                          }
                                        }
                                        classes={
                                          Object {
                                            "list": "MuiMenu-list",
                                            "paper": "MuiMenu-paper",
                                          }
                                        }
                                        getContentAnchorEl={null}
                                        id="menu-crewBaseSelected"
                                        onClose={[Function]}
                                        open={false}
                                      >
                                        <WithStyles(ForwardRef(Popover))
                                          PaperProps={
                                            Object {
                                              "classes": Object {
                                                "root": "MuiMenu-paper",
                                              },
                                              "style": Object {
                                                "minWidth": undefined,
                                              },
                                            }
                                          }
                                          anchorEl={
                                            <div
                                              aria-haspopup="listbox"
                                              aria-labelledby="mui-component-select-crewBaseSelected"
                                              class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                              id="mui-component-select-crewBaseSelected"
                                              role="button"
                                              tabindex="0"
                                            >
                                              <span>
                                                ​
                                              </span>
                                            </div>
                                          }
                                          anchorOrigin={
                                            Object {
                                              "horizontal": "left",
                                              "vertical": "bottom",
                                            }
                                          }
                                          getContentAnchorEl={null}
                                          id="menu-crewBaseSelected"
                                          onClose={[Function]}
                                          onEntering={[Function]}
                                          open={false}
                                          transformOrigin={
                                            Object {
                                              "horizontal": "left",
                                              "vertical": "top",
                                            }
                                          }
                                          transitionDuration="auto"
                                        >
                                          <ForwardRef(Popover)
                                            PaperProps={
                                              Object {
                                                "classes": Object {
                                                  "root": "MuiMenu-paper",
                                                },
                                                "style": Object {
                                                  "minWidth": undefined,
                                                },
                                              }
                                            }
                                            anchorEl={
                                              <div
                                                aria-haspopup="listbox"
                                                aria-labelledby="mui-component-select-crewBaseSelected"
                                                class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                id="mui-component-select-crewBaseSelected"
                                                role="button"
                                                tabindex="0"
                                              >
                                                <span>
                                                  ​
                                                </span>
                                              </div>
                                            }
                                            anchorOrigin={
                                              Object {
                                                "horizontal": "left",
                                                "vertical": "bottom",
                                              }
                                            }
                                            classes={
                                              Object {
                                                "paper": "MuiPopover-paper",
                                                "root": "MuiPopover-root",
                                              }
                                            }
                                            getContentAnchorEl={null}
                                            id="menu-crewBaseSelected"
                                            onClose={[Function]}
                                            onEntering={[Function]}
                                            open={false}
                                            transformOrigin={
                                              Object {
                                                "horizontal": "left",
                                                "vertical": "top",
                                              }
                                            }
                                            transitionDuration="auto"
                                          >
                                            <ForwardRef(Modal)
                                              BackdropProps={
                                                Object {
                                                  "invisible": true,
                                                }
                                              }
                                              className="MuiPopover-root"
                                              container={<body />}
                                              id="menu-crewBaseSelected"
                                              onClose={[Function]}
                                              open={false}
                                            />
                                          </ForwardRef(Popover)>
                                        </WithStyles(ForwardRef(Popover))>
                                      </ForwardRef(Menu)>
                                    </WithStyles(ForwardRef(Menu))>
                                  </ForwardRef(SelectInput)>
                                </div>
                              </ForwardRef(InputBase)>
                            </WithStyles(ForwardRef(InputBase))>
                          </ForwardRef(Input)>
                        </WithStyles(ForwardRef(Input))>
                      </ForwardRef(Select)>
                    </WithStyles(ForwardRef(Select))>
                  </div>
                </ForwardRef(FormControl)>
              </WithStyles(ForwardRef(FormControl))>
            </div>
          </div>
        </CompareHeader__Header>
      </CompareHeader>
      <div
        style={
          Object {
            "height": "calc(100% - 104px)",
          }
        }
      >
        <FixedColumnTable
          data={
            Array [
              Object {
                "1": "1785287.83",
                "delete": <UNDEFINED
                  onClick={[Function]}
                >
                  <Icon
                    iconcolor="#0A75C2"
                    margin="0"
                  >
                    delete
                  </Icon>
                </UNDEFINED>,
                "id": 1,
                "label": undefined,
                "statistics": <AutoComplete
                  adornmentIcon=""
                  create={false}
                  createLabel=""
                  defaultValue="salaryCost"
                  disabled={false}
                  id="1"
                  maxLength={1000}
                  name="1"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  placeholder=""
                  required={false}
                  setShrink={[Function]}
                  style={Object {}}
                  suggestions={
                    Array [
                      Object {
                        "label": undefined,
                        "value": "salaryCost",
                      },
                    ]
                  }
                  t={
                    [MockFunction] {
                      "calls": Array [
                        Array [
                          "SOLVER.tabCompare.statistic",
                        ],
                        Array [
                          "SOLVER.tabCompare.compareTitle",
                        ],
                        Array [
                          "SOLVER.tabCompare.saveButton",
                        ],
                        Array [
                          "SOLVER.tabCompare.allCrewBases",
                        ],
                        Array [
                          "SOLVER.KpiParameters.salaryCost",
                        ],
                        Array [
                          "SOLVER.KpiParameters.salaryCost",
                        ],
                        Array [
                          "SOLVER.tabCompare.statistic",
                        ],
                        Array [
                          "SOLVER.tabCompare.compareTitle",
                        ],
                        Array [
                          "SOLVER.tabCompare.saveButton",
                        ],
                        Array [
                          "SOLVER.tabCompare.allCrewBases",
                        ],
                        Array [
                          "GLOBAL.dataNotFound.noResults",
                        ],
                        Array [
                          "GLOBAL.dataNotFound.noResults",
                        ],
                      ],
                    }
                  }
                  value="salaryCost"
                />,
                "value": "salaryCost",
              },
              Object {
                "delete": "",
                "id": 0,
                "statistics": <AutoComplete
                  adornmentIcon=""
                  create={false}
                  createLabel=""
                  defaultValue=""
                  disabled={false}
                  id="0"
                  maxLength={1000}
                  name="0"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  placeholder=""
                  required={false}
                  setShrink={[Function]}
                  style={Object {}}
                  suggestions={Array []}
                  t={
                    [MockFunction] {
                      "calls": Array [
                        Array [
                          "SOLVER.tabCompare.statistic",
                        ],
                        Array [
                          "SOLVER.tabCompare.compareTitle",
                        ],
                        Array [
                          "SOLVER.tabCompare.saveButton",
                        ],
                        Array [
                          "SOLVER.tabCompare.allCrewBases",
                        ],
                        Array [
                          "SOLVER.KpiParameters.salaryCost",
                        ],
                        Array [
                          "SOLVER.KpiParameters.salaryCost",
                        ],
                        Array [
                          "SOLVER.tabCompare.statistic",
                        ],
                        Array [
                          "SOLVER.tabCompare.compareTitle",
                        ],
                        Array [
                          "SOLVER.tabCompare.saveButton",
                        ],
                        Array [
                          "SOLVER.tabCompare.allCrewBases",
                        ],
                        Array [
                          "GLOBAL.dataNotFound.noResults",
                        ],
                        Array [
                          "GLOBAL.dataNotFound.noResults",
                        ],
                      ],
                    }
                  }
                  value=""
                />,
                "total": "",
              },
            ]
          }
          headers={
            Array [
              Object {
                "fixed": "left",
                "id": "statistics",
                "minWidth": 250,
                "name": undefined,
              },
              Object {
                "id": 1,
                "name": "CreW Bse Test 1",
                "sticky": false,
              },
              Object {
                "fixed": "right",
                "id": "delete",
                "minWidth": 80,
                "name": "",
                "width": 80,
              },
            ]
          }
        >
          <ReactTableFixedColumns
            className="table"
            column={
              Object {
                "Aggregated": undefined,
                "Cell": undefined,
                "Expander": undefined,
                "Filter": undefined,
                "Footer": undefined,
                "Header": undefined,
                "Pivot": undefined,
                "PivotValue": undefined,
                "aggregate": undefined,
                "className": "",
                "filterAll": false,
                "filterMethod": undefined,
                "filterable": undefined,
                "footerClassName": "",
                "footerStyle": Object {},
                "getFooterProps": [Function],
                "getHeaderProps": [Function],
                "getProps": [Function],
                "headerClassName": "",
                "headerStyle": Object {},
                "minWidth": 100,
                "resizable": undefined,
                "show": true,
                "sortMethod": undefined,
                "sortable": undefined,
                "style": Object {},
              }
            }
            columns={
              Array [
                Object {
                  "Cell": [Function],
                  "Header": undefined,
                  "accessor": "statistics",
                  "className": "table-cell table-data",
                  "fixed": "left",
                  "headerClassName": "table-cell table-header",
                  "id": "statistics",
                  "minWidth": 250,
                  "name": undefined,
                },
                Object {
                  "Cell": [Function],
                  "Header": "CreW Bse Test 1",
                  "accessor": "1",
                  "className": "table-cell table-data",
                  "headerClassName": "table-cell table-header",
                  "id": 1,
                  "name": "CreW Bse Test 1",
                  "sticky": false,
                },
                Object {
                  "Cell": [Function],
                  "Header": undefined,
                  "accessor": "delete",
                  "className": "table-cell table-data",
                  "fixed": "right",
                  "headerClassName": "table-cell table-header",
                  "id": "delete",
                  "minWidth": 80,
                  "name": "",
                  "width": 80,
                },
              ]
            }
            data={
              Array [
                Object {
                  "1": "1785287.83",
                  "delete": <UNDEFINED
                    onClick={[Function]}
                  >
                    <Icon
                      iconcolor="#0A75C2"
                      margin="0"
                    >
                      delete
                    </Icon>
                  </UNDEFINED>,
                  "id": 1,
                  "label": undefined,
                  "statistics": <AutoComplete
                    adornmentIcon=""
                    create={false}
                    createLabel=""
                    defaultValue="salaryCost"
                    disabled={false}
                    id="1"
                    maxLength={1000}
                    name="1"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    placeholder=""
                    required={false}
                    setShrink={[Function]}
                    style={Object {}}
                    suggestions={
                      Array [
                        Object {
                          "label": undefined,
                          "value": "salaryCost",
                        },
                      ]
                    }
                    t={
                      [MockFunction] {
                        "calls": Array [
                          Array [
                            "SOLVER.tabCompare.statistic",
                          ],
                          Array [
                            "SOLVER.tabCompare.compareTitle",
                          ],
                          Array [
                            "SOLVER.tabCompare.saveButton",
                          ],
                          Array [
                            "SOLVER.tabCompare.allCrewBases",
                          ],
                          Array [
                            "SOLVER.KpiParameters.salaryCost",
                          ],
                          Array [
                            "SOLVER.KpiParameters.salaryCost",
                          ],
                          Array [
                            "SOLVER.tabCompare.statistic",
                          ],
                          Array [
                            "SOLVER.tabCompare.compareTitle",
                          ],
                          Array [
                            "SOLVER.tabCompare.saveButton",
                          ],
                          Array [
                            "SOLVER.tabCompare.allCrewBases",
                          ],
                          Array [
                            "GLOBAL.dataNotFound.noResults",
                          ],
                          Array [
                            "GLOBAL.dataNotFound.noResults",
                          ],
                        ],
                      }
                    }
                    value="salaryCost"
                  />,
                  "value": "salaryCost",
                },
                Object {
                  "delete": "",
                  "id": 0,
                  "statistics": <AutoComplete
                    adornmentIcon=""
                    create={false}
                    createLabel=""
                    defaultValue=""
                    disabled={false}
                    id="0"
                    maxLength={1000}
                    name="0"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    placeholder=""
                    required={false}
                    setShrink={[Function]}
                    style={Object {}}
                    suggestions={Array []}
                    t={
                      [MockFunction] {
                        "calls": Array [
                          Array [
                            "SOLVER.tabCompare.statistic",
                          ],
                          Array [
                            "SOLVER.tabCompare.compareTitle",
                          ],
                          Array [
                            "SOLVER.tabCompare.saveButton",
                          ],
                          Array [
                            "SOLVER.tabCompare.allCrewBases",
                          ],
                          Array [
                            "SOLVER.KpiParameters.salaryCost",
                          ],
                          Array [
                            "SOLVER.KpiParameters.salaryCost",
                          ],
                          Array [
                            "SOLVER.tabCompare.statistic",
                          ],
                          Array [
                            "SOLVER.tabCompare.compareTitle",
                          ],
                          Array [
                            "SOLVER.tabCompare.saveButton",
                          ],
                          Array [
                            "SOLVER.tabCompare.allCrewBases",
                          ],
                          Array [
                            "GLOBAL.dataNotFound.noResults",
                          ],
                          Array [
                            "GLOBAL.dataNotFound.noResults",
                          ],
                        ],
                      }
                    }
                    value=""
                  />,
                  "total": "",
                },
              ]
            }
            defaultPageSize={50}
            getTrProps={[Function]}
            innerRef={null}
            minRows={3}
            onResizedChange={null}
            resizable={false}
            showPagination={false}
            sortable={false}
            style={
              Object {
                "height": 144,
              }
            }
            uniqClassName={null}
          >
            <ReactTable
              AggregatedComponent={[Function]}
              ExpanderComponent={[Function]}
              FilterComponent={[Function]}
              LoadingComponent={[Function]}
              NoDataComponent={[Function]}
              PadRowComponent={[Function]}
              PaginationComponent={[Function]}
              PivotValueComponent={[Function]}
              ResizerComponent={[Function]}
              TableComponent={[Function]}
              TbodyComponent={[Function]}
              TdComponent={[Function]}
              TfootComponent={[Function]}
              ThComponent={[Function]}
              TheadComponent={[Function]}
              TrComponent={[Function]}
              TrGroupComponent={[Function]}
              aggregatedKey="_aggregated"
              className="table rthfc-gqa872mgke2g3fyo rthfc -sp"
              collapseOnDataChange={true}
              collapseOnPageChange={true}
              collapseOnSortingChange={true}
              column={
                Object {
                  "Aggregated": undefined,
                  "Cell": undefined,
                  "Expander": undefined,
                  "Filter": undefined,
                  "Footer": undefined,
                  "Header": undefined,
                  "Pivot": undefined,
                  "PivotValue": undefined,
                  "aggregate": undefined,
                  "className": "",
                  "filterAll": false,
                  "filterMethod": undefined,
                  "filterable": undefined,
                  "footerClassName": "",
                  "footerStyle": Object {},
                  "getFooterProps": [Function],
                  "getHeaderProps": [Function],
                  "getProps": [Function],
                  "headerClassName": "",
                  "headerStyle": Object {},
                  "minWidth": 100,
                  "resizable": undefined,
                  "show": true,
                  "sortMethod": undefined,
                  "sortable": undefined,
                  "style": Object {},
                }
              }
              columns={
                Array [
                  Object {
                    "Cell": [Function],
                    "Header": undefined,
                    "accessor": "statistics",
                    "className": "table-cell table-data rthfc-td-fixed rthfc-td-fixed-left rthfc-td-fixed-left-last",
                    "fixed": "left",
                    "headerClassName": "table-cell table-header rthfc-th-fixed rthfc-th-fixed-left rthfc-th-fixed-left-last",
                    "headerStyle": Object {
                      "left": 0,
                      "right": false,
                    },
                    "id": "statistics",
                    "minWidth": 250,
                    "name": undefined,
                    "style": Object {
                      "left": 0,
                      "right": false,
                    },
                  },
                  Object {
                    "Cell": [Function],
                    "Header": "CreW Bse Test 1",
                    "accessor": "1",
                    "className": "table-cell table-data",
                    "fixed": false,
                    "headerClassName": "table-cell table-header",
                    "headerStyle": Object {
                      "left": false,
                      "right": false,
                    },
                    "id": 1,
                    "name": "CreW Bse Test 1",
                    "sticky": false,
                    "style": Object {
                      "left": false,
                      "right": false,
                    },
                  },
                  Object {
                    "Cell": [Function],
                    "Header": undefined,
                    "accessor": "delete",
                    "className": "table-cell table-data rthfc-td-fixed rthfc-td-fixed-right rthfc-td-fixed-right-first",
                    "fixed": "right",
                    "headerClassName": "table-cell table-header rthfc-th-fixed rthfc-th-fixed-right rthfc-th-fixed-right-first",
                    "headerStyle": Object {
                      "left": false,
                      "right": 0,
                    },
                    "id": "delete",
                    "minWidth": 80,
                    "name": "",
                    "style": Object {
                      "left": false,
                      "right": 0,
                    },
                    "width": 80,
                  },
                ]
              }
              data={
                Array [
                  Object {
                    "1": "1785287.83",
                    "delete": <UNDEFINED
                      onClick={[Function]}
                    >
                      <Icon
                        iconcolor="#0A75C2"
                        margin="0"
                      >
                        delete
                      </Icon>
                    </UNDEFINED>,
                    "id": 1,
                    "label": undefined,
                    "statistics": <AutoComplete
                      adornmentIcon=""
                      create={false}
                      createLabel=""
                      defaultValue="salaryCost"
                      disabled={false}
                      id="1"
                      maxLength={1000}
                      name="1"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      placeholder=""
                      required={false}
                      setShrink={[Function]}
                      style={Object {}}
                      suggestions={
                        Array [
                          Object {
                            "label": undefined,
                            "value": "salaryCost",
                          },
                        ]
                      }
                      t={
                        [MockFunction] {
                          "calls": Array [
                            Array [
                              "SOLVER.tabCompare.statistic",
                            ],
                            Array [
                              "SOLVER.tabCompare.compareTitle",
                            ],
                            Array [
                              "SOLVER.tabCompare.saveButton",
                            ],
                            Array [
                              "SOLVER.tabCompare.allCrewBases",
                            ],
                            Array [
                              "SOLVER.KpiParameters.salaryCost",
                            ],
                            Array [
                              "SOLVER.KpiParameters.salaryCost",
                            ],
                            Array [
                              "SOLVER.tabCompare.statistic",
                            ],
                            Array [
                              "SOLVER.tabCompare.compareTitle",
                            ],
                            Array [
                              "SOLVER.tabCompare.saveButton",
                            ],
                            Array [
                              "SOLVER.tabCompare.allCrewBases",
                            ],
                            Array [
                              "GLOBAL.dataNotFound.noResults",
                            ],
                            Array [
                              "GLOBAL.dataNotFound.noResults",
                            ],
                          ],
                        }
                      }
                      value="salaryCost"
                    />,
                    "value": "salaryCost",
                  },
                  Object {
                    "delete": "",
                    "id": 0,
                    "statistics": <AutoComplete
                      adornmentIcon=""
                      create={false}
                      createLabel=""
                      defaultValue=""
                      disabled={false}
                      id="0"
                      maxLength={1000}
                      name="0"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      placeholder=""
                      required={false}
                      setShrink={[Function]}
                      style={Object {}}
                      suggestions={Array []}
                      t={
                        [MockFunction] {
                          "calls": Array [
                            Array [
                              "SOLVER.tabCompare.statistic",
                            ],
                            Array [
                              "SOLVER.tabCompare.compareTitle",
                            ],
                            Array [
                              "SOLVER.tabCompare.saveButton",
                            ],
                            Array [
                              "SOLVER.tabCompare.allCrewBases",
                            ],
                            Array [
                              "SOLVER.KpiParameters.salaryCost",
                            ],
                            Array [
                              "SOLVER.KpiParameters.salaryCost",
                            ],
                            Array [
                              "SOLVER.tabCompare.statistic",
                            ],
                            Array [
                              "SOLVER.tabCompare.compareTitle",
                            ],
                            Array [
                              "SOLVER.tabCompare.saveButton",
                            ],
                            Array [
                              "SOLVER.tabCompare.allCrewBases",
                            ],
                            Array [
                              "GLOBAL.dataNotFound.noResults",
                            ],
                            Array [
                              "GLOBAL.dataNotFound.noResults",
                            ],
                          ],
                        }
                      }
                      value=""
                    />,
                    "total": "",
                  },
                ]
              }
              defaultExpanded={Object {}}
              defaultFilterMethod={[Function]}
              defaultFiltered={Array []}
              defaultPageSize={50}
              defaultResized={Array []}
              defaultSortDesc={false}
              defaultSortMethod={[Function]}
              defaultSorted={Array []}
              expanderDefaults={
                Object {
                  "filterable": false,
                  "resizable": false,
                  "sortable": false,
                  "width": 35,
                }
              }
              filterable={false}
              freezeWhenExpanded={false}
              getLoadingProps={[Function]}
              getNoDataProps={[Function]}
              getPaginationProps={[Function]}
              getProps={[Function]}
              getResizerProps={[Function]}
              getTableProps={[Function]}
              getTbodyProps={[Function]}
              getTdProps={[Function]}
              getTfootProps={[Function]}
              getTfootTdProps={[Function]}
              getTfootTrProps={[Function]}
              getTheadFilterProps={[Function]}
              getTheadFilterThProps={[Function]}
              getTheadFilterTrProps={[Function]}
              getTheadGroupProps={[Function]}
              getTheadGroupThProps={[Function]}
              getTheadGroupTrProps={[Function]}
              getTheadProps={[Function]}
              getTheadThProps={[Function]}
              getTheadTrProps={[Function]}
              getTrGroupProps={[Function]}
              getTrProps={[Function]}
              groupedByPivotKey="_groupedByPivot"
              indexKey="_index"
              loading={false}
              loadingText="Loading..."
              minRows={3}
              multiSort={true}
              nestingLevelKey="_nestingLevel"
              nextText="Next"
              noDataText="No rows found"
              ofText="of"
              onFetchData={[Function]}
              onResizedChange={[Function]}
              originalKey="_original"
              pageSizeOptions={
                Array [
                  5,
                  10,
                  20,
                  25,
                  50,
                  100,
                ]
              }
              pageText="Page"
              pivotDefaults={Object {}}
              pivotIDKey="_pivotID"
              pivotValKey="_pivotVal"
              previousText="Previous"
              resizable={false}
              resolveData={[Function]}
              rowsText="rows"
              showPageJump={true}
              showPageSizeOptions={true}
              showPagination={false}
              showPaginationBottom={true}
              showPaginationTop={false}
              sortable={false}
              style={
                Object {
                  "height": 144,
                }
              }
              subRowsKey="_subRows"
              uniqClassName={null}
            >
              <div
                className="ReactTable table rthfc-gqa872mgke2g3fyo rthfc -sp"
                style={
                  Object {
                    "height": 144,
                  }
                }
              >
                <TableComponent
                  className=""
                >
                  <div
                    className="rt-table"
                    role="grid"
                  >
                    <Thead
                      className="-header"
                      style={
                        Object {
                          "minWidth": "430px",
                        }
                      }
                    >
                      <div
                        className="rt-thead -header"
                        style={
                          Object {
                            "minWidth": "430px",
                          }
                        }
                      >
                        <TrComponent>
                          <div
                            className="rt-tr"
                            role="row"
                          >
                            <ThComponent
                              className="table-cell table-header rthfc-th-fixed rthfc-th-fixed-left rthfc-th-fixed-left-last"
                              key="0-statistics"
                              style={
                                Object {
                                  "flex": "250 0 auto",
                                  "left": 0,
                                  "maxWidth": null,
                                  "right": false,
                                  "width": "250px",
                                }
                              }
                              toggleSort={[Function]}
                            >
                              <div
                                className="rt-th table-cell table-header rthfc-th-fixed rthfc-th-fixed-left rthfc-th-fixed-left-last"
                                onClick={[Function]}
                                role="columnheader"
                                style={
                                  Object {
                                    "flex": "250 0 auto",
                                    "left": 0,
                                    "maxWidth": null,
                                    "right": false,
                                    "width": "250px",
                                  }
                                }
                                tabIndex="-1"
                              >
                                <div
                                  className=""
                                />
                              </div>
                            </ThComponent>
                            <ThComponent
                              className="table-cell table-header"
                              key="1-1"
                              style={
                                Object {
                                  "flex": "100 0 auto",
                                  "left": false,
                                  "maxWidth": null,
                                  "right": false,
                                  "width": "100px",
                                }
                              }
                              toggleSort={[Function]}
                            >
                              <div
                                className="rt-th table-cell table-header"
                                onClick={[Function]}
                                role="columnheader"
                                style={
                                  Object {
                                    "flex": "100 0 auto",
                                    "left": false,
                                    "maxWidth": null,
                                    "right": false,
                                    "width": "100px",
                                  }
                                }
                                tabIndex="-1"
                              >
                                <div
                                  className=""
                                >
                                  CreW Bse Test 1
                                </div>
                              </div>
                            </ThComponent>
                            <ThComponent
                              className="table-cell table-header rthfc-th-fixed rthfc-th-fixed-right rthfc-th-fixed-right-first"
                              key="2-delete"
                              style={
                                Object {
                                  "flex": "80 0 auto",
                                  "left": false,
                                  "maxWidth": "80px",
                                  "right": 0,
                                  "width": "80px",
                                }
                              }
                              toggleSort={[Function]}
                            >
                              <div
                                className="rt-th table-cell table-header rthfc-th-fixed rthfc-th-fixed-right rthfc-th-fixed-right-first"
                                onClick={[Function]}
                                role="columnheader"
                                style={
                                  Object {
                                    "flex": "80 0 auto",
                                    "left": false,
                                    "maxWidth": "80px",
                                    "right": 0,
                                    "width": "80px",
                                  }
                                }
                                tabIndex="-1"
                              >
                                <div
                                  className=""
                                />
                              </div>
                            </ThComponent>
                          </div>
                        </TrComponent>
                      </div>
                    </Thead>
                    <Tbody
                      className=""
                      style={
                        Object {
                          "minWidth": "430px",
                        }
                      }
                    >
                      <div
                        className="rt-tbody"
                        style={
                          Object {
                            "minWidth": "430px",
                          }
                        }
                      >
                        <TrGroupComponent
                          key="0"
                        >
                          <div
                            className="rt-tr-group"
                            role="rowgroup"
                          >
                            <TrComponent
                              className="-odd"
                              onFocus={[Function]}
                              style={
                                Object {
                                  "zIndex": 3,
                                }
                              }
                            >
                              <div
                                className="rt-tr -odd"
                                onFocus={[Function]}
                                role="row"
                                style={
                                  Object {
                                    "zIndex": 3,
                                  }
                                }
                              >
                                <TdComponent
                                  className="table-cell table-data rthfc-td-fixed rthfc-td-fixed-left rthfc-td-fixed-left-last"
                                  key="0-statistics"
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "flex": "250 0 auto",
                                      "left": 0,
                                      "maxWidth": null,
                                      "right": false,
                                      "width": "250px",
                                    }
                                  }
                                >
                                  <div
                                    className="rt-td table-cell table-data rthfc-td-fixed rthfc-td-fixed-left rthfc-td-fixed-left-last"
                                    onClick={[Function]}
                                    role="gridcell"
                                    style={
                                      Object {
                                        "flex": "250 0 auto",
                                        "left": 0,
                                        "maxWidth": null,
                                        "right": false,
                                        "width": "250px",
                                      }
                                    }
                                  >
                                    <span
                                      title=""
                                    >
                                      <AutoComplete
                                        adornmentIcon=""
                                        create={false}
                                        createLabel=""
                                        defaultValue="salaryCost"
                                        disabled={false}
                                        id="1"
                                        maxLength={1000}
                                        name="1"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        placeholder=""
                                        required={false}
                                        setShrink={[Function]}
                                        style={Object {}}
                                        suggestions={
                                          Array [
                                            Object {
                                              "label": undefined,
                                              "value": "salaryCost",
                                            },
                                          ]
                                        }
                                        t={
                                          [MockFunction] {
                                            "calls": Array [
                                              Array [
                                                "SOLVER.tabCompare.statistic",
                                              ],
                                              Array [
                                                "SOLVER.tabCompare.compareTitle",
                                              ],
                                              Array [
                                                "SOLVER.tabCompare.saveButton",
                                              ],
                                              Array [
                                                "SOLVER.tabCompare.allCrewBases",
                                              ],
                                              Array [
                                                "SOLVER.KpiParameters.salaryCost",
                                              ],
                                              Array [
                                                "SOLVER.KpiParameters.salaryCost",
                                              ],
                                              Array [
                                                "SOLVER.tabCompare.statistic",
                                              ],
                                              Array [
                                                "SOLVER.tabCompare.compareTitle",
                                              ],
                                              Array [
                                                "SOLVER.tabCompare.saveButton",
                                              ],
                                              Array [
                                                "SOLVER.tabCompare.allCrewBases",
                                              ],
                                              Array [
                                                "GLOBAL.dataNotFound.noResults",
                                              ],
                                              Array [
                                                "GLOBAL.dataNotFound.noResults",
                                              ],
                                            ],
                                          }
                                        }
                                        value="salaryCost"
                                      >
                                        <AutoComplete__Input
                                          disabled={false}
                                          fullWidth={true}
                                          id="1"
                                          inputComponent={[Function]}
                                          inputProps={
                                            Object {
                                              "createComponent": false,
                                              "createLabel": "",
                                              "instanceId": "1",
                                              "isToolTip": undefined,
                                              "name": "1",
                                              "options": Array [
                                                Object {
                                                  "label": undefined,
                                                  "value": "salaryCost",
                                                },
                                              ],
                                              "required": false,
                                              "simpleValue": true,
                                              "t": [MockFunction] {
                                                "calls": Array [
                                                  Array [
                                                    "SOLVER.tabCompare.statistic",
                                                  ],
                                                  Array [
                                                    "SOLVER.tabCompare.compareTitle",
                                                  ],
                                                  Array [
                                                    "SOLVER.tabCompare.saveButton",
                                                  ],
                                                  Array [
                                                    "SOLVER.tabCompare.allCrewBases",
                                                  ],
                                                  Array [
                                                    "SOLVER.KpiParameters.salaryCost",
                                                  ],
                                                  Array [
                                                    "SOLVER.KpiParameters.salaryCost",
                                                  ],
                                                  Array [
                                                    "SOLVER.tabCompare.statistic",
                                                  ],
                                                  Array [
                                                    "SOLVER.tabCompare.compareTitle",
                                                  ],
                                                  Array [
                                                    "SOLVER.tabCompare.saveButton",
                                                  ],
                                                  Array [
                                                    "SOLVER.tabCompare.allCrewBases",
                                                  ],
                                                  Array [
                                                    "GLOBAL.dataNotFound.noResults",
                                                  ],
                                                  Array [
                                                    "GLOBAL.dataNotFound.noResults",
                                                  ],
                                                ],
                                              },
                                              "value": "salaryCost",
                                            }
                                          }
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          onKeyPress={[Function]}
                                          placeholder=""
                                          required={false}
                                          startAdornment={
                                            <UNDEFINED
                                              position="start"
                                            >
                                              
                                            </UNDEFINED>
                                          }
                                          style={Object {}}
                                          value="salaryCost"
                                        >
                                          <WithStyles(ForwardRef(Input))
                                            className="c2"
                                            disabled={false}
                                            fullWidth={true}
                                            id="1"
                                            inputComponent={[Function]}
                                            inputProps={
                                              Object {
                                                "createComponent": false,
                                                "createLabel": "",
                                                "instanceId": "1",
                                                "isToolTip": undefined,
                                                "name": "1",
                                                "options": Array [
                                                  Object {
                                                    "label": undefined,
                                                    "value": "salaryCost",
                                                  },
                                                ],
                                                "required": false,
                                                "simpleValue": true,
                                                "t": [MockFunction] {
                                                  "calls": Array [
                                                    Array [
                                                      "SOLVER.tabCompare.statistic",
                                                    ],
                                                    Array [
                                                      "SOLVER.tabCompare.compareTitle",
                                                    ],
                                                    Array [
                                                      "SOLVER.tabCompare.saveButton",
                                                    ],
                                                    Array [
                                                      "SOLVER.tabCompare.allCrewBases",
                                                    ],
                                                    Array [
                                                      "SOLVER.KpiParameters.salaryCost",
                                                    ],
                                                    Array [
                                                      "SOLVER.KpiParameters.salaryCost",
                                                    ],
                                                    Array [
                                                      "SOLVER.tabCompare.statistic",
                                                    ],
                                                    Array [
                                                      "SOLVER.tabCompare.compareTitle",
                                                    ],
                                                    Array [
                                                      "SOLVER.tabCompare.saveButton",
                                                    ],
                                                    Array [
                                                      "SOLVER.tabCompare.allCrewBases",
                                                    ],
                                                    Array [
                                                      "GLOBAL.dataNotFound.noResults",
                                                    ],
                                                    Array [
                                                      "GLOBAL.dataNotFound.noResults",
                                                    ],
                                                  ],
                                                },
                                                "value": "salaryCost",
                                              }
                                            }
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            onKeyPress={[Function]}
                                            placeholder=""
                                            required={false}
                                            startAdornment={
                                              <UNDEFINED
                                                position="start"
                                              >
                                                
                                              </UNDEFINED>
                                            }
                                            style={Object {}}
                                            value="salaryCost"
                                          >
                                            <ForwardRef(Input)
                                              className="c2"
                                              classes={
                                                Object {
                                                  "colorSecondary": "MuiInput-colorSecondary",
                                                  "disabled": "Mui-disabled",
                                                  "error": "Mui-error",
                                                  "focused": "Mui-focused",
                                                  "formControl": "MuiInput-formControl",
                                                  "fullWidth": "MuiInput-fullWidth",
                                                  "input": "MuiInput-input",
                                                  "inputMarginDense": "MuiInput-inputMarginDense",
                                                  "inputMultiline": "MuiInput-inputMultiline",
                                                  "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                  "marginDense": "MuiInput-marginDense",
                                                  "multiline": "MuiInput-multiline",
                                                  "root": "MuiInput-root",
                                                  "underline": "MuiInput-underline",
                                                }
                                              }
                                              disabled={false}
                                              fullWidth={true}
                                              id="1"
                                              inputComponent={[Function]}
                                              inputProps={
                                                Object {
                                                  "createComponent": false,
                                                  "createLabel": "",
                                                  "instanceId": "1",
                                                  "isToolTip": undefined,
                                                  "name": "1",
                                                  "options": Array [
                                                    Object {
                                                      "label": undefined,
                                                      "value": "salaryCost",
                                                    },
                                                  ],
                                                  "required": false,
                                                  "simpleValue": true,
                                                  "t": [MockFunction] {
                                                    "calls": Array [
                                                      Array [
                                                        "SOLVER.tabCompare.statistic",
                                                      ],
                                                      Array [
                                                        "SOLVER.tabCompare.compareTitle",
                                                      ],
                                                      Array [
                                                        "SOLVER.tabCompare.saveButton",
                                                      ],
                                                      Array [
                                                        "SOLVER.tabCompare.allCrewBases",
                                                      ],
                                                      Array [
                                                        "SOLVER.KpiParameters.salaryCost",
                                                      ],
                                                      Array [
                                                        "SOLVER.KpiParameters.salaryCost",
                                                      ],
                                                      Array [
                                                        "SOLVER.tabCompare.statistic",
                                                      ],
                                                      Array [
                                                        "SOLVER.tabCompare.compareTitle",
                                                      ],
                                                      Array [
                                                        "SOLVER.tabCompare.saveButton",
                                                      ],
                                                      Array [
                                                        "SOLVER.tabCompare.allCrewBases",
                                                      ],
                                                      Array [
                                                        "GLOBAL.dataNotFound.noResults",
                                                      ],
                                                      Array [
                                                        "GLOBAL.dataNotFound.noResults",
                                                      ],
                                                    ],
                                                  },
                                                  "value": "salaryCost",
                                                }
                                              }
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              onKeyPress={[Function]}
                                              placeholder=""
                                              required={false}
                                              startAdornment={
                                                <UNDEFINED
                                                  position="start"
                                                >
                                                  
                                                </UNDEFINED>
                                              }
                                              style={Object {}}
                                              value="salaryCost"
                                            >
                                              <WithStyles(ForwardRef(InputBase))
                                                className="c2"
                                                classes={
                                                  Object {
                                                    "colorSecondary": "MuiInput-colorSecondary",
                                                    "disabled": "Mui-disabled",
                                                    "error": "Mui-error",
                                                    "focused": "Mui-focused",
                                                    "formControl": "MuiInput-formControl",
                                                    "fullWidth": "MuiInput-fullWidth",
                                                    "input": "MuiInput-input",
                                                    "inputMarginDense": "MuiInput-inputMarginDense",
                                                    "inputMultiline": "MuiInput-inputMultiline",
                                                    "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                    "marginDense": "MuiInput-marginDense",
                                                    "multiline": "MuiInput-multiline",
                                                    "root": "MuiInput-root MuiInput-underline",
                                                    "underline": null,
                                                  }
                                                }
                                                disabled={false}
                                                fullWidth={true}
                                                id="1"
                                                inputComponent={[Function]}
                                                inputProps={
                                                  Object {
                                                    "createComponent": false,
                                                    "createLabel": "",
                                                    "instanceId": "1",
                                                    "isToolTip": undefined,
                                                    "name": "1",
                                                    "options": Array [
                                                      Object {
                                                        "label": undefined,
                                                        "value": "salaryCost",
                                                      },
                                                    ],
                                                    "required": false,
                                                    "simpleValue": true,
                                                    "t": [MockFunction] {
                                                      "calls": Array [
                                                        Array [
                                                          "SOLVER.tabCompare.statistic",
                                                        ],
                                                        Array [
                                                          "SOLVER.tabCompare.compareTitle",
                                                        ],
                                                        Array [
                                                          "SOLVER.tabCompare.saveButton",
                                                        ],
                                                        Array [
                                                          "SOLVER.tabCompare.allCrewBases",
                                                        ],
                                                        Array [
                                                          "SOLVER.KpiParameters.salaryCost",
                                                        ],
                                                        Array [
                                                          "SOLVER.KpiParameters.salaryCost",
                                                        ],
                                                        Array [
                                                          "SOLVER.tabCompare.statistic",
                                                        ],
                                                        Array [
                                                          "SOLVER.tabCompare.compareTitle",
                                                        ],
                                                        Array [
                                                          "SOLVER.tabCompare.saveButton",
                                                        ],
                                                        Array [
                                                          "SOLVER.tabCompare.allCrewBases",
                                                        ],
                                                        Array [
                                                          "GLOBAL.dataNotFound.noResults",
                                                        ],
                                                        Array [
                                                          "GLOBAL.dataNotFound.noResults",
                                                        ],
                                                      ],
                                                    },
                                                    "value": "salaryCost",
                                                  }
                                                }
                                                multiline={false}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                onKeyPress={[Function]}
                                                placeholder=""
                                                required={false}
                                                startAdornment={
                                                  <UNDEFINED
                                                    position="start"
                                                  >
                                                    
                                                  </UNDEFINED>
                                                }
                                                style={Object {}}
                                                type="text"
                                                value="salaryCost"
                                              >
                                                <ForwardRef(InputBase)
                                                  className="c2"
                                                  classes={
                                                    Object {
                                                      "adornedEnd": "MuiInputBase-adornedEnd",
                                                      "adornedStart": "MuiInputBase-adornedStart",
                                                      "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                      "disabled": "Mui-disabled Mui-disabled",
                                                      "error": "Mui-error Mui-error",
                                                      "focused": "Mui-focused Mui-focused",
                                                      "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                      "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                      "input": "MuiInputBase-input MuiInput-input",
                                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                      "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                      "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                      "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                      "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                      "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                      "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                    }
                                                  }
                                                  disabled={false}
                                                  fullWidth={true}
                                                  id="1"
                                                  inputComponent={[Function]}
                                                  inputProps={
                                                    Object {
                                                      "createComponent": false,
                                                      "createLabel": "",
                                                      "instanceId": "1",
                                                      "isToolTip": undefined,
                                                      "name": "1",
                                                      "options": Array [
                                                        Object {
                                                          "label": undefined,
                                                          "value": "salaryCost",
                                                        },
                                                      ],
                                                      "required": false,
                                                      "simpleValue": true,
                                                      "t": [MockFunction] {
                                                        "calls": Array [
                                                          Array [
                                                            "SOLVER.tabCompare.statistic",
                                                          ],
                                                          Array [
                                                            "SOLVER.tabCompare.compareTitle",
                                                          ],
                                                          Array [
                                                            "SOLVER.tabCompare.saveButton",
                                                          ],
                                                          Array [
                                                            "SOLVER.tabCompare.allCrewBases",
                                                          ],
                                                          Array [
                                                            "SOLVER.KpiParameters.salaryCost",
                                                          ],
                                                          Array [
                                                            "SOLVER.KpiParameters.salaryCost",
                                                          ],
                                                          Array [
                                                            "SOLVER.tabCompare.statistic",
                                                          ],
                                                          Array [
                                                            "SOLVER.tabCompare.compareTitle",
                                                          ],
                                                          Array [
                                                            "SOLVER.tabCompare.saveButton",
                                                          ],
                                                          Array [
                                                            "SOLVER.tabCompare.allCrewBases",
                                                          ],
                                                          Array [
                                                            "GLOBAL.dataNotFound.noResults",
                                                          ],
                                                          Array [
                                                            "GLOBAL.dataNotFound.noResults",
                                                          ],
                                                        ],
                                                      },
                                                      "value": "salaryCost",
                                                    }
                                                  }
                                                  multiline={false}
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onClick={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyPress={[Function]}
                                                  placeholder=""
                                                  required={false}
                                                  startAdornment={
                                                    <UNDEFINED
                                                      position="start"
                                                    >
                                                      
                                                    </UNDEFINED>
                                                  }
                                                  style={Object {}}
                                                  type="text"
                                                  value="salaryCost"
                                                >
                                                  <div
                                                    className="MuiInputBase-root MuiInput-root MuiInput-underline c2 MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-adornedStart"
                                                    onClick={[Function]}
                                                    onKeyPress={[Function]}
                                                    required={false}
                                                    style={Object {}}
                                                  >
                                                    <WithStyles(ForwardRef(InputAdornment))
                                                      position="start"
                                                    >
                                                      <ForwardRef(InputAdornment)
                                                        classes={
                                                          Object {
                                                            "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                            "filled": "MuiInputAdornment-filled",
                                                            "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                            "marginDense": "MuiInputAdornment-marginDense",
                                                            "positionEnd": "MuiInputAdornment-positionEnd",
                                                            "positionStart": "MuiInputAdornment-positionStart",
                                                            "root": "MuiInputAdornment-root",
                                                          }
                                                        }
                                                        position="start"
                                                      >
                                                        <div
                                                          className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                                        >
                                                          <WithStyles(ForwardRef(Typography))
                                                            color="textSecondary"
                                                          >
                                                            <ForwardRef(Typography)
                                                              classes={
                                                                Object {
                                                                  "alignCenter": "MuiTypography-alignCenter",
                                                                  "alignJustify": "MuiTypography-alignJustify",
                                                                  "alignLeft": "MuiTypography-alignLeft",
                                                                  "alignRight": "MuiTypography-alignRight",
                                                                  "body1": "MuiTypography-body1",
                                                                  "body2": "MuiTypography-body2",
                                                                  "button": "MuiTypography-button",
                                                                  "caption": "MuiTypography-caption",
                                                                  "colorError": "MuiTypography-colorError",
                                                                  "colorInherit": "MuiTypography-colorInherit",
                                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                  "displayBlock": "MuiTypography-displayBlock",
                                                                  "displayInline": "MuiTypography-displayInline",
                                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                                  "h1": "MuiTypography-h1",
                                                                  "h2": "MuiTypography-h2",
                                                                  "h3": "MuiTypography-h3",
                                                                  "h4": "MuiTypography-h4",
                                                                  "h5": "MuiTypography-h5",
                                                                  "h6": "MuiTypography-h6",
                                                                  "noWrap": "MuiTypography-noWrap",
                                                                  "overline": "MuiTypography-overline",
                                                                  "paragraph": "MuiTypography-paragraph",
                                                                  "root": "MuiTypography-root",
                                                                  "srOnly": "MuiTypography-srOnly",
                                                                  "subtitle1": "MuiTypography-subtitle1",
                                                                  "subtitle2": "MuiTypography-subtitle2",
                                                                }
                                                              }
                                                              color="textSecondary"
                                                            >
                                                              <p
                                                                className="MuiTypography-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                                                              />
                                                            </ForwardRef(Typography)>
                                                          </WithStyles(ForwardRef(Typography))>
                                                        </div>
                                                      </ForwardRef(InputAdornment)>
                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                    <SelectWrapper
                                                      className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                      createComponent={false}
                                                      createLabel=""
                                                      disabled={false}
                                                      id="1"
                                                      inputRef={[Function]}
                                                      instanceId="1"
                                                      name="1"
                                                      onAnimationStart={[Function]}
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      options={
                                                        Array [
                                                          Object {
                                                            "label": undefined,
                                                            "value": "salaryCost",
                                                          },
                                                        ]
                                                      }
                                                      placeholder=""
                                                      required={false}
                                                      simpleValue={true}
                                                      t={
                                                        [MockFunction] {
                                                          "calls": Array [
                                                            Array [
                                                              "SOLVER.tabCompare.statistic",
                                                            ],
                                                            Array [
                                                              "SOLVER.tabCompare.compareTitle",
                                                            ],
                                                            Array [
                                                              "SOLVER.tabCompare.saveButton",
                                                            ],
                                                            Array [
                                                              "SOLVER.tabCompare.allCrewBases",
                                                            ],
                                                            Array [
                                                              "SOLVER.KpiParameters.salaryCost",
                                                            ],
                                                            Array [
                                                              "SOLVER.KpiParameters.salaryCost",
                                                            ],
                                                            Array [
                                                              "SOLVER.tabCompare.statistic",
                                                            ],
                                                            Array [
                                                              "SOLVER.tabCompare.compareTitle",
                                                            ],
                                                            Array [
                                                              "SOLVER.tabCompare.saveButton",
                                                            ],
                                                            Array [
                                                              "SOLVER.tabCompare.allCrewBases",
                                                            ],
                                                            Array [
                                                              "GLOBAL.dataNotFound.noResults",
                                                            ],
                                                            Array [
                                                              "GLOBAL.dataNotFound.noResults",
                                                            ],
                                                          ],
                                                        }
                                                      }
                                                      type="text"
                                                      value="salaryCost"
                                                    >
                                                      <Select
                                                        arrowRenderer={[Function]}
                                                        autosize={true}
                                                        backspaceRemoves={true}
                                                        backspaceToRemoveMessage="Press backspace to remove {label}"
                                                        className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                        clearAllText="Clear all"
                                                        clearRenderer={[Function]}
                                                        clearValueText="Clear value"
                                                        clearable={true}
                                                        closeOnSelect={true}
                                                        deleteRemoves={true}
                                                        delimiter=","
                                                        disabled={false}
                                                        escapeClearsValue={true}
                                                        filterOptions={[Function]}
                                                        id="1"
                                                        ignoreAccents={true}
                                                        ignoreCase={true}
                                                        inputProps={Object {}}
                                                        inputRef={[Function]}
                                                        instanceId="1"
                                                        isLoading={false}
                                                        joinValues={false}
                                                        labelKey="label"
                                                        matchPos="any"
                                                        matchProp="any"
                                                        menuBuffer={0}
                                                        menuRenderer={[Function]}
                                                        multi={false}
                                                        name="1"
                                                        noResultsText={<UNDEFINED />}
                                                        onAnimationStart={[Function]}
                                                        onBlur={[Function]}
                                                        onBlurResetsInput={true}
                                                        onChange={[Function]}
                                                        onCloseResetsInput={true}
                                                        onFocus={[Function]}
                                                        onSelectResetsInput={true}
                                                        openOnClick={true}
                                                        optionComponent={[Function]}
                                                        options={
                                                          Array [
                                                            Object {
                                                              "label": undefined,
                                                              "value": "salaryCost",
                                                            },
                                                          ]
                                                        }
                                                        pageSize={5}
                                                        placeholder=""
                                                        removeSelected={true}
                                                        required={false}
                                                        rtl={false}
                                                        scrollMenuIntoView={true}
                                                        searchable={true}
                                                        simpleValue={true}
                                                        tabSelectsValue={true}
                                                        trimFilter={true}
                                                        type="text"
                                                        value="salaryCost"
                                                        valueComponent={[Function]}
                                                        valueKey="value"
                                                      >
                                                        <div
                                                          className="Select MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart has-value is-clearable is-searchable Select--single"
                                                        >
                                                          <input
                                                            disabled={false}
                                                            key="hidden.0"
                                                            name="1"
                                                            type="hidden"
                                                            value="salaryCost"
                                                          />
                                                          <div
                                                            className="Select-control"
                                                            onKeyDown={[Function]}
                                                            onMouseDown={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                          >
                                                            <span
                                                              className="Select-multi-value-wrapper"
                                                              id="react-select-1--value"
                                                            >
                                                              <valueComponent
                                                                disabled={false}
                                                                id="react-select-1--value-item"
                                                                instancePrefix="react-select-1-"
                                                                onClick={null}
                                                                placeholder=""
                                                                value={
                                                                  Object {
                                                                    "label": undefined,
                                                                    "value": "salaryCost",
                                                                  }
                                                                }
                                                              >
                                                                <div />
                                                              </valueComponent>
                                                              <AutosizeInput
                                                                aria-activedescendant="react-select-1--value"
                                                                aria-expanded="false"
                                                                aria-haspopup="false"
                                                                aria-owns=""
                                                                className="Select-input"
                                                                id="1"
                                                                injectStyles={true}
                                                                minWidth="5"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                required={false}
                                                                role="combobox"
                                                                value=""
                                                              >
                                                                <div
                                                                  className="Select-input"
                                                                  style={
                                                                    Object {
                                                                      "display": "inline-block",
                                                                    }
                                                                  }
                                                                >
                                                                  <input
                                                                    aria-activedescendant="react-select-1--value"
                                                                    aria-expanded="false"
                                                                    aria-haspopup="false"
                                                                    aria-owns=""
                                                                    id="1"
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    required={false}
                                                                    role="combobox"
                                                                    style={
                                                                      Object {
                                                                        "boxSizing": "content-box",
                                                                        "width": "5px",
                                                                      }
                                                                    }
                                                                    value=""
                                                                  />
                                                                  <div
                                                                    style={
                                                                      Object {
                                                                        "height": 0,
                                                                        "left": 0,
                                                                        "overflow": "scroll",
                                                                        "position": "absolute",
                                                                        "top": 0,
                                                                        "visibility": "hidden",
                                                                        "whiteSpace": "pre",
                                                                      }
                                                                    }
                                                                  />
                                                                </div>
                                                              </AutosizeInput>
                                                            </span>
                                                            <span
                                                              aria-label="Clear value"
                                                              className="Select-clear-zone"
                                                              onMouseDown={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              title="Clear value"
                                                            >
                                                              <WithStyles(ForwardRef(Icon))>
                                                                <ForwardRef(Icon)
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "MuiIcon-colorAction",
                                                                      "colorDisabled": "MuiIcon-colorDisabled",
                                                                      "colorError": "MuiIcon-colorError",
                                                                      "colorPrimary": "MuiIcon-colorPrimary",
                                                                      "colorSecondary": "MuiIcon-colorSecondary",
                                                                      "fontSizeInherit": "MuiIcon-fontSizeInherit",
                                                                      "fontSizeLarge": "MuiIcon-fontSizeLarge",
                                                                      "fontSizeSmall": "MuiIcon-fontSizeSmall",
                                                                      "root": "MuiIcon-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    aria-hidden={true}
                                                                    className="material-icons MuiIcon-root"
                                                                  >
                                                                    clear
                                                                  </span>
                                                                </ForwardRef(Icon)>
                                                              </WithStyles(ForwardRef(Icon))>
                                                            </span>
                                                            <span
                                                              className="Select-arrow-zone"
                                                              onMouseDown={[Function]}
                                                            >
                                                              <WithStyles(ForwardRef(Icon))>
                                                                <ForwardRef(Icon)
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "MuiIcon-colorAction",
                                                                      "colorDisabled": "MuiIcon-colorDisabled",
                                                                      "colorError": "MuiIcon-colorError",
                                                                      "colorPrimary": "MuiIcon-colorPrimary",
                                                                      "colorSecondary": "MuiIcon-colorSecondary",
                                                                      "fontSizeInherit": "MuiIcon-fontSizeInherit",
                                                                      "fontSizeLarge": "MuiIcon-fontSizeLarge",
                                                                      "fontSizeSmall": "MuiIcon-fontSizeSmall",
                                                                      "root": "MuiIcon-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    aria-hidden={true}
                                                                    className="material-icons MuiIcon-root"
                                                                  >
                                                                    arrow_drop_down
                                                                  </span>
                                                                </ForwardRef(Icon)>
                                                              </WithStyles(ForwardRef(Icon))>
                                                            </span>
                                                          </div>
                                                        </div>
                                                      </Select>
                                                    </SelectWrapper>
                                                  </div>
                                                </ForwardRef(InputBase)>
                                              </WithStyles(ForwardRef(InputBase))>
                                            </ForwardRef(Input)>
                                          </WithStyles(ForwardRef(Input))>
                                        </AutoComplete__Input>
                                      </AutoComplete>
                                    </span>
                                  </div>
                                </TdComponent>
                                <TdComponent
                                  className="table-cell table-data"
                                  key="1-1"
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "flex": "100 0 auto",
                                      "left": false,
                                      "maxWidth": null,
                                      "right": false,
                                      "width": "100px",
                                    }
                                  }
                                >
                                  <div
                                    className="rt-td table-cell table-data"
                                    onClick={[Function]}
                                    role="gridcell"
                                    style={
                                      Object {
                                        "flex": "100 0 auto",
                                        "left": false,
                                        "maxWidth": null,
                                        "right": false,
                                        "width": "100px",
                                      }
                                    }
                                  >
                                    <span
                                      title="1785287.83"
                                    >
                                      1785287.83
                                    </span>
                                  </div>
                                </TdComponent>
                                <TdComponent
                                  className="table-cell table-data rthfc-td-fixed rthfc-td-fixed-right rthfc-td-fixed-right-first"
                                  key="2-delete"
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "flex": "80 0 auto",
                                      "left": false,
                                      "maxWidth": "80px",
                                      "right": 0,
                                      "width": "80px",
                                    }
                                  }
                                >
                                  <div
                                    className="rt-td table-cell table-data rthfc-td-fixed rthfc-td-fixed-right rthfc-td-fixed-right-first"
                                    onClick={[Function]}
                                    role="gridcell"
                                    style={
                                      Object {
                                        "flex": "80 0 auto",
                                        "left": false,
                                        "maxWidth": "80px",
                                        "right": 0,
                                        "width": "80px",
                                      }
                                    }
                                  >
                                    <span
                                      title=""
                                    >
                                      <WithStyles(ForwardRef(IconButton))
                                        onClick={[Function]}
                                      >
                                        <ForwardRef(IconButton)
                                          classes={
                                            Object {
                                              "colorInherit": "MuiIconButton-colorInherit",
                                              "colorPrimary": "MuiIconButton-colorPrimary",
                                              "colorSecondary": "MuiIconButton-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "edgeEnd": "MuiIconButton-edgeEnd",
                                              "edgeStart": "MuiIconButton-edgeStart",
                                              "label": "MuiIconButton-label",
                                              "root": "MuiIconButton-root",
                                              "sizeSmall": "MuiIconButton-sizeSmall",
                                            }
                                          }
                                          onClick={[Function]}
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            centerRipple={true}
                                            className="MuiIconButton-root"
                                            disabled={false}
                                            focusRipple={true}
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(ButtonBase)
                                              centerRipple={true}
                                              className="MuiIconButton-root"
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "root": "MuiButtonBase-root",
                                                }
                                              }
                                              disabled={false}
                                              focusRipple={true}
                                              onClick={[Function]}
                                            >
                                              <button
                                                className="MuiButtonBase-root MuiIconButton-root"
                                                disabled={false}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                tabIndex={0}
                                                type="button"
                                              >
                                                <span
                                                  className="MuiIconButton-label"
                                                >
                                                  <Icon
                                                    iconcolor="#0A75C2"
                                                    margin="0"
                                                  >
                                                    <WithStyles(ForwardRef(Icon))
                                                      className="c3"
                                                      iconcolor="#0A75C2"
                                                      margin="0"
                                                    >
                                                      <ForwardRef(Icon)
                                                        className="c3"
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiIcon-colorAction",
                                                            "colorDisabled": "MuiIcon-colorDisabled",
                                                            "colorError": "MuiIcon-colorError",
                                                            "colorPrimary": "MuiIcon-colorPrimary",
                                                            "colorSecondary": "MuiIcon-colorSecondary",
                                                            "fontSizeInherit": "MuiIcon-fontSizeInherit",
                                                            "fontSizeLarge": "MuiIcon-fontSizeLarge",
                                                            "fontSizeSmall": "MuiIcon-fontSizeSmall",
                                                            "root": "MuiIcon-root",
                                                          }
                                                        }
                                                        iconcolor="#0A75C2"
                                                        margin="0"
                                                      >
                                                        <span
                                                          aria-hidden={true}
                                                          className="material-icons MuiIcon-root c3"
                                                          iconcolor="#0A75C2"
                                                          margin="0"
                                                        >
                                                          delete
                                                        </span>
                                                      </ForwardRef(Icon)>
                                                    </WithStyles(ForwardRef(Icon))>
                                                  </Icon>
                                                </span>
                                                <NoSsr>
                                                  <WithStyles(memo)
                                                    center={true}
                                                  >
                                                    <ForwardRef(TouchRipple)
                                                      center={true}
                                                      classes={
                                                        Object {
                                                          "child": "MuiTouchRipple-child",
                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                          "ripple": "MuiTouchRipple-ripple",
                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                          "root": "MuiTouchRipple-root",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        className="MuiTouchRipple-root"
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          component={null}
                                                          exit={true}
                                                        />
                                                      </span>
                                                    </ForwardRef(TouchRipple)>
                                                  </WithStyles(memo)>
                                                </NoSsr>
                                              </button>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(IconButton)>
                                      </WithStyles(ForwardRef(IconButton))>
                                    </span>
                                  </div>
                                </TdComponent>
                              </div>
                            </TrComponent>
                          </div>
                        </TrGroupComponent>
                        <TrGroupComponent
                          key="1"
                        >
                          <div
                            className="rt-tr-group"
                            role="rowgroup"
                          >
                            <TrComponent
                              className="-even"
                              onFocus={[Function]}
                              style={
                                Object {
                                  "zIndex": 2,
                                }
                              }
                            >
                              <div
                                className="rt-tr -even"
                                onFocus={[Function]}
                                role="row"
                                style={
                                  Object {
                                    "zIndex": 2,
                                  }
                                }
                              >
                                <TdComponent
                                  className="table-cell table-data rthfc-td-fixed rthfc-td-fixed-left rthfc-td-fixed-left-last"
                                  key="0-statistics"
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "flex": "250 0 auto",
                                      "left": 0,
                                      "maxWidth": null,
                                      "right": false,
                                      "width": "250px",
                                    }
                                  }
                                >
                                  <div
                                    className="rt-td table-cell table-data rthfc-td-fixed rthfc-td-fixed-left rthfc-td-fixed-left-last"
                                    onClick={[Function]}
                                    role="gridcell"
                                    style={
                                      Object {
                                        "flex": "250 0 auto",
                                        "left": 0,
                                        "maxWidth": null,
                                        "right": false,
                                        "width": "250px",
                                      }
                                    }
                                  >
                                    <span
                                      title=""
                                    >
                                      <AutoComplete
                                        adornmentIcon=""
                                        create={false}
                                        createLabel=""
                                        defaultValue=""
                                        disabled={false}
                                        id="0"
                                        maxLength={1000}
                                        name="0"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        placeholder=""
                                        required={false}
                                        setShrink={[Function]}
                                        style={Object {}}
                                        suggestions={Array []}
                                        t={
                                          [MockFunction] {
                                            "calls": Array [
                                              Array [
                                                "SOLVER.tabCompare.statistic",
                                              ],
                                              Array [
                                                "SOLVER.tabCompare.compareTitle",
                                              ],
                                              Array [
                                                "SOLVER.tabCompare.saveButton",
                                              ],
                                              Array [
                                                "SOLVER.tabCompare.allCrewBases",
                                              ],
                                              Array [
                                                "SOLVER.KpiParameters.salaryCost",
                                              ],
                                              Array [
                                                "SOLVER.KpiParameters.salaryCost",
                                              ],
                                              Array [
                                                "SOLVER.tabCompare.statistic",
                                              ],
                                              Array [
                                                "SOLVER.tabCompare.compareTitle",
                                              ],
                                              Array [
                                                "SOLVER.tabCompare.saveButton",
                                              ],
                                              Array [
                                                "SOLVER.tabCompare.allCrewBases",
                                              ],
                                              Array [
                                                "GLOBAL.dataNotFound.noResults",
                                              ],
                                              Array [
                                                "GLOBAL.dataNotFound.noResults",
                                              ],
                                            ],
                                          }
                                        }
                                        value=""
                                      >
                                        <AutoComplete__Input
                                          disabled={false}
                                          fullWidth={true}
                                          id="0"
                                          inputComponent={[Function]}
                                          inputProps={
                                            Object {
                                              "createComponent": false,
                                              "createLabel": "",
                                              "instanceId": "0",
                                              "isToolTip": undefined,
                                              "name": "0",
                                              "options": Array [],
                                              "required": false,
                                              "simpleValue": true,
                                              "t": [MockFunction] {
                                                "calls": Array [
                                                  Array [
                                                    "SOLVER.tabCompare.statistic",
                                                  ],
                                                  Array [
                                                    "SOLVER.tabCompare.compareTitle",
                                                  ],
                                                  Array [
                                                    "SOLVER.tabCompare.saveButton",
                                                  ],
                                                  Array [
                                                    "SOLVER.tabCompare.allCrewBases",
                                                  ],
                                                  Array [
                                                    "SOLVER.KpiParameters.salaryCost",
                                                  ],
                                                  Array [
                                                    "SOLVER.KpiParameters.salaryCost",
                                                  ],
                                                  Array [
                                                    "SOLVER.tabCompare.statistic",
                                                  ],
                                                  Array [
                                                    "SOLVER.tabCompare.compareTitle",
                                                  ],
                                                  Array [
                                                    "SOLVER.tabCompare.saveButton",
                                                  ],
                                                  Array [
                                                    "SOLVER.tabCompare.allCrewBases",
                                                  ],
                                                  Array [
                                                    "GLOBAL.dataNotFound.noResults",
                                                  ],
                                                  Array [
                                                    "GLOBAL.dataNotFound.noResults",
                                                  ],
                                                ],
                                              },
                                              "value": "",
                                            }
                                          }
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          onKeyPress={[Function]}
                                          placeholder=""
                                          required={false}
                                          startAdornment={
                                            <UNDEFINED
                                              position="start"
                                            >
                                              
                                            </UNDEFINED>
                                          }
                                          style={Object {}}
                                          value=""
                                        >
                                          <WithStyles(ForwardRef(Input))
                                            className="c2"
                                            disabled={false}
                                            fullWidth={true}
                                            id="0"
                                            inputComponent={[Function]}
                                            inputProps={
                                              Object {
                                                "createComponent": false,
                                                "createLabel": "",
                                                "instanceId": "0",
                                                "isToolTip": undefined,
                                                "name": "0",
                                                "options": Array [],
                                                "required": false,
                                                "simpleValue": true,
                                                "t": [MockFunction] {
                                                  "calls": Array [
                                                    Array [
                                                      "SOLVER.tabCompare.statistic",
                                                    ],
                                                    Array [
                                                      "SOLVER.tabCompare.compareTitle",
                                                    ],
                                                    Array [
                                                      "SOLVER.tabCompare.saveButton",
                                                    ],
                                                    Array [
                                                      "SOLVER.tabCompare.allCrewBases",
                                                    ],
                                                    Array [
                                                      "SOLVER.KpiParameters.salaryCost",
                                                    ],
                                                    Array [
                                                      "SOLVER.KpiParameters.salaryCost",
                                                    ],
                                                    Array [
                                                      "SOLVER.tabCompare.statistic",
                                                    ],
                                                    Array [
                                                      "SOLVER.tabCompare.compareTitle",
                                                    ],
                                                    Array [
                                                      "SOLVER.tabCompare.saveButton",
                                                    ],
                                                    Array [
                                                      "SOLVER.tabCompare.allCrewBases",
                                                    ],
                                                    Array [
                                                      "GLOBAL.dataNotFound.noResults",
                                                    ],
                                                    Array [
                                                      "GLOBAL.dataNotFound.noResults",
                                                    ],
                                                  ],
                                                },
                                                "value": "",
                                              }
                                            }
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            onKeyPress={[Function]}
                                            placeholder=""
                                            required={false}
                                            startAdornment={
                                              <UNDEFINED
                                                position="start"
                                              >
                                                
                                              </UNDEFINED>
                                            }
                                            style={Object {}}
                                            value=""
                                          >
                                            <ForwardRef(Input)
                                              className="c2"
                                              classes={
                                                Object {
                                                  "colorSecondary": "MuiInput-colorSecondary",
                                                  "disabled": "Mui-disabled",
                                                  "error": "Mui-error",
                                                  "focused": "Mui-focused",
                                                  "formControl": "MuiInput-formControl",
                                                  "fullWidth": "MuiInput-fullWidth",
                                                  "input": "MuiInput-input",
                                                  "inputMarginDense": "MuiInput-inputMarginDense",
                                                  "inputMultiline": "MuiInput-inputMultiline",
                                                  "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                  "marginDense": "MuiInput-marginDense",
                                                  "multiline": "MuiInput-multiline",
                                                  "root": "MuiInput-root",
                                                  "underline": "MuiInput-underline",
                                                }
                                              }
                                              disabled={false}
                                              fullWidth={true}
                                              id="0"
                                              inputComponent={[Function]}
                                              inputProps={
                                                Object {
                                                  "createComponent": false,
                                                  "createLabel": "",
                                                  "instanceId": "0",
                                                  "isToolTip": undefined,
                                                  "name": "0",
                                                  "options": Array [],
                                                  "required": false,
                                                  "simpleValue": true,
                                                  "t": [MockFunction] {
                                                    "calls": Array [
                                                      Array [
                                                        "SOLVER.tabCompare.statistic",
                                                      ],
                                                      Array [
                                                        "SOLVER.tabCompare.compareTitle",
                                                      ],
                                                      Array [
                                                        "SOLVER.tabCompare.saveButton",
                                                      ],
                                                      Array [
                                                        "SOLVER.tabCompare.allCrewBases",
                                                      ],
                                                      Array [
                                                        "SOLVER.KpiParameters.salaryCost",
                                                      ],
                                                      Array [
                                                        "SOLVER.KpiParameters.salaryCost",
                                                      ],
                                                      Array [
                                                        "SOLVER.tabCompare.statistic",
                                                      ],
                                                      Array [
                                                        "SOLVER.tabCompare.compareTitle",
                                                      ],
                                                      Array [
                                                        "SOLVER.tabCompare.saveButton",
                                                      ],
                                                      Array [
                                                        "SOLVER.tabCompare.allCrewBases",
                                                      ],
                                                      Array [
                                                        "GLOBAL.dataNotFound.noResults",
                                                      ],
                                                      Array [
                                                        "GLOBAL.dataNotFound.noResults",
                                                      ],
                                                    ],
                                                  },
                                                  "value": "",
                                                }
                                              }
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              onKeyPress={[Function]}
                                              placeholder=""
                                              required={false}
                                              startAdornment={
                                                <UNDEFINED
                                                  position="start"
                                                >
                                                  
                                                </UNDEFINED>
                                              }
                                              style={Object {}}
                                              value=""
                                            >
                                              <WithStyles(ForwardRef(InputBase))
                                                className="c2"
                                                classes={
                                                  Object {
                                                    "colorSecondary": "MuiInput-colorSecondary",
                                                    "disabled": "Mui-disabled",
                                                    "error": "Mui-error",
                                                    "focused": "Mui-focused",
                                                    "formControl": "MuiInput-formControl",
                                                    "fullWidth": "MuiInput-fullWidth",
                                                    "input": "MuiInput-input",
                                                    "inputMarginDense": "MuiInput-inputMarginDense",
                                                    "inputMultiline": "MuiInput-inputMultiline",
                                                    "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                    "marginDense": "MuiInput-marginDense",
                                                    "multiline": "MuiInput-multiline",
                                                    "root": "MuiInput-root MuiInput-underline",
                                                    "underline": null,
                                                  }
                                                }
                                                disabled={false}
                                                fullWidth={true}
                                                id="0"
                                                inputComponent={[Function]}
                                                inputProps={
                                                  Object {
                                                    "createComponent": false,
                                                    "createLabel": "",
                                                    "instanceId": "0",
                                                    "isToolTip": undefined,
                                                    "name": "0",
                                                    "options": Array [],
                                                    "required": false,
                                                    "simpleValue": true,
                                                    "t": [MockFunction] {
                                                      "calls": Array [
                                                        Array [
                                                          "SOLVER.tabCompare.statistic",
                                                        ],
                                                        Array [
                                                          "SOLVER.tabCompare.compareTitle",
                                                        ],
                                                        Array [
                                                          "SOLVER.tabCompare.saveButton",
                                                        ],
                                                        Array [
                                                          "SOLVER.tabCompare.allCrewBases",
                                                        ],
                                                        Array [
                                                          "SOLVER.KpiParameters.salaryCost",
                                                        ],
                                                        Array [
                                                          "SOLVER.KpiParameters.salaryCost",
                                                        ],
                                                        Array [
                                                          "SOLVER.tabCompare.statistic",
                                                        ],
                                                        Array [
                                                          "SOLVER.tabCompare.compareTitle",
                                                        ],
                                                        Array [
                                                          "SOLVER.tabCompare.saveButton",
                                                        ],
                                                        Array [
                                                          "SOLVER.tabCompare.allCrewBases",
                                                        ],
                                                        Array [
                                                          "GLOBAL.dataNotFound.noResults",
                                                        ],
                                                        Array [
                                                          "GLOBAL.dataNotFound.noResults",
                                                        ],
                                                      ],
                                                    },
                                                    "value": "",
                                                  }
                                                }
                                                multiline={false}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                onKeyPress={[Function]}
                                                placeholder=""
                                                required={false}
                                                startAdornment={
                                                  <UNDEFINED
                                                    position="start"
                                                  >
                                                    
                                                  </UNDEFINED>
                                                }
                                                style={Object {}}
                                                type="text"
                                                value=""
                                              >
                                                <ForwardRef(InputBase)
                                                  className="c2"
                                                  classes={
                                                    Object {
                                                      "adornedEnd": "MuiInputBase-adornedEnd",
                                                      "adornedStart": "MuiInputBase-adornedStart",
                                                      "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                      "disabled": "Mui-disabled Mui-disabled",
                                                      "error": "Mui-error Mui-error",
                                                      "focused": "Mui-focused Mui-focused",
                                                      "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                      "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                      "input": "MuiInputBase-input MuiInput-input",
                                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                      "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                      "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                      "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                      "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                      "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                      "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                    }
                                                  }
                                                  disabled={false}
                                                  fullWidth={true}
                                                  id="0"
                                                  inputComponent={[Function]}
                                                  inputProps={
                                                    Object {
                                                      "createComponent": false,
                                                      "createLabel": "",
                                                      "instanceId": "0",
                                                      "isToolTip": undefined,
                                                      "name": "0",
                                                      "options": Array [],
                                                      "required": false,
                                                      "simpleValue": true,
                                                      "t": [MockFunction] {
                                                        "calls": Array [
                                                          Array [
                                                            "SOLVER.tabCompare.statistic",
                                                          ],
                                                          Array [
                                                            "SOLVER.tabCompare.compareTitle",
                                                          ],
                                                          Array [
                                                            "SOLVER.tabCompare.saveButton",
                                                          ],
                                                          Array [
                                                            "SOLVER.tabCompare.allCrewBases",
                                                          ],
                                                          Array [
                                                            "SOLVER.KpiParameters.salaryCost",
                                                          ],
                                                          Array [
                                                            "SOLVER.KpiParameters.salaryCost",
                                                          ],
                                                          Array [
                                                            "SOLVER.tabCompare.statistic",
                                                          ],
                                                          Array [
                                                            "SOLVER.tabCompare.compareTitle",
                                                          ],
                                                          Array [
                                                            "SOLVER.tabCompare.saveButton",
                                                          ],
                                                          Array [
                                                            "SOLVER.tabCompare.allCrewBases",
                                                          ],
                                                          Array [
                                                            "GLOBAL.dataNotFound.noResults",
                                                          ],
                                                          Array [
                                                            "GLOBAL.dataNotFound.noResults",
                                                          ],
                                                        ],
                                                      },
                                                      "value": "",
                                                    }
                                                  }
                                                  multiline={false}
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onClick={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyPress={[Function]}
                                                  placeholder=""
                                                  required={false}
                                                  startAdornment={
                                                    <UNDEFINED
                                                      position="start"
                                                    >
                                                      
                                                    </UNDEFINED>
                                                  }
                                                  style={Object {}}
                                                  type="text"
                                                  value=""
                                                >
                                                  <div
                                                    className="MuiInputBase-root MuiInput-root MuiInput-underline c2 MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-adornedStart"
                                                    onClick={[Function]}
                                                    onKeyPress={[Function]}
                                                    required={false}
                                                    style={Object {}}
                                                  >
                                                    <WithStyles(ForwardRef(InputAdornment))
                                                      position="start"
                                                    >
                                                      <ForwardRef(InputAdornment)
                                                        classes={
                                                          Object {
                                                            "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                            "filled": "MuiInputAdornment-filled",
                                                            "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                            "marginDense": "MuiInputAdornment-marginDense",
                                                            "positionEnd": "MuiInputAdornment-positionEnd",
                                                            "positionStart": "MuiInputAdornment-positionStart",
                                                            "root": "MuiInputAdornment-root",
                                                          }
                                                        }
                                                        position="start"
                                                      >
                                                        <div
                                                          className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                                        >
                                                          <WithStyles(ForwardRef(Typography))
                                                            color="textSecondary"
                                                          >
                                                            <ForwardRef(Typography)
                                                              classes={
                                                                Object {
                                                                  "alignCenter": "MuiTypography-alignCenter",
                                                                  "alignJustify": "MuiTypography-alignJustify",
                                                                  "alignLeft": "MuiTypography-alignLeft",
                                                                  "alignRight": "MuiTypography-alignRight",
                                                                  "body1": "MuiTypography-body1",
                                                                  "body2": "MuiTypography-body2",
                                                                  "button": "MuiTypography-button",
                                                                  "caption": "MuiTypography-caption",
                                                                  "colorError": "MuiTypography-colorError",
                                                                  "colorInherit": "MuiTypography-colorInherit",
                                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                  "displayBlock": "MuiTypography-displayBlock",
                                                                  "displayInline": "MuiTypography-displayInline",
                                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                                  "h1": "MuiTypography-h1",
                                                                  "h2": "MuiTypography-h2",
                                                                  "h3": "MuiTypography-h3",
                                                                  "h4": "MuiTypography-h4",
                                                                  "h5": "MuiTypography-h5",
                                                                  "h6": "MuiTypography-h6",
                                                                  "noWrap": "MuiTypography-noWrap",
                                                                  "overline": "MuiTypography-overline",
                                                                  "paragraph": "MuiTypography-paragraph",
                                                                  "root": "MuiTypography-root",
                                                                  "srOnly": "MuiTypography-srOnly",
                                                                  "subtitle1": "MuiTypography-subtitle1",
                                                                  "subtitle2": "MuiTypography-subtitle2",
                                                                }
                                                              }
                                                              color="textSecondary"
                                                            >
                                                              <p
                                                                className="MuiTypography-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                                                              />
                                                            </ForwardRef(Typography)>
                                                          </WithStyles(ForwardRef(Typography))>
                                                        </div>
                                                      </ForwardRef(InputAdornment)>
                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                    <SelectWrapper
                                                      className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                      createComponent={false}
                                                      createLabel=""
                                                      disabled={false}
                                                      id="0"
                                                      inputRef={[Function]}
                                                      instanceId="0"
                                                      name="0"
                                                      onAnimationStart={[Function]}
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      options={Array []}
                                                      placeholder=""
                                                      required={false}
                                                      simpleValue={true}
                                                      t={
                                                        [MockFunction] {
                                                          "calls": Array [
                                                            Array [
                                                              "SOLVER.tabCompare.statistic",
                                                            ],
                                                            Array [
                                                              "SOLVER.tabCompare.compareTitle",
                                                            ],
                                                            Array [
                                                              "SOLVER.tabCompare.saveButton",
                                                            ],
                                                            Array [
                                                              "SOLVER.tabCompare.allCrewBases",
                                                            ],
                                                            Array [
                                                              "SOLVER.KpiParameters.salaryCost",
                                                            ],
                                                            Array [
                                                              "SOLVER.KpiParameters.salaryCost",
                                                            ],
                                                            Array [
                                                              "SOLVER.tabCompare.statistic",
                                                            ],
                                                            Array [
                                                              "SOLVER.tabCompare.compareTitle",
                                                            ],
                                                            Array [
                                                              "SOLVER.tabCompare.saveButton",
                                                            ],
                                                            Array [
                                                              "SOLVER.tabCompare.allCrewBases",
                                                            ],
                                                            Array [
                                                              "GLOBAL.dataNotFound.noResults",
                                                            ],
                                                            Array [
                                                              "GLOBAL.dataNotFound.noResults",
                                                            ],
                                                          ],
                                                        }
                                                      }
                                                      type="text"
                                                      value=""
                                                    >
                                                      <Select
                                                        arrowRenderer={[Function]}
                                                        autosize={true}
                                                        backspaceRemoves={true}
                                                        backspaceToRemoveMessage="Press backspace to remove {label}"
                                                        className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                        clearAllText="Clear all"
                                                        clearRenderer={[Function]}
                                                        clearValueText="Clear value"
                                                        clearable={true}
                                                        closeOnSelect={true}
                                                        deleteRemoves={true}
                                                        delimiter=","
                                                        disabled={false}
                                                        escapeClearsValue={true}
                                                        filterOptions={[Function]}
                                                        id="0"
                                                        ignoreAccents={true}
                                                        ignoreCase={true}
                                                        inputProps={Object {}}
                                                        inputRef={[Function]}
                                                        instanceId="0"
                                                        isLoading={false}
                                                        joinValues={false}
                                                        labelKey="label"
                                                        matchPos="any"
                                                        matchProp="any"
                                                        menuBuffer={0}
                                                        menuRenderer={[Function]}
                                                        multi={false}
                                                        name="0"
                                                        noResultsText={<UNDEFINED />}
                                                        onAnimationStart={[Function]}
                                                        onBlur={[Function]}
                                                        onBlurResetsInput={true}
                                                        onChange={[Function]}
                                                        onCloseResetsInput={true}
                                                        onFocus={[Function]}
                                                        onSelectResetsInput={true}
                                                        openOnClick={true}
                                                        optionComponent={[Function]}
                                                        options={Array []}
                                                        pageSize={5}
                                                        placeholder=""
                                                        removeSelected={true}
                                                        required={false}
                                                        rtl={false}
                                                        scrollMenuIntoView={true}
                                                        searchable={true}
                                                        simpleValue={true}
                                                        tabSelectsValue={true}
                                                        trimFilter={true}
                                                        type="text"
                                                        value=""
                                                        valueComponent={[Function]}
                                                        valueKey="value"
                                                      >
                                                        <div
                                                          className="Select MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart is-clearable is-searchable Select--single"
                                                        >
                                                          <div
                                                            className="Select-control"
                                                            onKeyDown={[Function]}
                                                            onMouseDown={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                          >
                                                            <span
                                                              className="Select-multi-value-wrapper"
                                                              id="react-select-0--value"
                                                            >
                                                              <div
                                                                className="Select-placeholder"
                                                              />
                                                              <AutosizeInput
                                                                aria-activedescendant="react-select-0--value"
                                                                aria-expanded="false"
                                                                aria-haspopup="false"
                                                                aria-owns=""
                                                                className="Select-input"
                                                                id="0"
                                                                injectStyles={true}
                                                                minWidth="5"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                required={false}
                                                                role="combobox"
                                                                value=""
                                                              >
                                                                <div
                                                                  className="Select-input"
                                                                  style={
                                                                    Object {
                                                                      "display": "inline-block",
                                                                    }
                                                                  }
                                                                >
                                                                  <input
                                                                    aria-activedescendant="react-select-0--value"
                                                                    aria-expanded="false"
                                                                    aria-haspopup="false"
                                                                    aria-owns=""
                                                                    id="0"
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    required={false}
                                                                    role="combobox"
                                                                    style={
                                                                      Object {
                                                                        "boxSizing": "content-box",
                                                                        "width": "5px",
                                                                      }
                                                                    }
                                                                    value=""
                                                                  />
                                                                  <div
                                                                    style={
                                                                      Object {
                                                                        "height": 0,
                                                                        "left": 0,
                                                                        "overflow": "scroll",
                                                                        "position": "absolute",
                                                                        "top": 0,
                                                                        "visibility": "hidden",
                                                                        "whiteSpace": "pre",
                                                                      }
                                                                    }
                                                                  />
                                                                </div>
                                                              </AutosizeInput>
                                                            </span>
                                                            <span
                                                              className="Select-arrow-zone"
                                                              onMouseDown={[Function]}
                                                            >
                                                              <WithStyles(ForwardRef(Icon))>
                                                                <ForwardRef(Icon)
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "MuiIcon-colorAction",
                                                                      "colorDisabled": "MuiIcon-colorDisabled",
                                                                      "colorError": "MuiIcon-colorError",
                                                                      "colorPrimary": "MuiIcon-colorPrimary",
                                                                      "colorSecondary": "MuiIcon-colorSecondary",
                                                                      "fontSizeInherit": "MuiIcon-fontSizeInherit",
                                                                      "fontSizeLarge": "MuiIcon-fontSizeLarge",
                                                                      "fontSizeSmall": "MuiIcon-fontSizeSmall",
                                                                      "root": "MuiIcon-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    aria-hidden={true}
                                                                    className="material-icons MuiIcon-root"
                                                                  >
                                                                    arrow_drop_down
                                                                  </span>
                                                                </ForwardRef(Icon)>
                                                              </WithStyles(ForwardRef(Icon))>
                                                            </span>
                                                          </div>
                                                        </div>
                                                      </Select>
                                                    </SelectWrapper>
                                                  </div>
                                                </ForwardRef(InputBase)>
                                              </WithStyles(ForwardRef(InputBase))>
                                            </ForwardRef(Input)>
                                          </WithStyles(ForwardRef(Input))>
                                        </AutoComplete__Input>
                                      </AutoComplete>
                                    </span>
                                  </div>
                                </TdComponent>
                                <TdComponent
                                  className="table-cell table-data"
                                  key="1-1"
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "flex": "100 0 auto",
                                      "left": false,
                                      "maxWidth": null,
                                      "right": false,
                                      "width": "100px",
                                    }
                                  }
                                >
                                  <div
                                    className="rt-td table-cell table-data"
                                    onClick={[Function]}
                                    role="gridcell"
                                    style={
                                      Object {
                                        "flex": "100 0 auto",
                                        "left": false,
                                        "maxWidth": null,
                                        "right": false,
                                        "width": "100px",
                                      }
                                    }
                                  >
                                    <span />
                                  </div>
                                </TdComponent>
                                <TdComponent
                                  className="table-cell table-data rthfc-td-fixed rthfc-td-fixed-right rthfc-td-fixed-right-first"
                                  key="2-delete"
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "flex": "80 0 auto",
                                      "left": false,
                                      "maxWidth": "80px",
                                      "right": 0,
                                      "width": "80px",
                                    }
                                  }
                                >
                                  <div
                                    className="rt-td table-cell table-data rthfc-td-fixed rthfc-td-fixed-right rthfc-td-fixed-right-first"
                                    onClick={[Function]}
                                    role="gridcell"
                                    style={
                                      Object {
                                        "flex": "80 0 auto",
                                        "left": false,
                                        "maxWidth": "80px",
                                        "right": 0,
                                        "width": "80px",
                                      }
                                    }
                                  >
                                    <span
                                      title=""
                                    />
                                  </div>
                                </TdComponent>
                              </div>
                            </TrComponent>
                          </div>
                        </TrGroupComponent>
                        <TrGroupComponent
                          key="0"
                        >
                          <div
                            className="rt-tr-group"
                            role="rowgroup"
                          >
                            <TrComponent
                              className="-padRow -odd"
                              style={Object {}}
                            >
                              <div
                                className="rt-tr -padRow -odd"
                                role="row"
                                style={Object {}}
                              >
                                <TdComponent
                                  className="table-cell table-data rthfc-td-fixed rthfc-td-fixed-left rthfc-td-fixed-left-last"
                                  key="0-statistics"
                                  style={
                                    Object {
                                      "flex": "250 0 auto",
                                      "left": 0,
                                      "maxWidth": null,
                                      "right": false,
                                      "width": "250px",
                                    }
                                  }
                                >
                                  <div
                                    className="rt-td table-cell table-data rthfc-td-fixed rthfc-td-fixed-left rthfc-td-fixed-left-last"
                                    role="gridcell"
                                    style={
                                      Object {
                                        "flex": "250 0 auto",
                                        "left": 0,
                                        "maxWidth": null,
                                        "right": false,
                                        "width": "250px",
                                      }
                                    }
                                  >
                                    <span>
                                       
                                    </span>
                                  </div>
                                </TdComponent>
                                <TdComponent
                                  className="table-cell table-data"
                                  key="1-1"
                                  style={
                                    Object {
                                      "flex": "100 0 auto",
                                      "left": false,
                                      "maxWidth": null,
                                      "right": false,
                                      "width": "100px",
                                    }
                                  }
                                >
                                  <div
                                    className="rt-td table-cell table-data"
                                    role="gridcell"
                                    style={
                                      Object {
                                        "flex": "100 0 auto",
                                        "left": false,
                                        "maxWidth": null,
                                        "right": false,
                                        "width": "100px",
                                      }
                                    }
                                  >
                                    <span>
                                       
                                    </span>
                                  </div>
                                </TdComponent>
                                <TdComponent
                                  className="table-cell table-data rthfc-td-fixed rthfc-td-fixed-right rthfc-td-fixed-right-first"
                                  key="2-delete"
                                  style={
                                    Object {
                                      "flex": "80 0 auto",
                                      "left": false,
                                      "maxWidth": "80px",
                                      "right": 0,
                                      "width": "80px",
                                    }
                                  }
                                >
                                  <div
                                    className="rt-td table-cell table-data rthfc-td-fixed rthfc-td-fixed-right rthfc-td-fixed-right-first"
                                    role="gridcell"
                                    style={
                                      Object {
                                        "flex": "80 0 auto",
                                        "left": false,
                                        "maxWidth": "80px",
                                        "right": 0,
                                        "width": "80px",
                                      }
                                    }
                                  >
                                    <span>
                                       
                                    </span>
                                  </div>
                                </TdComponent>
                              </div>
                            </TrComponent>
                          </div>
                        </TrGroupComponent>
                      </div>
                    </Tbody>
                  </div>
                </TableComponent>
                <LoadingComponent
                  loading={false}
                  loadingText="Loading..."
                >
                  <div
                    className="-loading"
                  >
                    <div
                      className="-loading-inner"
                    >
                      Loading...
                    </div>
                  </div>
                </LoadingComponent>
              </div>
            </ReactTable>
          </ReactTableFixedColumns>
        </FixedColumnTable>
      </div>
    </div>
  </Compare__Container>
</Compare>
`;
