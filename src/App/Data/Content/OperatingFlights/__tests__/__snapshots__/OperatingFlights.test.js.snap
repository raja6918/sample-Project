// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Operating Flights Component renders correctly with an initial state 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

<ErrorHandler
  closeDeleteDialog={[MockFunction]}
  deleteDialogIsOpen={false}
  deleteDialogItem={
    Object {
      "_original": Object {},
      "flightDesignator": "AR1037",
      "flightInstances": Array [
        1,
        2,
      ],
      "id": 1,
    }
  }
  editMode={false}
  exitDeleteDialog={[MockFunction]}
  handleDeleteError={[MockFunction]}
  openDeleteDialog={[MockFunction]}
  openItemId="1"
  openItemName="Test Scenario"
  reportError={[MockFunction]}
  t={
    [MockFunction] {
      "calls": Array [
        Array [
          "GLOBAL.form.close",
        ],
        Array [
          "DATA.operatingFlights.type",
        ],
        Array [
          "DIALOG.DELETE_DATA.title",
          Object {
            "name": " ",
            "type": "",
          },
        ],
        Array [
          "DATA.operatingFlights.type",
        ],
        Array [
          "ERRORS.GENERIC_DELETE_DUPLICATE_ERROR.message",
          Object {
            "type": "",
          },
        ],
        Array [
          "DATA.operatingFlights.UTC",
        ],
        Array [
          "DATA.operatingFlights.LT",
        ],
        Array [
          "DATA.operatingFlights.LT",
        ],
        Array [
          "DATA.operatingFlights.UTC",
        ],
        Array [
          "DATA.operatingFlights.UTC",
        ],
        Array [
          "DATA.operatingFlights.LT",
        ],
        Array [
          "DATA.operatingFlights.LT",
        ],
        Array [
          "DATA.operatingFlights.UTC",
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": "",
        },
        Object {
          "type": "return",
          "value": "",
        },
        Object {
          "type": "return",
          "value": "",
        },
        Object {
          "type": "return",
          "value": "",
        },
        Object {
          "type": "return",
          "value": "",
        },
        Object {
          "type": "return",
          "value": "",
        },
        Object {
          "type": "return",
          "value": "",
        },
        Object {
          "type": "return",
          "value": "",
        },
        Object {
          "type": "return",
          "value": "",
        },
        Object {
          "type": "return",
          "value": "",
        },
        Object {
          "type": "return",
          "value": "",
        },
        Object {
          "type": "return",
          "value": "",
        },
        Object {
          "type": "return",
          "value": "",
        },
      ],
    }
  }
>
  <withDeleteHandler
    clearErrorNotification={[Function]}
    closeDeleteDialog={[MockFunction]}
    deleteDialogIsOpen={false}
    deleteDialogItem={
      Object {
        "_original": Object {},
        "flightDesignator": "AR1037",
        "flightInstances": Array [
          1,
          2,
        ],
        "id": 1,
      }
    }
    editMode={false}
    exitDeleteDialog={[MockFunction]}
    handleDeleteError={[MockFunction]}
    inlineError={null}
    openDeleteDialog={[MockFunction]}
    openItemId="1"
    openItemName="Test Scenario"
    reportError={[MockFunction]}
    t={
      [MockFunction] {
        "calls": Array [
          Array [
            "GLOBAL.form.close",
          ],
          Array [
            "DATA.operatingFlights.type",
          ],
          Array [
            "DIALOG.DELETE_DATA.title",
            Object {
              "name": " ",
              "type": "",
            },
          ],
          Array [
            "DATA.operatingFlights.type",
          ],
          Array [
            "ERRORS.GENERIC_DELETE_DUPLICATE_ERROR.message",
            Object {
              "type": "",
            },
          ],
          Array [
            "DATA.operatingFlights.UTC",
          ],
          Array [
            "DATA.operatingFlights.LT",
          ],
          Array [
            "DATA.operatingFlights.LT",
          ],
          Array [
            "DATA.operatingFlights.UTC",
          ],
          Array [
            "DATA.operatingFlights.UTC",
          ],
          Array [
            "DATA.operatingFlights.LT",
          ],
          Array [
            "DATA.operatingFlights.LT",
          ],
          Array [
            "DATA.operatingFlights.UTC",
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": "",
          },
          Object {
            "type": "return",
            "value": "",
          },
          Object {
            "type": "return",
            "value": "",
          },
          Object {
            "type": "return",
            "value": "",
          },
          Object {
            "type": "return",
            "value": "",
          },
          Object {
            "type": "return",
            "value": "",
          },
          Object {
            "type": "return",
            "value": "",
          },
          Object {
            "type": "return",
            "value": "",
          },
          Object {
            "type": "return",
            "value": "",
          },
          Object {
            "type": "return",
            "value": "",
          },
          Object {
            "type": "return",
            "value": "",
          },
          Object {
            "type": "return",
            "value": "",
          },
          Object {
            "type": "return",
            "value": "",
          },
        ],
      }
    }
  >
    <OperatingFlights
      clearErrorNotification={[Function]}
      closeDeleteDialog={[MockFunction]}
      deleteDialogIsOpen={false}
      deleteDialogItem={
        Object {
          "_original": Object {},
          "flightDesignator": "AR1037",
          "flightInstances": Array [
            1,
            2,
          ],
          "id": 1,
        }
      }
      editMode={false}
      exitDeleteDialog={[MockFunction]}
      handleDeleteError={[MockFunction]}
      inlineError={null}
      openDeleteDialog={[MockFunction]}
      openItemId="1"
      openItemName="Test Scenario"
      reportError={[MockFunction]}
      t={
        [MockFunction] {
          "calls": Array [
            Array [
              "GLOBAL.form.close",
            ],
            Array [
              "DATA.operatingFlights.type",
            ],
            Array [
              "DIALOG.DELETE_DATA.title",
              Object {
                "name": " ",
                "type": "",
              },
            ],
            Array [
              "DATA.operatingFlights.type",
            ],
            Array [
              "ERRORS.GENERIC_DELETE_DUPLICATE_ERROR.message",
              Object {
                "type": "",
              },
            ],
            Array [
              "DATA.operatingFlights.UTC",
            ],
            Array [
              "DATA.operatingFlights.LT",
            ],
            Array [
              "DATA.operatingFlights.LT",
            ],
            Array [
              "DATA.operatingFlights.UTC",
            ],
            Array [
              "DATA.operatingFlights.UTC",
            ],
            Array [
              "DATA.operatingFlights.LT",
            ],
            Array [
              "DATA.operatingFlights.LT",
            ],
            Array [
              "DATA.operatingFlights.UTC",
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": "",
            },
            Object {
              "type": "return",
              "value": "",
            },
            Object {
              "type": "return",
              "value": "",
            },
            Object {
              "type": "return",
              "value": "",
            },
            Object {
              "type": "return",
              "value": "",
            },
            Object {
              "type": "return",
              "value": "",
            },
            Object {
              "type": "return",
              "value": "",
            },
            Object {
              "type": "return",
              "value": "",
            },
            Object {
              "type": "return",
              "value": "",
            },
            Object {
              "type": "return",
              "value": "",
            },
            Object {
              "type": "return",
              "value": "",
            },
            Object {
              "type": "return",
              "value": "",
            },
            Object {
              "type": "return",
              "value": "",
            },
          ],
        }
      }
    >
      <Loading>
        <Loading__Overlay>
          <div
            className="c0"
          >
            <ReactLoadingComponent
              fill="#ed4d15"
              height={200}
              type="rings"
              width={200}
            >
              <Component
                fill="#ed4d15"
                height={200}
                type="rings"
                width={200}
              >
                <Component
                  fill="#ed4d15"
                  height={200}
                  type="rings"
                  width={200}
                >
                  <svg
                    height={200}
                    stroke="#ed4d15"
                    viewBox="0 0 45 45"
                    width={200}
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <g
                      fill="none"
                      fillRule="evenodd"
                      strokeWidth="2"
                      transform="translate(1 1)"
                    >
                      <circle
                        cx="22"
                        cy="22"
                        r="6"
                        strokeOpacity="0"
                      >
                        <animate
                          attributeName="r"
                          begin="1.5s"
                          calcMode="linear"
                          dur="3s"
                          repeatCount="indefinite"
                          values="6;22"
                        />
                        <animate
                          attributeName="stroke-opacity"
                          begin="1.5s"
                          calcMode="linear"
                          dur="3s"
                          repeatCount="indefinite"
                          values="1;0"
                        />
                        <animate
                          attributeName="stroke-width"
                          begin="1.5s"
                          calcMode="linear"
                          dur="3s"
                          repeatCount="indefinite"
                          values="2;0"
                        />
                      </circle>
                      <circle
                        cx="22"
                        cy="22"
                        r="6"
                        strokeOpacity="0"
                      >
                        <animate
                          attributeName="r"
                          begin="3s"
                          calcMode="linear"
                          dur="3s"
                          repeatCount="indefinite"
                          values="6;22"
                        />
                        <animate
                          attributeName="stroke-opacity"
                          begin="3s"
                          calcMode="linear"
                          dur="3s"
                          repeatCount="indefinite"
                          values="1;0"
                        />
                        <animate
                          attributeName="stroke-width"
                          begin="3s"
                          calcMode="linear"
                          dur="3s"
                          repeatCount="indefinite"
                          values="2;0"
                        />
                      </circle>
                      <circle
                        cx="22"
                        cy="22"
                        r="8"
                      >
                        <animate
                          attributeName="r"
                          begin="0s"
                          calcMode="linear"
                          dur="1.5s"
                          repeatCount="indefinite"
                          values="6;1;2;3;4;5;6"
                        />
                      </circle>
                    </g>
                  </svg>
                </Component>
              </Component>
            </ReactLoadingComponent>
          </div>
        </Loading__Overlay>
      </Loading>
    </OperatingFlights>
    <ErrorDialog
      bodyText=""
      handleOk={[Function]}
      okText=""
      onClose={[Function]}
      onExited={[Function]}
      open={false}
      title=""
    >
      <WithStyles(Base)
        disableBackdropClick={true}
        modalCommand={true}
        onClose={[Function]}
        onExited={[Function]}
        open={false}
        title=""
      >
        <Base
          className=""
          classes={
            Object {
              "dialogPaper": "Base-dialogPaper-1",
            }
          }
          disableBackdropClick={true}
          disableEscapeKeyDown={null}
          handleCancel={[Function]}
          id={null}
          modalCommand={true}
          onClose={[Function]}
          onEntered={[Function]}
          onExited={[Function]}
          open={false}
          subTitle={false}
          title=""
        >
          <WithStyles(ForwardRef(Dialog))
            aria-labelledby={null}
            className=""
            classes={
              Object {
                "paper": "Base-dialogPaper-1",
              }
            }
            disableBackdropClick={true}
            disableEscapeKeyDown={null}
            onClose={[Function]}
            onEntered={[Function]}
            onExited={[Function]}
            open={false}
          >
            <ForwardRef(Dialog)
              aria-labelledby={null}
              className=""
              classes={
                Object {
                  "container": "MuiDialog-container",
                  "paper": "MuiDialog-paper Base-dialogPaper-1",
                  "paperFullScreen": "MuiDialog-paperFullScreen",
                  "paperFullWidth": "MuiDialog-paperFullWidth",
                  "paperScrollBody": "MuiDialog-paperScrollBody",
                  "paperScrollPaper": "MuiDialog-paperScrollPaper",
                  "paperWidthFalse": "MuiDialog-paperWidthFalse",
                  "paperWidthLg": "MuiDialog-paperWidthLg",
                  "paperWidthMd": "MuiDialog-paperWidthMd",
                  "paperWidthSm": "MuiDialog-paperWidthSm",
                  "paperWidthXl": "MuiDialog-paperWidthXl",
                  "paperWidthXs": "MuiDialog-paperWidthXs",
                  "root": "MuiDialog-root",
                  "scrollBody": "MuiDialog-scrollBody",
                  "scrollPaper": "MuiDialog-scrollPaper",
                }
              }
              disableBackdropClick={true}
              disableEscapeKeyDown={null}
              onClose={[Function]}
              onEntered={[Function]}
              onExited={[Function]}
              open={false}
            >
              <ForwardRef(Modal)
                BackdropComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "Naked": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "propTypes": Object {
                        "children": [Function],
                        "className": [Function],
                        "classes": [Function],
                        "invisible": [Function],
                        "open": [Function],
                        "transitionDuration": [Function],
                      },
                      "render": [Function],
                    },
                    "displayName": "WithStyles(ForwardRef(Backdrop))",
                    "options": Object {
                      "defaultTheme": Object {
                        "breakpoints": Object {
                          "between": [Function],
                          "down": [Function],
                          "keys": Array [
                            "xs",
                            "sm",
                            "md",
                            "lg",
                            "xl",
                          ],
                          "only": [Function],
                          "up": [Function],
                          "values": Object {
                            "lg": 1280,
                            "md": 960,
                            "sm": 600,
                            "xl": 1920,
                            "xs": 0,
                          },
                          "width": [Function],
                        },
                        "direction": "ltr",
                        "mixins": Object {
                          "gutters": [Function],
                          "toolbar": Object {
                            "@media (min-width:0px) and (orientation: landscape)": Object {
                              "minHeight": 48,
                            },
                            "@media (min-width:600px)": Object {
                              "minHeight": 64,
                            },
                            "minHeight": 56,
                          },
                        },
                        "overrides": Object {},
                        "palette": Object {
                          "action": Object {
                            "activatedOpacity": 0.12,
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "disabledOpacity": 0.38,
                            "focus": "rgba(0, 0, 0, 0.12)",
                            "focusOpacity": 0.12,
                            "hover": "rgba(0, 0, 0, 0.04)",
                            "hoverOpacity": 0.04,
                            "selected": "rgba(0, 0, 0, 0.08)",
                            "selectedOpacity": 0.08,
                          },
                          "augmentColor": [Function],
                          "background": Object {
                            "default": "#fafafa",
                            "paper": "#fff",
                          },
                          "common": Object {
                            "black": "#000",
                            "white": "#fff",
                          },
                          "contrastThreshold": 3,
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "getContrastText": [Function],
                          "grey": Object {
                            "100": "#f5f5f5",
                            "200": "#eeeeee",
                            "300": "#e0e0e0",
                            "400": "#bdbdbd",
                            "50": "#fafafa",
                            "500": "#9e9e9e",
                            "600": "#757575",
                            "700": "#616161",
                            "800": "#424242",
                            "900": "#212121",
                            "A100": "#d5d5d5",
                            "A200": "#aaaaaa",
                            "A400": "#303030",
                            "A700": "#616161",
                          },
                          "info": Object {
                            "contrastText": "#fff",
                            "dark": "#1976d2",
                            "light": "#64b5f6",
                            "main": "#2196f3",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "success": Object {
                            "contrastText": "rgba(0, 0, 0, 0.87)",
                            "dark": "#388e3c",
                            "light": "#81c784",
                            "main": "#4caf50",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                          "tonalOffset": 0.2,
                          "type": "light",
                          "warning": Object {
                            "contrastText": "rgba(0, 0, 0, 0.87)",
                            "dark": "#f57c00",
                            "light": "#ffb74d",
                            "main": "#ff9800",
                          },
                        },
                        "props": Object {},
                        "shadows": Array [
                          "none",
                          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                        ],
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": [Function],
                        "transitions": Object {
                          "create": [Function],
                          "duration": Object {
                            "complex": 375,
                            "enteringScreen": 225,
                            "leavingScreen": 195,
                            "short": 250,
                            "shorter": 200,
                            "shortest": 150,
                            "standard": 300,
                          },
                          "easing": Object {
                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                          },
                          "getAutoHeightDuration": [Function],
                        },
                        "typography": Object {
                          "body1": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00938em",
                            "lineHeight": 1.5,
                          },
                          "body2": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.01071em",
                            "lineHeight": 1.43,
                          },
                          "button": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.02857em",
                            "lineHeight": 1.75,
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.03333em",
                            "lineHeight": 1.66,
                          },
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": 14,
                          "fontWeightBold": 700,
                          "fontWeightLight": 300,
                          "fontWeightMedium": 500,
                          "fontWeightRegular": 400,
                          "h1": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "6rem",
                            "fontWeight": 300,
                            "letterSpacing": "-0.01562em",
                            "lineHeight": 1.167,
                          },
                          "h2": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3.75rem",
                            "fontWeight": 300,
                            "letterSpacing": "-0.00833em",
                            "lineHeight": 1.2,
                          },
                          "h3": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3rem",
                            "fontWeight": 400,
                            "letterSpacing": "0em",
                            "lineHeight": 1.167,
                          },
                          "h4": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "2.125rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00735em",
                            "lineHeight": 1.235,
                          },
                          "h5": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.5rem",
                            "fontWeight": 400,
                            "letterSpacing": "0em",
                            "lineHeight": 1.334,
                          },
                          "h6": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.25rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.0075em",
                            "lineHeight": 1.6,
                          },
                          "htmlFontSize": 16,
                          "overline": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.08333em",
                            "lineHeight": 2.66,
                            "textTransform": "uppercase",
                          },
                          "pxToRem": [Function],
                          "round": [Function],
                          "subtitle1": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00938em",
                            "lineHeight": 1.75,
                          },
                          "subtitle2": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.00714em",
                            "lineHeight": 1.57,
                          },
                        },
                        "zIndex": Object {
                          "appBar": 1100,
                          "drawer": 1200,
                          "mobileStepper": 1000,
                          "modal": 1300,
                          "snackbar": 1400,
                          "speedDial": 1050,
                          "tooltip": 1500,
                        },
                      },
                      "name": "MuiBackdrop",
                    },
                    "propTypes": Object {
                      "classes": [Function],
                      "innerRef": [Function],
                    },
                    "render": [Function],
                    "useStyles": [Function],
                  }
                }
                BackdropProps={
                  Object {
                    "transitionDuration": Object {
                      "enter": 225,
                      "exit": 195,
                    },
                  }
                }
                className="MuiDialog-root"
                closeAfterTransition={true}
                disableBackdropClick={true}
                disableEscapeKeyDown={null}
                onClose={[Function]}
                open={false}
              />
            </ForwardRef(Dialog)>
          </WithStyles(ForwardRef(Dialog))>
        </Base>
      </WithStyles(Base)>
    </ErrorDialog>
  </withDeleteHandler>
</ErrorHandler>
`;

exports[`Operating Flights component render correct in readOnly mode 1`] = `<Loading />`;
