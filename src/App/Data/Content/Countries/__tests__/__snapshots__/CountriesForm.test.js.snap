// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Countries Form component render correct in readOnly mode 1`] = `
<Form
  anchor="right"
  cancelButton="Cancel"
  editMode={false}
  enableReadOnly={false}
  formId="countriesForm"
  handleCancel={[MockFunction]}
  handleOk={[Function]}
  handleSubmit={[Function]}
  inlineError={null}
  isDisabled={false}
  isOpen={true}
  okButton="Ok"
  onChange={[Function]}
  openItemId="102"
  openItemName="My open item test"
>
  <FormHeader>
    <span />
    <span />
  </FormHeader>
  <FormBody>
    <ScrollBar
      className=""
      component="div"
      containerRef={[Function]}
      option={
        Object {
          "swipeEasing": true,
          "wheelSpeed": 0.4,
        }
      }
    >
      <div>
        <h2 />
        <WithStyles(ForwardRef(Grid))
          container={true}
          spacing={3}
        >
          <WithStyles(ForwardRef(Grid))
            item={true}
            sm={12}
            xs={12}
          >
            <CountriesForm__FormControl
              error={false}
            >
              <CountriesForm__Input
                className=""
                color="secondary"
                disabled={true}
                error={false}
                id="countryCode"
                inputProps={
                  Object {
                    "maxLength": 2,
                    "name": "countryCode",
                  }
                }
                onChange={[Function]}
                required={true}
                value=""
              />
              <ErrorMessage
                error={true}
                isVisible={false}
                message=""
              />
            </CountriesForm__FormControl>
          </WithStyles(ForwardRef(Grid))>
          <WithStyles(ForwardRef(Grid))
            item={true}
            xs={12}
          >
            <CountriesForm__FormControl
              error={false}
            >
              <CountriesForm__Input
                className=""
                color="secondary"
                disabled={true}
                error={false}
                id="countryName"
                inputProps={
                  Object {
                    "maxLength": 50,
                    "name": "countryName",
                  }
                }
                onChange={[Function]}
                required={true}
                value=""
              />
              <ErrorMessage
                error={true}
                isVisible={false}
                message=""
              />
            </CountriesForm__FormControl>
          </WithStyles(ForwardRef(Grid))>
          <WithStyles(ForwardRef(Grid))
            item={true}
            sm={12}
            xs={12}
          >
            <CountriesForm__FormControl
              required={true}
            >
              <WithStyles(ForwardRef(Autocomplete))
                ListboxComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "propTypes": Object {
                      "children": [Function],
                    },
                    "render": [Function],
                  }
                }
                disabled={true}
                getOptionLabel={[Function]}
                id="currencyCode"
                name="currencyCode"
                onChange={[Function]}
                options={Array []}
                renderInput={[Function]}
                renderOption={[Function]}
                value={null}
              />
            </CountriesForm__FormControl>
          </WithStyles(ForwardRef(Grid))>
        </WithStyles(ForwardRef(Grid))>
      </div>
    </ScrollBar>
  </FormBody>
</Form>
`;

exports[`CountriesForm Component renders correctly 1`] = `
<Form
  anchor="right"
  cancelButton="Cancel"
  editMode={false}
  enableReadOnly={false}
  formId="countriesForm"
  handleCancel={[MockFunction]}
  handleOk={[Function]}
  handleSubmit={[Function]}
  inlineError={null}
  isDisabled={true}
  isOpen={true}
  okButton="Ok"
  onChange={[Function]}
  openItemId="102"
  openItemName="My open item test"
>
  <FormHeader>
    <span />
    <span />
  </FormHeader>
  <FormBody>
    <ScrollBar
      className=""
      component="div"
      containerRef={[Function]}
      option={
        Object {
          "swipeEasing": true,
          "wheelSpeed": 0.4,
        }
      }
    >
      <div>
        <h2 />
        <WithStyles(ForwardRef(Grid))
          container={true}
          spacing={3}
        >
          <WithStyles(ForwardRef(Grid))
            item={true}
            sm={12}
            xs={12}
          >
            <CountriesForm__FormControl
              error={false}
            >
              <CountriesForm__Input
                className=""
                color="secondary"
                error={false}
                id="countryCode"
                inputProps={
                  Object {
                    "maxLength": 2,
                    "name": "countryCode",
                  }
                }
                onChange={[Function]}
                required={true}
                value=""
              />
              <ErrorMessage
                error={true}
                isVisible={false}
                message=""
              />
            </CountriesForm__FormControl>
          </WithStyles(ForwardRef(Grid))>
          <WithStyles(ForwardRef(Grid))
            item={true}
            xs={12}
          >
            <CountriesForm__FormControl
              error={false}
            >
              <CountriesForm__Input
                className=""
                color="secondary"
                error={false}
                id="countryName"
                inputProps={
                  Object {
                    "maxLength": 50,
                    "name": "countryName",
                  }
                }
                onChange={[Function]}
                required={true}
                value=""
              />
              <ErrorMessage
                error={true}
                isVisible={false}
                message=""
              />
            </CountriesForm__FormControl>
          </WithStyles(ForwardRef(Grid))>
          <WithStyles(ForwardRef(Grid))
            item={true}
            sm={12}
            xs={12}
          >
            <CountriesForm__FormControl
              required={true}
            >
              <WithStyles(ForwardRef(Autocomplete))
                ListboxComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "propTypes": Object {
                      "children": [Function],
                    },
                    "render": [Function],
                  }
                }
                getOptionLabel={[Function]}
                id="currencyCode"
                name="currencyCode"
                onChange={[Function]}
                options={Array []}
                renderInput={[Function]}
                renderOption={[Function]}
                value={null}
              />
            </CountriesForm__FormControl>
          </WithStyles(ForwardRef(Grid))>
        </WithStyles(ForwardRef(Grid))>
      </div>
    </ScrollBar>
  </FormBody>
</Form>
`;
