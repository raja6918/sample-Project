// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MenuItem Component renders 1`] = `
.c0 {
  height: 48px;
}

.c0:hover .material-icons {
  color: #4a4a4a;
}

.c0:hover svg *[fill] {
  fill: #4a4a4a;
}

<MenuItem>
  <WithStyles(ForwardRef(MenuItem))
    className="c0"
  >
    <ForwardRef(MenuItem)
      className="c0"
      classes={
        Object {
          "dense": "MuiMenuItem-dense",
          "gutters": "MuiMenuItem-gutters",
          "root": "MuiMenuItem-root",
          "selected": "Mui-selected",
        }
      }
    >
      <WithStyles(ForwardRef(ListItem))
        button={true}
        className="MuiMenuItem-root c0 MuiMenuItem-gutters"
        classes={
          Object {
            "dense": "MuiMenuItem-dense",
          }
        }
        component="li"
        disableGutters={false}
        role="menuitem"
        tabIndex={-1}
      >
        <ForwardRef(ListItem)
          button={true}
          className="MuiMenuItem-root c0 MuiMenuItem-gutters"
          classes={
            Object {
              "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
              "button": "MuiListItem-button",
              "container": "MuiListItem-container",
              "dense": "MuiListItem-dense MuiMenuItem-dense",
              "disabled": "Mui-disabled",
              "divider": "MuiListItem-divider",
              "focusVisible": "Mui-focusVisible",
              "gutters": "MuiListItem-gutters",
              "root": "MuiListItem-root",
              "secondaryAction": "MuiListItem-secondaryAction",
              "selected": "Mui-selected",
            }
          }
          component="li"
          disableGutters={false}
          role="menuitem"
          tabIndex={-1}
        >
          <WithStyles(ForwardRef(ButtonBase))
            className="MuiListItem-root MuiMenuItem-root c0 MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
            component="li"
            disabled={false}
            focusVisibleClassName="Mui-focusVisible"
            role="menuitem"
            tabIndex={-1}
          >
            <ForwardRef(ButtonBase)
              className="MuiListItem-root MuiMenuItem-root c0 MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
              classes={
                Object {
                  "disabled": "Mui-disabled",
                  "focusVisible": "Mui-focusVisible",
                  "root": "MuiButtonBase-root",
                }
              }
              component="li"
              disabled={false}
              focusVisibleClassName="Mui-focusVisible"
              role="menuitem"
              tabIndex={-1}
            >
              <li
                aria-disabled={false}
                className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root c0 MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                onBlur={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                role="menuitem"
                tabIndex={-1}
              >
                <WithStyles(memo)
                  center={false}
                >
                  <ForwardRef(TouchRipple)
                    center={false}
                    classes={
                      Object {
                        "child": "MuiTouchRipple-child",
                        "childLeaving": "MuiTouchRipple-childLeaving",
                        "childPulsate": "MuiTouchRipple-childPulsate",
                        "ripple": "MuiTouchRipple-ripple",
                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                        "root": "MuiTouchRipple-root",
                      }
                    }
                  >
                    <span
                      className="MuiTouchRipple-root"
                    >
                      <TransitionGroup
                        childFactory={[Function]}
                        component={null}
                        exit={true}
                      />
                    </span>
                  </ForwardRef(TouchRipple)>
                </WithStyles(memo)>
              </li>
            </ForwardRef(ButtonBase)>
          </WithStyles(ForwardRef(ButtonBase))>
        </ForwardRef(ListItem)>
      </WithStyles(ForwardRef(ListItem))>
    </ForwardRef(MenuItem)>
  </WithStyles(ForwardRef(MenuItem))>
</MenuItem>
`;
