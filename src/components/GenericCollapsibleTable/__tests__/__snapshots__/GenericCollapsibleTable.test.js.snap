// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tests Related to Generic Table Generic collapsible Table Component Renders Correctly 1`] = `
.c3 {
  color: #0A75C2 !important;
  margin: none;
  background-color: transparent;
  border-radius: initial;
}

.c5 {
  font-size: 14px;
  background-color: #fff;
  margin: 7px auto;
  width: 90%;
}

.c5 div {
  color: inherit;
  padding: 0px 5px;
  border: 1px solid;
}

.c5 input {
  padding: 5px 0 5px 7px !important;
  font-family: 'Lato',seans-serif;
  font-size: 14px;
  caret-color: #4a4a4a;
  color: #4a4a4a;
}

.c6 {
  font-size: 14px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin: auto 0;
  color: #7e7e7e;
}

.c4 {
  display: none;
  position: absolute;
  opacity: 0;
  z-index: -1;
}

.c2.MuiTableSortLabel-root {
  color: rgba(0,0,0,0.87) !important;
}

.c2.MuiTableSortLabel-active.MuiTableSortLabel-root.MuiTableSortLabel-active .MuiTableSortLabel-icon {
  color: rgba(0,0,0,0.87) !important;
  font-size: 16px;
}

.c7 {
  display: block;
  font-size: 12px;
  color: #000;
  margin: 16px 18px 0px 0px;
  line-height: 13px;
}

.c0 {
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.14),0 3px 4px 0 rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);
  -webkit-box-shadow: 0 2px 4px 0 rgba(0,0,0,0.14),0 3px 4px 0 rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);
  -moz-box-shadow: 0 2px 4px 0 rgba(0,0,0,0.14),0 3px 4px 0 rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);
  margin-top: 10px;
}

.c1 {
  width: 100%;
  overflow-x: auto;
  overflow-y: hidden;
  -webkit-overflow-scrolling: touch;
}

.c1 table {
  position: relative;
}

.c1 .c1 table tr,
.c1 table td,
.c1 table th {
  text-align: left;
  white-space: nowrap;
}

.c1 .c1 table tr:last-child,
.c1 table td:last-child,
.c1 table th:last-child {
  padding-right: 40px;
}

.c1 table tbody {
  max-height: calc(100vh - 402px) !important;
  overflow-y: auto;
  overflow-x: hidden;
  -webkit-border-radius: 0 0 2px 2px;
  -moz-border-radius: 0 0 2px 2px;
  border-radius: 0 0 2px 2px;
}

.c1 table thead {
  background-color: #e0e0e0;
  border-top: 1px solid #cccccc;
  display: block;
}

.c1 table thead tr,
.c1 table thead th {
  background-color: #e0e0e0;
  height: 45px;
}

.c1 table tbody {
  display: block;
  background-color: #fff;
}

.c1 table thead tr:first-child {
  background-color: red;
}

.c1 table tbody td,
.c1 table thead th {
  padding: 0px 56px 0px 24px;
  font-size: 0.8125rem;
}

.c1 table thead th span {
  color: #000000;
  font-weight: 500;
}

.c1 table tbody tr {
  z-index: 9000;
  background-color: #fff;
}

.c1 table .caption-cell {
  font-weight: 500;
  font-size: 14px;
  color: rgba(0,0,0,0.87);
}

<GenericCollapsibleTable
  collapsibleComponent={[Function]}
  collapsibleComponentProps={Object {}}
  data={
    Array [
      Object {
        "catagory": "CAR Government Regulation",
        "id": 1,
        "name": "Night Duty",
        "settingsFrom": "Baseline Rules",
        "state": true,
        "type": "Definition",
      },
      Object {
        "catagory": "CAR Government Regulation",
        "id": 2,
        "name": "Split Duty Extension to Maximum FDP (Split Duty Extension to Maximum FDP)",
        "settingsFrom": "Flight Desk",
        "state": false,
        "type": "Duty Time Limitation",
      },
      Object {
        "catagory": "CAR Government Regulation",
        "id": 3,
        "name": "Minimum Rest at Home Base (Minimum Rest at Home Base)",
        "settingsFrom": "Baseline Rules",
        "state": true,
        "type": "Rest RUle",
      },
      Object {
        "catagory": "OverSeas Cabin Contract",
        "id": 4,
        "isEdited": true,
        "name": "Earily Duty",
        "settingsFrom": "Widebody",
        "state": false,
        "type": "Cost RUle",
      },
      Object {
        "catagory": "Basic Pairing Rules",
        "id": 5,
        "name": "Late Duty",
        "settingsFrom": "Baseline Rules",
        "state": true,
        "type": "Soft Rule",
      },
    ]
  }
  disableRowStyle={[Function]}
  editMode={true}
  enableEdits={false}
  filteredDataSize={0}
  groupBy={null}
  handleDeleteItem={null}
  handleEditItem={[MockFunction]}
  handleFetchData={[Function]}
  handleFilter={[Function]}
  handleSort={[Function]}
  headers={
    Array [
      Object {
        "displayName": "DATA.rules.headers.name",
        "field": "name",
        "transformer": [Function],
        "transformerStyle": Object {
          "maxWidth": "235px",
        },
      },
      Object {
        "cellStyle": Object {
          "width": "120px",
        },
        "component": [Function],
        "componentStyle": Object {
          "fontSize": "0.8125rem",
          "width": "120px",
        },
        "disableFilter": true,
        "displayName": "DATA.rules.headers.state",
        "field": "state",
        "props": Object {
          "items": Array [
            Object {
              "display": "On",
              "value": true,
            },
            Object {
              "display": "Off",
              "value": false,
            },
          ],
          "onChange": [Function],
        },
      },
      Object {
        "component": [Function],
        "componentStyle": Object {
          "color": "#FF650C",
        },
        "displayName": "DATA.rules.headers.settingsFrom",
        "field": "settingsFrom",
        "props": Object {
          "header": "isEdited",
        },
      },
      Object {
        "displayName": "DATA.rules.headers.catagory",
        "field": "catagory",
      },
      Object {
        "displayName": "DATA.rules.headers.type",
        "field": "type",
      },
    ]
  }
  isFilter={false}
  keyField=""
  name="Rules"
  order="inc"
  orderBy="code"
  t={[MockFunction]}
  totalDataSize={1}
>
  <GenericCollapsibleTable__BoxShadow
    editMode={true}
    id="contentContainer"
  >
    <div
      className="c0"
      id="contentContainer"
    >
      <GenericCollapsibleTable__TableContainer
        editMode={true}
        filtersOpen={false}
        innerRef={
          Object {
            "current": <div
              class="c1"
            >
              <div
                class="scrollbar-container ps"
              >
                <table
                  class="MuiTable-root"
                >
                  <thead
                    class="MuiTableHead-root"
                  >
                    <tr
                      class="MuiTableRow-root MuiTableRow-head"
                    >
                      <th
                        class="MuiTableCell-root MuiTableCell-head"
                        scope="col"
                        style="padding: 0px 33px 0px 18px;"
                      >
                        <span
                          aria-disabled="false"
                          class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                          style="width: 20px; height: 20px;"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <input
                              class="PrivateSwitchBase-input-4"
                              data-indeterminate="false"
                              type="checkbox"
                              value=""
                            />
                            <svg
                              aria-hidden="true"
                              class="MuiSvgIcon-root"
                              focusable="false"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                              />
                            </svg>
                          </span>
                          <span
                            class="MuiTouchRipple-root"
                          />
                        </span>
                      </th>
                      <th
                        class="MuiTableCell-root MuiTableCell-head"
                        scope="col"
                      >
                        <span
                          style="display: flex; justify-content: space-between;"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiTableSortLabel-root c2"
                            role="button"
                            style="cursor: pointer;"
                            tabindex="0"
                          >
                            DATA.rules.headers.name
                          </span>
                        </span>
                      </th>
                      <th
                        class="MuiTableCell-root MuiTableCell-head"
                        scope="col"
                        style="width: 120px;"
                      >
                        <span
                          style="display: flex; justify-content: space-between;"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiTableSortLabel-root c2"
                            role="button"
                            style="cursor: pointer;"
                            tabindex="0"
                          >
                            DATA.rules.headers.state
                          </span>
                        </span>
                      </th>
                      <th
                        class="MuiTableCell-root MuiTableCell-head"
                        scope="col"
                      >
                        <span
                          style="display: flex; justify-content: space-between;"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiTableSortLabel-root c2"
                            role="button"
                            style="cursor: pointer;"
                            tabindex="0"
                          >
                            DATA.rules.headers.settingsFrom
                          </span>
                        </span>
                      </th>
                      <th
                        class="MuiTableCell-root MuiTableCell-head"
                        scope="col"
                      >
                        <span
                          style="display: flex; justify-content: space-between;"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiTableSortLabel-root c2"
                            role="button"
                            style="cursor: pointer;"
                            tabindex="0"
                          >
                            DATA.rules.headers.catagory
                          </span>
                        </span>
                      </th>
                      <th
                        class="MuiTableCell-root MuiTableCell-head"
                        scope="col"
                        style="padding-right: 0px;"
                      >
                        <span
                          style="display: flex; justify-content: space-between;"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiTableSortLabel-root c2"
                            role="button"
                            style="cursor: pointer;"
                            tabindex="0"
                          >
                            DATA.rules.headers.type
                          </span>
                          <span>
                            <button
                              class="MuiButtonBase-root MuiIconButton-root"
                              style="width: 45px; height: 45px;"
                              tabindex="0"
                              type="button"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <span
                                  aria-hidden="true"
                                  class="material-icons MuiIcon-root c3"
                                  iconcolor="#0A75C2"
                                  margin="none"
                                >
                                  filter_list
                                </span>
                              </span>
                              <span
                                class="MuiTouchRipple-root"
                              />
                            </button>
                          </span>
                        </span>
                      </th>
                    </tr>
                    <tr
                      class="MuiTableRow-root filters c4 MuiTableRow-head"
                      show="false"
                    >
                      <th
                        class="MuiTableCell-root MuiTableCell-head"
                        scope="col"
                        style="padding: 0px 18px;"
                      />
                      <th
                        class="MuiTableCell-root MuiTableCell-head"
                        scope="col"
                        style="padding-left: 3px; padding-right: 3px;"
                      >
                        <div
                          class="MuiFormControl-root c5"
                        >
                          <div
                            class="MuiInputBase-root MuiInput-root MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                          >
                            <span
                              aria-hidden="true"
                              class="material-icons MuiIcon-root c6"
                            >
                              search
                            </span>
                            <input
                              aria-invalid="false"
                              class="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                              type="text"
                              value=""
                            />
                          </div>
                        </div>
                      </th>
                      <th
                        class="MuiTableCell-root MuiTableCell-head"
                        scope="col"
                        style="padding-left: 3px; padding-right: 3px;"
                      >
                        <div
                          class="MuiFormControl-root c5"
                        >
                          <div
                            class="MuiInputBase-root MuiInput-root Mui-disabled Mui-disabled MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                          >
                            <span
                              aria-hidden="true"
                              class="material-icons MuiIcon-root c6"
                            >
                              search
                            </span>
                            <input
                              aria-invalid="false"
                              class="MuiInputBase-input MuiInput-input Mui-disabled Mui-disabled MuiInputBase-inputAdornedStart"
                              disabled=""
                              type="text"
                              value=""
                            />
                          </div>
                        </div>
                      </th>
                      <th
                        class="MuiTableCell-root MuiTableCell-head"
                        scope="col"
                        style="padding-left: 3px; padding-right: 3px;"
                      >
                        <div
                          class="MuiFormControl-root c5"
                        >
                          <div
                            class="MuiInputBase-root MuiInput-root MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                          >
                            <span
                              aria-hidden="true"
                              class="material-icons MuiIcon-root c6"
                            >
                              search
                            </span>
                            <input
                              aria-invalid="false"
                              class="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                              type="text"
                              value=""
                            />
                          </div>
                        </div>
                      </th>
                      <th
                        class="MuiTableCell-root MuiTableCell-head"
                        scope="col"
                        style="padding-left: 3px; padding-right: 3px;"
                      >
                        <div
                          class="MuiFormControl-root c5"
                        >
                          <div
                            class="MuiInputBase-root MuiInput-root MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                          >
                            <span
                              aria-hidden="true"
                              class="material-icons MuiIcon-root c6"
                            >
                              search
                            </span>
                            <input
                              aria-invalid="false"
                              class="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                              type="text"
                              value=""
                            />
                          </div>
                        </div>
                      </th>
                      <th
                        class="MuiTableCell-root MuiTableCell-head"
                        scope="col"
                        style="padding-left: 3px; padding-right: 3px;"
                      >
                        <div
                          class="MuiFormControl-root c5"
                        >
                          <div
                            class="MuiInputBase-root MuiInput-root MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                          >
                            <span
                              aria-hidden="true"
                              class="material-icons MuiIcon-root c6"
                            >
                              search
                            </span>
                            <input
                              aria-invalid="false"
                              class="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                              type="text"
                              value=""
                            />
                          </div>
                        </div>
                      </th>
                    </tr>
                  </thead>
                  <div
                    class="scrollbar-container ps"
                  >
                    <tbody
                      class="MuiTableBody-root"
                    >
                      <tr
                        class="MuiTableRow-root MuiTableRow MuiTableRow-hover hover"
                        id="tablerow1"
                      >
                        <td
                          class="MuiTableCell-root MuiTableCell-body"
                          style="padding-left: 18px; padding-right: 0px; width: 40px; height: 40px;"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                            style="width: 20px; height: 20px;"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                class="PrivateSwitchBase-input-4"
                                data-indeterminate="false"
                                type="checkbox"
                                value=""
                              />
                              <svg
                                aria-hidden="true"
                                class="MuiSvgIcon-root"
                                focusable="false"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                />
                              </svg>
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </span>
                          <button
                            aria-label="expand row"
                            class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                            style="margin-left: 10px;"
                            tabindex="0"
                            type="button"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <svg
                                aria-hidden="true"
                                class="MuiSvgIcon-root"
                                focusable="false"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"
                                />
                              </svg>
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </button>
                        </td>
                        <td
                          class="MuiTableCell-root MuiTableCell-body"
                        >
                          <div
                            class=""
                            style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 200px;"
                          >
                            Night Duty
                          </div>
                        </td>
                        <td
                          class="MuiTableCell-root MuiTableCell-body"
                          style="width: 120px;"
                        >
                          <span
                            class=""
                          >
                             
                            <div
                              class="MuiInputBase-root MuiInput-root MuiInput-underline"
                              style="z-index: 1; width: 120px; font-size: 0.8125rem;"
                            >
                              <div
                                aria-haspopup="listbox"
                                class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                role="button"
                                tabindex="0"
                              >
                                On
                              </div>
                              <input
                                aria-hidden="true"
                                class="MuiSelect-nativeInput"
                                tabindex="-1"
                                value="true"
                              />
                              <svg
                                aria-hidden="true"
                                class="MuiSvgIcon-root MuiSelect-icon"
                                focusable="false"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M7 10l5 5 5-5z"
                                />
                              </svg>
                            </div>
                             
                          </span>
                        </td>
                        <td
                          class="MuiTableCell-root MuiTableCell-body"
                        >
                          <span>
                            Baseline Rules
                          </span>
                        </td>
                        <td
                          class="MuiTableCell-root MuiTableCell-body"
                        >
                          CAR Government Regulation
                        </td>
                        <td
                          class="MuiTableCell-root MuiTableCell-body"
                        >
                          Definition
                        </td>
                      </tr>
                      <tr
                        class="MuiTableRow-root"
                      >
                        <td
                          class="MuiTableCell-root MuiTableCell-body no-border"
                          colspan="6"
                          style="padding: 0px;"
                        />
                      </tr>
                      <tr
                        class="MuiTableRow-root MuiTableRow MuiTableRow-hover hover"
                        id="tablerow2"
                      >
                        <td
                          class="MuiTableCell-root MuiTableCell-body"
                          style="padding-left: 18px; padding-right: 0px; width: 40px; height: 40px;"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                            style="width: 20px; height: 20px;"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                class="PrivateSwitchBase-input-4"
                                data-indeterminate="false"
                                type="checkbox"
                                value=""
                              />
                              <svg
                                aria-hidden="true"
                                class="MuiSvgIcon-root"
                                focusable="false"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                />
                              </svg>
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </span>
                          <button
                            aria-label="expand row"
                            class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                            style="margin-left: 10px;"
                            tabindex="0"
                            type="button"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <svg
                                aria-hidden="true"
                                class="MuiSvgIcon-root"
                                focusable="false"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"
                                />
                              </svg>
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </button>
                        </td>
                        <td
                          class="MuiTableCell-root MuiTableCell-body"
                        >
                          <div
                            class=""
                            style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 200px;"
                          >
                            Split Duty Extension to Maximum FDP (Split Duty Extension to Maximum FDP)
                          </div>
                        </td>
                        <td
                          class="MuiTableCell-root MuiTableCell-body"
                          style="width: 120px;"
                        >
                          <span
                            class=""
                          >
                             
                            <div
                              class="MuiInputBase-root MuiInput-root MuiInput-underline"
                              style="z-index: 1; width: 120px; font-size: 0.8125rem;"
                            >
                              <div
                                aria-haspopup="listbox"
                                class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                role="button"
                                tabindex="0"
                              >
                                Off
                              </div>
                              <input
                                aria-hidden="true"
                                class="MuiSelect-nativeInput"
                                tabindex="-1"
                                value="false"
                              />
                              <svg
                                aria-hidden="true"
                                class="MuiSvgIcon-root MuiSelect-icon"
                                focusable="false"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M7 10l5 5 5-5z"
                                />
                              </svg>
                            </div>
                             
                          </span>
                        </td>
                        <td
                          class="MuiTableCell-root MuiTableCell-body"
                        >
                          <span>
                            Flight Desk
                          </span>
                        </td>
                        <td
                          class="MuiTableCell-root MuiTableCell-body"
                        >
                          CAR Government Regulation
                        </td>
                        <td
                          class="MuiTableCell-root MuiTableCell-body"
                        >
                          Duty Time Limitation
                        </td>
                      </tr>
                      <tr
                        class="MuiTableRow-root"
                      >
                        <td
                          class="MuiTableCell-root MuiTableCell-body no-border"
                          colspan="6"
                          style="padding: 0px;"
                        />
                      </tr>
                      <tr
                        class="MuiTableRow-root MuiTableRow MuiTableRow-hover hover"
                        id="tablerow3"
                      >
                        <td
                          class="MuiTableCell-root MuiTableCell-body"
                          style="padding-left: 18px; padding-right: 0px; width: 40px; height: 40px;"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                            style="width: 20px; height: 20px;"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                class="PrivateSwitchBase-input-4"
                                data-indeterminate="false"
                                type="checkbox"
                                value=""
                              />
                              <svg
                                aria-hidden="true"
                                class="MuiSvgIcon-root"
                                focusable="false"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                />
                              </svg>
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </span>
                          <button
                            aria-label="expand row"
                            class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                            style="margin-left: 10px;"
                            tabindex="0"
                            type="button"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <svg
                                aria-hidden="true"
                                class="MuiSvgIcon-root"
                                focusable="false"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"
                                />
                              </svg>
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </button>
                        </td>
                        <td
                          class="MuiTableCell-root MuiTableCell-body"
                        >
                          <div
                            class=""
                            style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 200px;"
                          >
                            Minimum Rest at Home Base (Minimum Rest at Home Base)
                          </div>
                        </td>
                        <td
                          class="MuiTableCell-root MuiTableCell-body"
                          style="width: 120px;"
                        >
                          <span
                            class=""
                          >
                             
                            <div
                              class="MuiInputBase-root MuiInput-root MuiInput-underline"
                              style="z-index: 1; width: 120px; font-size: 0.8125rem;"
                            >
                              <div
                                aria-haspopup="listbox"
                                class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                role="button"
                                tabindex="0"
                              >
                                On
                              </div>
                              <input
                                aria-hidden="true"
                                class="MuiSelect-nativeInput"
                                tabindex="-1"
                                value="true"
                              />
                              <svg
                                aria-hidden="true"
                                class="MuiSvgIcon-root MuiSelect-icon"
                                focusable="false"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M7 10l5 5 5-5z"
                                />
                              </svg>
                            </div>
                             
                          </span>
                        </td>
                        <td
                          class="MuiTableCell-root MuiTableCell-body"
                        >
                          <span>
                            Baseline Rules
                          </span>
                        </td>
                        <td
                          class="MuiTableCell-root MuiTableCell-body"
                        >
                          CAR Government Regulation
                        </td>
                        <td
                          class="MuiTableCell-root MuiTableCell-body"
                        >
                          Rest RUle
                        </td>
                      </tr>
                      <tr
                        class="MuiTableRow-root"
                      >
                        <td
                          class="MuiTableCell-root MuiTableCell-body no-border"
                          colspan="6"
                          style="padding: 0px;"
                        />
                      </tr>
                      <tr
                        class="MuiTableRow-root MuiTableRow MuiTableRow-hover hover"
                        id="tablerow4"
                      >
                        <td
                          class="MuiTableCell-root MuiTableCell-body"
                          style="padding-left: 18px; padding-right: 0px; width: 40px; height: 40px;"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                            style="width: 20px; height: 20px;"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                class="PrivateSwitchBase-input-4"
                                data-indeterminate="false"
                                type="checkbox"
                                value=""
                              />
                              <svg
                                aria-hidden="true"
                                class="MuiSvgIcon-root"
                                focusable="false"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                />
                              </svg>
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </span>
                          <button
                            aria-label="expand row"
                            class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                            style="margin-left: 10px;"
                            tabindex="0"
                            type="button"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <svg
                                aria-hidden="true"
                                class="MuiSvgIcon-root"
                                focusable="false"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"
                                />
                              </svg>
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </button>
                        </td>
                        <td
                          class="MuiTableCell-root MuiTableCell-body"
                        >
                          <div
                            class=""
                            style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 200px;"
                          >
                            Earily Duty
                          </div>
                        </td>
                        <td
                          class="MuiTableCell-root MuiTableCell-body"
                          style="width: 120px;"
                        >
                          <span
                            class=""
                          >
                             
                            <div
                              class="MuiInputBase-root MuiInput-root MuiInput-underline"
                              style="z-index: 1; width: 120px; font-size: 0.8125rem;"
                            >
                              <div
                                aria-haspopup="listbox"
                                class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                role="button"
                                tabindex="0"
                              >
                                Off
                              </div>
                              <input
                                aria-hidden="true"
                                class="MuiSelect-nativeInput"
                                tabindex="-1"
                                value="false"
                              />
                              <svg
                                aria-hidden="true"
                                class="MuiSvgIcon-root MuiSelect-icon"
                                focusable="false"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M7 10l5 5 5-5z"
                                />
                              </svg>
                            </div>
                             
                          </span>
                        </td>
                        <td
                          class="MuiTableCell-root MuiTableCell-body"
                        >
                          <span>
                            Widebody
                          </span>
                        </td>
                        <td
                          class="MuiTableCell-root MuiTableCell-body"
                        >
                          OverSeas Cabin Contract
                        </td>
                        <td
                          class="MuiTableCell-root MuiTableCell-body"
                        >
                          Cost RUle
                        </td>
                      </tr>
                      <tr
                        class="MuiTableRow-root"
                      >
                        <td
                          class="MuiTableCell-root MuiTableCell-body no-border"
                          colspan="6"
                          style="padding: 0px;"
                        />
                      </tr>
                      <tr
                        class="MuiTableRow-root MuiTableRow MuiTableRow-hover hover"
                        id="tablerow5"
                      >
                        <td
                          class="MuiTableCell-root MuiTableCell-body"
                          style="padding-left: 18px; padding-right: 0px; width: 40px; height: 40px;"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                            style="width: 20px; height: 20px;"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                class="PrivateSwitchBase-input-4"
                                data-indeterminate="false"
                                type="checkbox"
                                value=""
                              />
                              <svg
                                aria-hidden="true"
                                class="MuiSvgIcon-root"
                                focusable="false"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                />
                              </svg>
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </span>
                          <button
                            aria-label="expand row"
                            class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                            style="margin-left: 10px;"
                            tabindex="0"
                            type="button"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <svg
                                aria-hidden="true"
                                class="MuiSvgIcon-root"
                                focusable="false"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"
                                />
                              </svg>
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </button>
                        </td>
                        <td
                          class="MuiTableCell-root MuiTableCell-body"
                        >
                          <div
                            class=""
                            style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 200px;"
                          >
                            Late Duty
                          </div>
                        </td>
                        <td
                          class="MuiTableCell-root MuiTableCell-body"
                          style="width: 120px;"
                        >
                          <span
                            class=""
                          >
                             
                            <div
                              class="MuiInputBase-root MuiInput-root MuiInput-underline"
                              style="z-index: 1; width: 120px; font-size: 0.8125rem;"
                            >
                              <div
                                aria-haspopup="listbox"
                                class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                role="button"
                                tabindex="0"
                              >
                                On
                              </div>
                              <input
                                aria-hidden="true"
                                class="MuiSelect-nativeInput"
                                tabindex="-1"
                                value="true"
                              />
                              <svg
                                aria-hidden="true"
                                class="MuiSvgIcon-root MuiSelect-icon"
                                focusable="false"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M7 10l5 5 5-5z"
                                />
                              </svg>
                            </div>
                             
                          </span>
                        </td>
                        <td
                          class="MuiTableCell-root MuiTableCell-body"
                        >
                          <span>
                            Baseline Rules
                          </span>
                        </td>
                        <td
                          class="MuiTableCell-root MuiTableCell-body"
                        >
                          Basic Pairing Rules
                        </td>
                        <td
                          class="MuiTableCell-root MuiTableCell-body"
                        >
                          Soft Rule
                        </td>
                      </tr>
                      <tr
                        class="MuiTableRow-root"
                      >
                        <td
                          class="MuiTableCell-root MuiTableCell-body no-border"
                          colspan="6"
                          style="padding: 0px;"
                        />
                      </tr>
                    </tbody>
                    <div
                      class="ps__rail-x"
                      style="left: 0px; top: 0px;"
                    >
                      <div
                        class="ps__thumb-x"
                        style="left: 0px; width: 0px;"
                        tabindex="0"
                      />
                    </div>
                    <div
                      class="ps__rail-y"
                      style="top: 0px; left: 0px;"
                    >
                      <div
                        class="ps__thumb-y"
                        style="top: 0px; height: 0px;"
                        tabindex="0"
                      />
                    </div>
                  </div>
                </table>
                <div
                  class="ps__rail-x"
                  style="left: 0px; top: 0px;"
                >
                  <div
                    class="ps__thumb-x"
                    style="left: 0px; width: 0px;"
                    tabindex="0"
                  />
                </div>
                <div
                  class="ps__rail-y"
                  style="top: 0px; left: 0px;"
                >
                  <div
                    class="ps__thumb-y"
                    style="top: 0px; height: 0px;"
                    tabindex="0"
                  />
                </div>
              </div>
            </div>,
          }
        }
      >
        <div
          className="c1"
        >
          <ScrollBar
            className=""
            component="div"
            containerRef={[Function]}
            onScrollX={[Function]}
            option={
              Object {
                "swipeEasing": true,
                "wheelSpeed": 0.4,
              }
            }
          >
            <div
              className="scrollbar-container "
            >
              <WithStyles(ForwardRef(Table))>
                <ForwardRef(Table)
                  classes={
                    Object {
                      "root": "MuiTable-root",
                      "stickyHeader": "MuiTable-stickyHeader",
                    }
                  }
                >
                  <table
                    className="MuiTable-root"
                    role={null}
                  >
                    <EnhancedTableHead
                      enableEdits={false}
                      filtersOpen={false}
                      handleFilterChange={[Function]}
                      headers={
                        Array [
                          Object {
                            "displayName": "DATA.rules.headers.name",
                            "field": "name",
                            "transformer": [Function],
                            "transformerStyle": Object {
                              "maxWidth": "235px",
                            },
                          },
                          Object {
                            "cellStyle": Object {
                              "width": "120px",
                            },
                            "component": [Function],
                            "componentStyle": Object {
                              "fontSize": "0.8125rem",
                              "width": "120px",
                            },
                            "disableFilter": true,
                            "displayName": "DATA.rules.headers.state",
                            "field": "state",
                            "props": Object {
                              "items": Array [
                                Object {
                                  "display": "On",
                                  "value": true,
                                },
                                Object {
                                  "display": "Off",
                                  "value": false,
                                },
                              ],
                              "onChange": [Function],
                            },
                          },
                          Object {
                            "component": [Function],
                            "componentStyle": Object {
                              "color": "#FF650C",
                            },
                            "displayName": "DATA.rules.headers.settingsFrom",
                            "field": "settingsFrom",
                            "props": Object {
                              "header": "isEdited",
                            },
                          },
                          Object {
                            "displayName": "DATA.rules.headers.catagory",
                            "field": "catagory",
                          },
                          Object {
                            "displayName": "DATA.rules.headers.type",
                            "field": "type",
                          },
                        ]
                      }
                      numSelected={0}
                      onRequestSort={[Function]}
                      onSelectAllClick={[Function]}
                      order="inc"
                      orderBy="code"
                      rowCount={5}
                      toggleFilters={[Function]}
                    >
                      <WithStyles(ForwardRef(TableHead))>
                        <ForwardRef(TableHead)
                          classes={
                            Object {
                              "root": "MuiTableHead-root",
                            }
                          }
                        >
                          <thead
                            className="MuiTableHead-root"
                            role={null}
                          >
                            <WithStyles(ForwardRef(TableRow))>
                              <ForwardRef(TableRow)
                                classes={
                                  Object {
                                    "footer": "MuiTableRow-footer",
                                    "head": "MuiTableRow-head",
                                    "hover": "MuiTableRow-hover",
                                    "root": "MuiTableRow-root",
                                    "selected": "Mui-selected",
                                  }
                                }
                              >
                                <tr
                                  className="MuiTableRow-root MuiTableRow-head"
                                  role={null}
                                >
                                  <WithStyles(ForwardRef(TableCell))
                                    style={
                                      Object {
                                        "padding": "0px 18px",
                                        "paddingRight": "33px",
                                      }
                                    }
                                  >
                                    <ForwardRef(TableCell)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTableCell-alignCenter",
                                          "alignJustify": "MuiTableCell-alignJustify",
                                          "alignLeft": "MuiTableCell-alignLeft",
                                          "alignRight": "MuiTableCell-alignRight",
                                          "body": "MuiTableCell-body",
                                          "footer": "MuiTableCell-footer",
                                          "head": "MuiTableCell-head",
                                          "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                          "paddingNone": "MuiTableCell-paddingNone",
                                          "root": "MuiTableCell-root",
                                          "sizeSmall": "MuiTableCell-sizeSmall",
                                          "stickyHeader": "MuiTableCell-stickyHeader",
                                        }
                                      }
                                      style={
                                        Object {
                                          "padding": "0px 18px",
                                          "paddingRight": "33px",
                                        }
                                      }
                                    >
                                      <th
                                        aria-sort={null}
                                        className="MuiTableCell-root MuiTableCell-head"
                                        scope="col"
                                        style={
                                          Object {
                                            "padding": "0px 18px",
                                            "paddingRight": "33px",
                                          }
                                        }
                                      >
                                        <WithStyles(ForwardRef(Checkbox))
                                          checked={false}
                                          color="primary"
                                          indeterminate={false}
                                          onChange={[Function]}
                                          style={
                                            Object {
                                              "height": 20,
                                              "width": 20,
                                            }
                                          }
                                        >
                                          <ForwardRef(Checkbox)
                                            checked={false}
                                            classes={
                                              Object {
                                                "checked": "Mui-checked",
                                                "colorPrimary": "MuiCheckbox-colorPrimary",
                                                "colorSecondary": "MuiCheckbox-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "indeterminate": "MuiCheckbox-indeterminate",
                                                "root": "MuiCheckbox-root",
                                              }
                                            }
                                            color="primary"
                                            indeterminate={false}
                                            onChange={[Function]}
                                            style={
                                              Object {
                                                "height": 20,
                                                "width": 20,
                                              }
                                            }
                                          >
                                            <WithStyles(ForwardRef(SwitchBase))
                                              checked={false}
                                              checkedIcon={<Memo />}
                                              classes={
                                                Object {
                                                  "checked": "Mui-checked",
                                                  "disabled": "Mui-disabled",
                                                  "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                                                }
                                              }
                                              color="primary"
                                              icon={<Memo />}
                                              inputProps={
                                                Object {
                                                  "data-indeterminate": false,
                                                }
                                              }
                                              onChange={[Function]}
                                              style={
                                                Object {
                                                  "height": 20,
                                                  "width": 20,
                                                }
                                              }
                                              type="checkbox"
                                            >
                                              <ForwardRef(SwitchBase)
                                                checked={false}
                                                checkedIcon={<Memo />}
                                                classes={
                                                  Object {
                                                    "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                                                    "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                                                    "input": "PrivateSwitchBase-input-4",
                                                    "root": "PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary",
                                                  }
                                                }
                                                color="primary"
                                                icon={<Memo />}
                                                inputProps={
                                                  Object {
                                                    "data-indeterminate": false,
                                                  }
                                                }
                                                onChange={[Function]}
                                                style={
                                                  Object {
                                                    "height": 20,
                                                    "width": 20,
                                                  }
                                                }
                                                type="checkbox"
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary"
                                                  color="primary"
                                                  component="span"
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  style={
                                                    Object {
                                                      "height": 20,
                                                      "width": 20,
                                                    }
                                                  }
                                                  tabIndex={null}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    color="primary"
                                                    component="span"
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    style={
                                                      Object {
                                                        "height": 20,
                                                        "width": 20,
                                                      }
                                                    }
                                                    tabIndex={null}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                      component="span"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      style={
                                                        Object {
                                                          "height": 20,
                                                          "width": 20,
                                                        }
                                                      }
                                                      tabIndex={null}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        component="span"
                                                        disabled={false}
                                                        focusRipple={true}
                                                        onBlur={[Function]}
                                                        onFocus={[Function]}
                                                        style={
                                                          Object {
                                                            "height": 20,
                                                            "width": 20,
                                                          }
                                                        }
                                                        tabIndex={null}
                                                      >
                                                        <span
                                                          aria-disabled={false}
                                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          style={
                                                            Object {
                                                              "height": 20,
                                                              "width": 20,
                                                            }
                                                          }
                                                          tabIndex={null}
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <input
                                                              checked={false}
                                                              className="PrivateSwitchBase-input-4"
                                                              data-indeterminate={false}
                                                              onChange={[Function]}
                                                              type="checkbox"
                                                            />
                                                            <ForwardRef(CheckBoxOutlineBlankIcon)>
                                                              <WithStyles(ForwardRef(SvgIcon))>
                                                                <ForwardRef(SvgIcon)
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                      "colorError": "MuiSvgIcon-colorError",
                                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                      "root": "MuiSvgIcon-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    className="MuiSvgIcon-root"
                                                                    focusable="false"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <path
                                                                      d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                                    />
                                                                  </svg>
                                                                </ForwardRef(SvgIcon)>
                                                              </WithStyles(ForwardRef(SvgIcon))>
                                                            </ForwardRef(CheckBoxOutlineBlankIcon)>
                                                          </span>
                                                          <WithStyles(memo)
                                                            center={true}
                                                          >
                                                            <ForwardRef(TouchRipple)
                                                              center={true}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                                  "ripple": "MuiTouchRipple-ripple",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                  "root": "MuiTouchRipple-root",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="MuiTouchRipple-root"
                                                              >
                                                                <TransitionGroup
                                                                  childFactory={[Function]}
                                                                  component={null}
                                                                  exit={true}
                                                                />
                                                              </span>
                                                            </ForwardRef(TouchRipple)>
                                                          </WithStyles(memo)>
                                                        </span>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </ForwardRef(SwitchBase)>
                                            </WithStyles(ForwardRef(SwitchBase))>
                                          </ForwardRef(Checkbox)>
                                        </WithStyles(ForwardRef(Checkbox))>
                                      </th>
                                    </ForwardRef(TableCell)>
                                  </WithStyles(ForwardRef(TableCell))>
                                  <WithStyles(ForwardRef(TableCell))
                                    key="0"
                                    sortDirection={false}
                                    style={Object {}}
                                  >
                                    <ForwardRef(TableCell)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTableCell-alignCenter",
                                          "alignJustify": "MuiTableCell-alignJustify",
                                          "alignLeft": "MuiTableCell-alignLeft",
                                          "alignRight": "MuiTableCell-alignRight",
                                          "body": "MuiTableCell-body",
                                          "footer": "MuiTableCell-footer",
                                          "head": "MuiTableCell-head",
                                          "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                          "paddingNone": "MuiTableCell-paddingNone",
                                          "root": "MuiTableCell-root",
                                          "sizeSmall": "MuiTableCell-sizeSmall",
                                          "stickyHeader": "MuiTableCell-stickyHeader",
                                        }
                                      }
                                      sortDirection={false}
                                      style={Object {}}
                                    >
                                      <th
                                        aria-sort={null}
                                        className="MuiTableCell-root MuiTableCell-head"
                                        scope="col"
                                        style={Object {}}
                                      >
                                        <span
                                          style={
                                            Object {
                                              "display": "flex",
                                              "justifyContent": "space-between",
                                            }
                                          }
                                        >
                                          <TableHead__StyledTableSortLabel
                                            active={false}
                                            direction="asc"
                                            hideSortIcon={true}
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "cursor": "pointer",
                                              }
                                            }
                                          >
                                            <WithStyles(ForwardRef(TableSortLabel))
                                              active={false}
                                              className="c2"
                                              direction="asc"
                                              hideSortIcon={true}
                                              onClick={[Function]}
                                              style={
                                                Object {
                                                  "cursor": "pointer",
                                                }
                                              }
                                            >
                                              <ForwardRef(TableSortLabel)
                                                active={false}
                                                className="c2"
                                                classes={
                                                  Object {
                                                    "active": "MuiTableSortLabel-active",
                                                    "icon": "MuiTableSortLabel-icon",
                                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                                    "root": "MuiTableSortLabel-root",
                                                  }
                                                }
                                                direction="asc"
                                                hideSortIcon={true}
                                                onClick={[Function]}
                                                style={
                                                  Object {
                                                    "cursor": "pointer",
                                                  }
                                                }
                                              >
                                                <WithStyles(ForwardRef(ButtonBase))
                                                  className="MuiTableSortLabel-root c2"
                                                  component="span"
                                                  disableRipple={true}
                                                  onClick={[Function]}
                                                  style={
                                                    Object {
                                                      "cursor": "pointer",
                                                    }
                                                  }
                                                >
                                                  <ForwardRef(ButtonBase)
                                                    className="MuiTableSortLabel-root c2"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "root": "MuiButtonBase-root",
                                                      }
                                                    }
                                                    component="span"
                                                    disableRipple={true}
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "cursor": "pointer",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-disabled={false}
                                                      className="MuiButtonBase-root MuiTableSortLabel-root c2"
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      role="button"
                                                      style={
                                                        Object {
                                                          "cursor": "pointer",
                                                        }
                                                      }
                                                      tabIndex={0}
                                                    >
                                                      DATA.rules.headers.name
                                                    </span>
                                                  </ForwardRef(ButtonBase)>
                                                </WithStyles(ForwardRef(ButtonBase))>
                                              </ForwardRef(TableSortLabel)>
                                            </WithStyles(ForwardRef(TableSortLabel))>
                                          </TableHead__StyledTableSortLabel>
                                        </span>
                                      </th>
                                    </ForwardRef(TableCell)>
                                  </WithStyles(ForwardRef(TableCell))>
                                  <WithStyles(ForwardRef(TableCell))
                                    key="1"
                                    sortDirection={false}
                                    style={
                                      Object {
                                        "width": "120px",
                                      }
                                    }
                                  >
                                    <ForwardRef(TableCell)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTableCell-alignCenter",
                                          "alignJustify": "MuiTableCell-alignJustify",
                                          "alignLeft": "MuiTableCell-alignLeft",
                                          "alignRight": "MuiTableCell-alignRight",
                                          "body": "MuiTableCell-body",
                                          "footer": "MuiTableCell-footer",
                                          "head": "MuiTableCell-head",
                                          "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                          "paddingNone": "MuiTableCell-paddingNone",
                                          "root": "MuiTableCell-root",
                                          "sizeSmall": "MuiTableCell-sizeSmall",
                                          "stickyHeader": "MuiTableCell-stickyHeader",
                                        }
                                      }
                                      sortDirection={false}
                                      style={
                                        Object {
                                          "width": "120px",
                                        }
                                      }
                                    >
                                      <th
                                        aria-sort={null}
                                        className="MuiTableCell-root MuiTableCell-head"
                                        scope="col"
                                        style={
                                          Object {
                                            "width": "120px",
                                          }
                                        }
                                      >
                                        <span
                                          style={
                                            Object {
                                              "display": "flex",
                                              "justifyContent": "space-between",
                                            }
                                          }
                                        >
                                          <TableHead__StyledTableSortLabel
                                            active={false}
                                            direction="asc"
                                            hideSortIcon={true}
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "cursor": "pointer",
                                              }
                                            }
                                          >
                                            <WithStyles(ForwardRef(TableSortLabel))
                                              active={false}
                                              className="c2"
                                              direction="asc"
                                              hideSortIcon={true}
                                              onClick={[Function]}
                                              style={
                                                Object {
                                                  "cursor": "pointer",
                                                }
                                              }
                                            >
                                              <ForwardRef(TableSortLabel)
                                                active={false}
                                                className="c2"
                                                classes={
                                                  Object {
                                                    "active": "MuiTableSortLabel-active",
                                                    "icon": "MuiTableSortLabel-icon",
                                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                                    "root": "MuiTableSortLabel-root",
                                                  }
                                                }
                                                direction="asc"
                                                hideSortIcon={true}
                                                onClick={[Function]}
                                                style={
                                                  Object {
                                                    "cursor": "pointer",
                                                  }
                                                }
                                              >
                                                <WithStyles(ForwardRef(ButtonBase))
                                                  className="MuiTableSortLabel-root c2"
                                                  component="span"
                                                  disableRipple={true}
                                                  onClick={[Function]}
                                                  style={
                                                    Object {
                                                      "cursor": "pointer",
                                                    }
                                                  }
                                                >
                                                  <ForwardRef(ButtonBase)
                                                    className="MuiTableSortLabel-root c2"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "root": "MuiButtonBase-root",
                                                      }
                                                    }
                                                    component="span"
                                                    disableRipple={true}
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "cursor": "pointer",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-disabled={false}
                                                      className="MuiButtonBase-root MuiTableSortLabel-root c2"
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      role="button"
                                                      style={
                                                        Object {
                                                          "cursor": "pointer",
                                                        }
                                                      }
                                                      tabIndex={0}
                                                    >
                                                      DATA.rules.headers.state
                                                    </span>
                                                  </ForwardRef(ButtonBase)>
                                                </WithStyles(ForwardRef(ButtonBase))>
                                              </ForwardRef(TableSortLabel)>
                                            </WithStyles(ForwardRef(TableSortLabel))>
                                          </TableHead__StyledTableSortLabel>
                                        </span>
                                      </th>
                                    </ForwardRef(TableCell)>
                                  </WithStyles(ForwardRef(TableCell))>
                                  <WithStyles(ForwardRef(TableCell))
                                    key="2"
                                    sortDirection={false}
                                    style={Object {}}
                                  >
                                    <ForwardRef(TableCell)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTableCell-alignCenter",
                                          "alignJustify": "MuiTableCell-alignJustify",
                                          "alignLeft": "MuiTableCell-alignLeft",
                                          "alignRight": "MuiTableCell-alignRight",
                                          "body": "MuiTableCell-body",
                                          "footer": "MuiTableCell-footer",
                                          "head": "MuiTableCell-head",
                                          "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                          "paddingNone": "MuiTableCell-paddingNone",
                                          "root": "MuiTableCell-root",
                                          "sizeSmall": "MuiTableCell-sizeSmall",
                                          "stickyHeader": "MuiTableCell-stickyHeader",
                                        }
                                      }
                                      sortDirection={false}
                                      style={Object {}}
                                    >
                                      <th
                                        aria-sort={null}
                                        className="MuiTableCell-root MuiTableCell-head"
                                        scope="col"
                                        style={Object {}}
                                      >
                                        <span
                                          style={
                                            Object {
                                              "display": "flex",
                                              "justifyContent": "space-between",
                                            }
                                          }
                                        >
                                          <TableHead__StyledTableSortLabel
                                            active={false}
                                            direction="asc"
                                            hideSortIcon={true}
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "cursor": "pointer",
                                              }
                                            }
                                          >
                                            <WithStyles(ForwardRef(TableSortLabel))
                                              active={false}
                                              className="c2"
                                              direction="asc"
                                              hideSortIcon={true}
                                              onClick={[Function]}
                                              style={
                                                Object {
                                                  "cursor": "pointer",
                                                }
                                              }
                                            >
                                              <ForwardRef(TableSortLabel)
                                                active={false}
                                                className="c2"
                                                classes={
                                                  Object {
                                                    "active": "MuiTableSortLabel-active",
                                                    "icon": "MuiTableSortLabel-icon",
                                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                                    "root": "MuiTableSortLabel-root",
                                                  }
                                                }
                                                direction="asc"
                                                hideSortIcon={true}
                                                onClick={[Function]}
                                                style={
                                                  Object {
                                                    "cursor": "pointer",
                                                  }
                                                }
                                              >
                                                <WithStyles(ForwardRef(ButtonBase))
                                                  className="MuiTableSortLabel-root c2"
                                                  component="span"
                                                  disableRipple={true}
                                                  onClick={[Function]}
                                                  style={
                                                    Object {
                                                      "cursor": "pointer",
                                                    }
                                                  }
                                                >
                                                  <ForwardRef(ButtonBase)
                                                    className="MuiTableSortLabel-root c2"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "root": "MuiButtonBase-root",
                                                      }
                                                    }
                                                    component="span"
                                                    disableRipple={true}
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "cursor": "pointer",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-disabled={false}
                                                      className="MuiButtonBase-root MuiTableSortLabel-root c2"
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      role="button"
                                                      style={
                                                        Object {
                                                          "cursor": "pointer",
                                                        }
                                                      }
                                                      tabIndex={0}
                                                    >
                                                      DATA.rules.headers.settingsFrom
                                                    </span>
                                                  </ForwardRef(ButtonBase)>
                                                </WithStyles(ForwardRef(ButtonBase))>
                                              </ForwardRef(TableSortLabel)>
                                            </WithStyles(ForwardRef(TableSortLabel))>
                                          </TableHead__StyledTableSortLabel>
                                        </span>
                                      </th>
                                    </ForwardRef(TableCell)>
                                  </WithStyles(ForwardRef(TableCell))>
                                  <WithStyles(ForwardRef(TableCell))
                                    key="3"
                                    sortDirection={false}
                                    style={Object {}}
                                  >
                                    <ForwardRef(TableCell)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTableCell-alignCenter",
                                          "alignJustify": "MuiTableCell-alignJustify",
                                          "alignLeft": "MuiTableCell-alignLeft",
                                          "alignRight": "MuiTableCell-alignRight",
                                          "body": "MuiTableCell-body",
                                          "footer": "MuiTableCell-footer",
                                          "head": "MuiTableCell-head",
                                          "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                          "paddingNone": "MuiTableCell-paddingNone",
                                          "root": "MuiTableCell-root",
                                          "sizeSmall": "MuiTableCell-sizeSmall",
                                          "stickyHeader": "MuiTableCell-stickyHeader",
                                        }
                                      }
                                      sortDirection={false}
                                      style={Object {}}
                                    >
                                      <th
                                        aria-sort={null}
                                        className="MuiTableCell-root MuiTableCell-head"
                                        scope="col"
                                        style={Object {}}
                                      >
                                        <span
                                          style={
                                            Object {
                                              "display": "flex",
                                              "justifyContent": "space-between",
                                            }
                                          }
                                        >
                                          <TableHead__StyledTableSortLabel
                                            active={false}
                                            direction="asc"
                                            hideSortIcon={true}
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "cursor": "pointer",
                                              }
                                            }
                                          >
                                            <WithStyles(ForwardRef(TableSortLabel))
                                              active={false}
                                              className="c2"
                                              direction="asc"
                                              hideSortIcon={true}
                                              onClick={[Function]}
                                              style={
                                                Object {
                                                  "cursor": "pointer",
                                                }
                                              }
                                            >
                                              <ForwardRef(TableSortLabel)
                                                active={false}
                                                className="c2"
                                                classes={
                                                  Object {
                                                    "active": "MuiTableSortLabel-active",
                                                    "icon": "MuiTableSortLabel-icon",
                                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                                    "root": "MuiTableSortLabel-root",
                                                  }
                                                }
                                                direction="asc"
                                                hideSortIcon={true}
                                                onClick={[Function]}
                                                style={
                                                  Object {
                                                    "cursor": "pointer",
                                                  }
                                                }
                                              >
                                                <WithStyles(ForwardRef(ButtonBase))
                                                  className="MuiTableSortLabel-root c2"
                                                  component="span"
                                                  disableRipple={true}
                                                  onClick={[Function]}
                                                  style={
                                                    Object {
                                                      "cursor": "pointer",
                                                    }
                                                  }
                                                >
                                                  <ForwardRef(ButtonBase)
                                                    className="MuiTableSortLabel-root c2"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "root": "MuiButtonBase-root",
                                                      }
                                                    }
                                                    component="span"
                                                    disableRipple={true}
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "cursor": "pointer",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-disabled={false}
                                                      className="MuiButtonBase-root MuiTableSortLabel-root c2"
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      role="button"
                                                      style={
                                                        Object {
                                                          "cursor": "pointer",
                                                        }
                                                      }
                                                      tabIndex={0}
                                                    >
                                                      DATA.rules.headers.catagory
                                                    </span>
                                                  </ForwardRef(ButtonBase)>
                                                </WithStyles(ForwardRef(ButtonBase))>
                                              </ForwardRef(TableSortLabel)>
                                            </WithStyles(ForwardRef(TableSortLabel))>
                                          </TableHead__StyledTableSortLabel>
                                        </span>
                                      </th>
                                    </ForwardRef(TableCell)>
                                  </WithStyles(ForwardRef(TableCell))>
                                  <WithStyles(ForwardRef(TableCell))
                                    key="4"
                                    sortDirection={false}
                                    style={
                                      Object {
                                        "paddingRight": "0px",
                                      }
                                    }
                                  >
                                    <ForwardRef(TableCell)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTableCell-alignCenter",
                                          "alignJustify": "MuiTableCell-alignJustify",
                                          "alignLeft": "MuiTableCell-alignLeft",
                                          "alignRight": "MuiTableCell-alignRight",
                                          "body": "MuiTableCell-body",
                                          "footer": "MuiTableCell-footer",
                                          "head": "MuiTableCell-head",
                                          "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                          "paddingNone": "MuiTableCell-paddingNone",
                                          "root": "MuiTableCell-root",
                                          "sizeSmall": "MuiTableCell-sizeSmall",
                                          "stickyHeader": "MuiTableCell-stickyHeader",
                                        }
                                      }
                                      sortDirection={false}
                                      style={
                                        Object {
                                          "paddingRight": "0px",
                                        }
                                      }
                                    >
                                      <th
                                        aria-sort={null}
                                        className="MuiTableCell-root MuiTableCell-head"
                                        scope="col"
                                        style={
                                          Object {
                                            "paddingRight": "0px",
                                          }
                                        }
                                      >
                                        <span
                                          style={
                                            Object {
                                              "display": "flex",
                                              "justifyContent": "space-between",
                                            }
                                          }
                                        >
                                          <TableHead__StyledTableSortLabel
                                            active={false}
                                            direction="asc"
                                            hideSortIcon={true}
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "cursor": "pointer",
                                              }
                                            }
                                          >
                                            <WithStyles(ForwardRef(TableSortLabel))
                                              active={false}
                                              className="c2"
                                              direction="asc"
                                              hideSortIcon={true}
                                              onClick={[Function]}
                                              style={
                                                Object {
                                                  "cursor": "pointer",
                                                }
                                              }
                                            >
                                              <ForwardRef(TableSortLabel)
                                                active={false}
                                                className="c2"
                                                classes={
                                                  Object {
                                                    "active": "MuiTableSortLabel-active",
                                                    "icon": "MuiTableSortLabel-icon",
                                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                                    "root": "MuiTableSortLabel-root",
                                                  }
                                                }
                                                direction="asc"
                                                hideSortIcon={true}
                                                onClick={[Function]}
                                                style={
                                                  Object {
                                                    "cursor": "pointer",
                                                  }
                                                }
                                              >
                                                <WithStyles(ForwardRef(ButtonBase))
                                                  className="MuiTableSortLabel-root c2"
                                                  component="span"
                                                  disableRipple={true}
                                                  onClick={[Function]}
                                                  style={
                                                    Object {
                                                      "cursor": "pointer",
                                                    }
                                                  }
                                                >
                                                  <ForwardRef(ButtonBase)
                                                    className="MuiTableSortLabel-root c2"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "root": "MuiButtonBase-root",
                                                      }
                                                    }
                                                    component="span"
                                                    disableRipple={true}
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "cursor": "pointer",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-disabled={false}
                                                      className="MuiButtonBase-root MuiTableSortLabel-root c2"
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      role="button"
                                                      style={
                                                        Object {
                                                          "cursor": "pointer",
                                                        }
                                                      }
                                                      tabIndex={0}
                                                    >
                                                      DATA.rules.headers.type
                                                    </span>
                                                  </ForwardRef(ButtonBase)>
                                                </WithStyles(ForwardRef(ButtonBase))>
                                              </ForwardRef(TableSortLabel)>
                                            </WithStyles(ForwardRef(TableSortLabel))>
                                          </TableHead__StyledTableSortLabel>
                                          <span>
                                            <TableHeaderIcons
                                              toggleFilters={[Function]}
                                            >
                                              <WithStyles(ForwardRef(IconButton))
                                                onClick={[Function]}
                                                style={
                                                  Object {
                                                    "height": 45,
                                                    "width": 45,
                                                  }
                                                }
                                              >
                                                <ForwardRef(IconButton)
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiIconButton-colorInherit",
                                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                                      "disabled": "Mui-disabled",
                                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                                      "edgeStart": "MuiIconButton-edgeStart",
                                                      "label": "MuiIconButton-label",
                                                      "root": "MuiIconButton-root",
                                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                                    }
                                                  }
                                                  onClick={[Function]}
                                                  style={
                                                    Object {
                                                      "height": 45,
                                                      "width": 45,
                                                    }
                                                  }
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    centerRipple={true}
                                                    className="MuiIconButton-root"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "height": 45,
                                                        "width": 45,
                                                      }
                                                    }
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      centerRipple={true}
                                                      className="MuiIconButton-root"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      disabled={false}
                                                      focusRipple={true}
                                                      onClick={[Function]}
                                                      style={
                                                        Object {
                                                          "height": 45,
                                                          "width": 45,
                                                        }
                                                      }
                                                    >
                                                      <button
                                                        className="MuiButtonBase-root MuiIconButton-root"
                                                        disabled={false}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        style={
                                                          Object {
                                                            "height": 45,
                                                            "width": 45,
                                                          }
                                                        }
                                                        tabIndex={0}
                                                        type="button"
                                                      >
                                                        <span
                                                          className="MuiIconButton-label"
                                                        >
                                                          <Icon
                                                            iconcolor="#0A75C2"
                                                            margin="none"
                                                          >
                                                            <WithStyles(ForwardRef(Icon))
                                                              className="c3"
                                                              iconcolor="#0A75C2"
                                                              margin="none"
                                                            >
                                                              <ForwardRef(Icon)
                                                                className="c3"
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiIcon-colorAction",
                                                                    "colorDisabled": "MuiIcon-colorDisabled",
                                                                    "colorError": "MuiIcon-colorError",
                                                                    "colorPrimary": "MuiIcon-colorPrimary",
                                                                    "colorSecondary": "MuiIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiIcon-fontSizeSmall",
                                                                    "root": "MuiIcon-root",
                                                                  }
                                                                }
                                                                iconcolor="#0A75C2"
                                                                margin="none"
                                                              >
                                                                <span
                                                                  aria-hidden={true}
                                                                  className="material-icons MuiIcon-root c3"
                                                                  iconcolor="#0A75C2"
                                                                  margin="none"
                                                                >
                                                                  filter_list
                                                                </span>
                                                              </ForwardRef(Icon)>
                                                            </WithStyles(ForwardRef(Icon))>
                                                          </Icon>
                                                        </span>
                                                        <WithStyles(memo)
                                                          center={true}
                                                        >
                                                          <ForwardRef(TouchRipple)
                                                            center={true}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </ForwardRef(TouchRipple)>
                                                        </WithStyles(memo)>
                                                      </button>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(IconButton)>
                                              </WithStyles(ForwardRef(IconButton))>
                                            </TableHeaderIcons>
                                          </span>
                                        </span>
                                      </th>
                                    </ForwardRef(TableCell)>
                                  </WithStyles(ForwardRef(TableCell))>
                                </tr>
                              </ForwardRef(TableRow)>
                            </WithStyles(ForwardRef(TableRow))>
                            <TableHead__CollapsableTableRow
                              className="filters"
                              show="false"
                            >
                              <WithStyles(ForwardRef(TableRow))
                                className="filters c4"
                                show="false"
                              >
                                <ForwardRef(TableRow)
                                  className="filters c4"
                                  classes={
                                    Object {
                                      "footer": "MuiTableRow-footer",
                                      "head": "MuiTableRow-head",
                                      "hover": "MuiTableRow-hover",
                                      "root": "MuiTableRow-root",
                                      "selected": "Mui-selected",
                                    }
                                  }
                                  show="false"
                                >
                                  <tr
                                    className="MuiTableRow-root filters c4 MuiTableRow-head"
                                    role={null}
                                    show="false"
                                  >
                                    <WithStyles(ForwardRef(TableCell))
                                      style={
                                        Object {
                                          "padding": "0px 18px",
                                        }
                                      }
                                    >
                                      <ForwardRef(TableCell)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTableCell-alignCenter",
                                            "alignJustify": "MuiTableCell-alignJustify",
                                            "alignLeft": "MuiTableCell-alignLeft",
                                            "alignRight": "MuiTableCell-alignRight",
                                            "body": "MuiTableCell-body",
                                            "footer": "MuiTableCell-footer",
                                            "head": "MuiTableCell-head",
                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                            "paddingNone": "MuiTableCell-paddingNone",
                                            "root": "MuiTableCell-root",
                                            "sizeSmall": "MuiTableCell-sizeSmall",
                                            "stickyHeader": "MuiTableCell-stickyHeader",
                                          }
                                        }
                                        style={
                                          Object {
                                            "padding": "0px 18px",
                                          }
                                        }
                                      >
                                        <th
                                          aria-sort={null}
                                          className="MuiTableCell-root MuiTableCell-head"
                                          scope="col"
                                          style={
                                            Object {
                                              "padding": "0px 18px",
                                            }
                                          }
                                        />
                                      </ForwardRef(TableCell)>
                                    </WithStyles(ForwardRef(TableCell))>
                                    <WithStyles(ForwardRef(TableCell))
                                      key="name"
                                      style={
                                        Object {
                                          "paddingLeft": 3,
                                          "paddingRight": 3,
                                        }
                                      }
                                    >
                                      <ForwardRef(TableCell)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTableCell-alignCenter",
                                            "alignJustify": "MuiTableCell-alignJustify",
                                            "alignLeft": "MuiTableCell-alignLeft",
                                            "alignRight": "MuiTableCell-alignRight",
                                            "body": "MuiTableCell-body",
                                            "footer": "MuiTableCell-footer",
                                            "head": "MuiTableCell-head",
                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                            "paddingNone": "MuiTableCell-paddingNone",
                                            "root": "MuiTableCell-root",
                                            "sizeSmall": "MuiTableCell-sizeSmall",
                                            "stickyHeader": "MuiTableCell-stickyHeader",
                                          }
                                        }
                                        style={
                                          Object {
                                            "paddingLeft": 3,
                                            "paddingRight": 3,
                                          }
                                        }
                                      >
                                        <th
                                          aria-sort={null}
                                          className="MuiTableCell-root MuiTableCell-head"
                                          scope="col"
                                          style={
                                            Object {
                                              "paddingLeft": 3,
                                              "paddingRight": 3,
                                            }
                                          }
                                        >
                                          <FilterInput__InputSearch>
                                            <WithStyles(ForwardRef(FormControl))
                                              className="c5"
                                            >
                                              <ForwardRef(FormControl)
                                                className="c5"
                                                classes={
                                                  Object {
                                                    "fullWidth": "MuiFormControl-fullWidth",
                                                    "marginDense": "MuiFormControl-marginDense",
                                                    "marginNormal": "MuiFormControl-marginNormal",
                                                    "root": "MuiFormControl-root",
                                                  }
                                                }
                                              >
                                                <div
                                                  className="MuiFormControl-root c5"
                                                >
                                                  <WithStyles(ForwardRef(Input))
                                                    disableUnderline={true}
                                                    endAdornment={false}
                                                    inputRef={[Function]}
                                                    onChange={[Function]}
                                                    startAdornment={
                                                      <FilterInput__SearchIcon>
                                                        search
                                                      </FilterInput__SearchIcon>
                                                    }
                                                    type="text"
                                                  >
                                                    <ForwardRef(Input)
                                                      classes={
                                                        Object {
                                                          "colorSecondary": "MuiInput-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInput-formControl",
                                                          "fullWidth": "MuiInput-fullWidth",
                                                          "input": "MuiInput-input",
                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                          "marginDense": "MuiInput-marginDense",
                                                          "multiline": "MuiInput-multiline",
                                                          "root": "MuiInput-root",
                                                          "underline": "MuiInput-underline",
                                                        }
                                                      }
                                                      disableUnderline={true}
                                                      endAdornment={false}
                                                      inputRef={[Function]}
                                                      onChange={[Function]}
                                                      startAdornment={
                                                        <FilterInput__SearchIcon>
                                                          search
                                                        </FilterInput__SearchIcon>
                                                      }
                                                      type="text"
                                                    >
                                                      <WithStyles(ForwardRef(InputBase))
                                                        classes={
                                                          Object {
                                                            "colorSecondary": "MuiInput-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "error": "Mui-error",
                                                            "focused": "Mui-focused",
                                                            "formControl": "MuiInput-formControl",
                                                            "fullWidth": "MuiInput-fullWidth",
                                                            "input": "MuiInput-input",
                                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                            "marginDense": "MuiInput-marginDense",
                                                            "multiline": "MuiInput-multiline",
                                                            "root": "MuiInput-root",
                                                            "underline": null,
                                                          }
                                                        }
                                                        endAdornment={false}
                                                        fullWidth={false}
                                                        inputComponent="input"
                                                        inputRef={[Function]}
                                                        multiline={false}
                                                        onChange={[Function]}
                                                        startAdornment={
                                                          <FilterInput__SearchIcon>
                                                            search
                                                          </FilterInput__SearchIcon>
                                                        }
                                                        type="text"
                                                      >
                                                        <ForwardRef(InputBase)
                                                          classes={
                                                            Object {
                                                              "adornedEnd": "MuiInputBase-adornedEnd",
                                                              "adornedStart": "MuiInputBase-adornedStart",
                                                              "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                              "disabled": "Mui-disabled Mui-disabled",
                                                              "error": "Mui-error Mui-error",
                                                              "focused": "Mui-focused Mui-focused",
                                                              "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                              "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                              "input": "MuiInputBase-input MuiInput-input",
                                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                              "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                              "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                              "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                              "root": "MuiInputBase-root MuiInput-root",
                                                            }
                                                          }
                                                          endAdornment={false}
                                                          fullWidth={false}
                                                          inputComponent="input"
                                                          inputRef={[Function]}
                                                          multiline={false}
                                                          onChange={[Function]}
                                                          startAdornment={
                                                            <FilterInput__SearchIcon>
                                                              search
                                                            </FilterInput__SearchIcon>
                                                          }
                                                          type="text"
                                                        >
                                                          <div
                                                            className="MuiInputBase-root MuiInput-root MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                                                            onClick={[Function]}
                                                          >
                                                            <FilterInput__SearchIcon>
                                                              <WithStyles(ForwardRef(Icon))
                                                                className="c6"
                                                              >
                                                                <ForwardRef(Icon)
                                                                  className="c6"
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "MuiIcon-colorAction",
                                                                      "colorDisabled": "MuiIcon-colorDisabled",
                                                                      "colorError": "MuiIcon-colorError",
                                                                      "colorPrimary": "MuiIcon-colorPrimary",
                                                                      "colorSecondary": "MuiIcon-colorSecondary",
                                                                      "fontSizeInherit": "MuiIcon-fontSizeInherit",
                                                                      "fontSizeLarge": "MuiIcon-fontSizeLarge",
                                                                      "fontSizeSmall": "MuiIcon-fontSizeSmall",
                                                                      "root": "MuiIcon-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    aria-hidden={true}
                                                                    className="material-icons MuiIcon-root c6"
                                                                  >
                                                                    search
                                                                  </span>
                                                                </ForwardRef(Icon)>
                                                              </WithStyles(ForwardRef(Icon))>
                                                            </FilterInput__SearchIcon>
                                                            <input
                                                              aria-invalid={false}
                                                              className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                              disabled={false}
                                                              onAnimationStart={[Function]}
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              required={false}
                                                              type="text"
                                                            />
                                                          </div>
                                                        </ForwardRef(InputBase)>
                                                      </WithStyles(ForwardRef(InputBase))>
                                                    </ForwardRef(Input)>
                                                  </WithStyles(ForwardRef(Input))>
                                                </div>
                                              </ForwardRef(FormControl)>
                                            </WithStyles(ForwardRef(FormControl))>
                                          </FilterInput__InputSearch>
                                        </th>
                                      </ForwardRef(TableCell)>
                                    </WithStyles(ForwardRef(TableCell))>
                                    <WithStyles(ForwardRef(TableCell))
                                      key="state"
                                      style={
                                        Object {
                                          "paddingLeft": 3,
                                          "paddingRight": 3,
                                        }
                                      }
                                    >
                                      <ForwardRef(TableCell)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTableCell-alignCenter",
                                            "alignJustify": "MuiTableCell-alignJustify",
                                            "alignLeft": "MuiTableCell-alignLeft",
                                            "alignRight": "MuiTableCell-alignRight",
                                            "body": "MuiTableCell-body",
                                            "footer": "MuiTableCell-footer",
                                            "head": "MuiTableCell-head",
                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                            "paddingNone": "MuiTableCell-paddingNone",
                                            "root": "MuiTableCell-root",
                                            "sizeSmall": "MuiTableCell-sizeSmall",
                                            "stickyHeader": "MuiTableCell-stickyHeader",
                                          }
                                        }
                                        style={
                                          Object {
                                            "paddingLeft": 3,
                                            "paddingRight": 3,
                                          }
                                        }
                                      >
                                        <th
                                          aria-sort={null}
                                          className="MuiTableCell-root MuiTableCell-head"
                                          scope="col"
                                          style={
                                            Object {
                                              "paddingLeft": 3,
                                              "paddingRight": 3,
                                            }
                                          }
                                        >
                                          <FilterInput__InputSearch>
                                            <WithStyles(ForwardRef(FormControl))
                                              className="c5"
                                            >
                                              <ForwardRef(FormControl)
                                                className="c5"
                                                classes={
                                                  Object {
                                                    "fullWidth": "MuiFormControl-fullWidth",
                                                    "marginDense": "MuiFormControl-marginDense",
                                                    "marginNormal": "MuiFormControl-marginNormal",
                                                    "root": "MuiFormControl-root",
                                                  }
                                                }
                                              >
                                                <div
                                                  className="MuiFormControl-root c5"
                                                >
                                                  <WithStyles(ForwardRef(Input))
                                                    disableUnderline={true}
                                                    disabled={true}
                                                    endAdornment={false}
                                                    inputRef={[Function]}
                                                    onChange={[Function]}
                                                    startAdornment={
                                                      <FilterInput__SearchIcon>
                                                        search
                                                      </FilterInput__SearchIcon>
                                                    }
                                                    type="text"
                                                  >
                                                    <ForwardRef(Input)
                                                      classes={
                                                        Object {
                                                          "colorSecondary": "MuiInput-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInput-formControl",
                                                          "fullWidth": "MuiInput-fullWidth",
                                                          "input": "MuiInput-input",
                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                          "marginDense": "MuiInput-marginDense",
                                                          "multiline": "MuiInput-multiline",
                                                          "root": "MuiInput-root",
                                                          "underline": "MuiInput-underline",
                                                        }
                                                      }
                                                      disableUnderline={true}
                                                      disabled={true}
                                                      endAdornment={false}
                                                      inputRef={[Function]}
                                                      onChange={[Function]}
                                                      startAdornment={
                                                        <FilterInput__SearchIcon>
                                                          search
                                                        </FilterInput__SearchIcon>
                                                      }
                                                      type="text"
                                                    >
                                                      <WithStyles(ForwardRef(InputBase))
                                                        classes={
                                                          Object {
                                                            "colorSecondary": "MuiInput-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "error": "Mui-error",
                                                            "focused": "Mui-focused",
                                                            "formControl": "MuiInput-formControl",
                                                            "fullWidth": "MuiInput-fullWidth",
                                                            "input": "MuiInput-input",
                                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                            "marginDense": "MuiInput-marginDense",
                                                            "multiline": "MuiInput-multiline",
                                                            "root": "MuiInput-root",
                                                            "underline": null,
                                                          }
                                                        }
                                                        disabled={true}
                                                        endAdornment={false}
                                                        fullWidth={false}
                                                        inputComponent="input"
                                                        inputRef={[Function]}
                                                        multiline={false}
                                                        onChange={[Function]}
                                                        startAdornment={
                                                          <FilterInput__SearchIcon>
                                                            search
                                                          </FilterInput__SearchIcon>
                                                        }
                                                        type="text"
                                                      >
                                                        <ForwardRef(InputBase)
                                                          classes={
                                                            Object {
                                                              "adornedEnd": "MuiInputBase-adornedEnd",
                                                              "adornedStart": "MuiInputBase-adornedStart",
                                                              "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                              "disabled": "Mui-disabled Mui-disabled",
                                                              "error": "Mui-error Mui-error",
                                                              "focused": "Mui-focused Mui-focused",
                                                              "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                              "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                              "input": "MuiInputBase-input MuiInput-input",
                                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                              "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                              "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                              "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                              "root": "MuiInputBase-root MuiInput-root",
                                                            }
                                                          }
                                                          disabled={true}
                                                          endAdornment={false}
                                                          fullWidth={false}
                                                          inputComponent="input"
                                                          inputRef={[Function]}
                                                          multiline={false}
                                                          onChange={[Function]}
                                                          startAdornment={
                                                            <FilterInput__SearchIcon>
                                                              search
                                                            </FilterInput__SearchIcon>
                                                          }
                                                          type="text"
                                                        >
                                                          <div
                                                            className="MuiInputBase-root MuiInput-root Mui-disabled Mui-disabled MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                                                            onClick={[Function]}
                                                          >
                                                            <FilterInput__SearchIcon>
                                                              <WithStyles(ForwardRef(Icon))
                                                                className="c6"
                                                              >
                                                                <ForwardRef(Icon)
                                                                  className="c6"
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "MuiIcon-colorAction",
                                                                      "colorDisabled": "MuiIcon-colorDisabled",
                                                                      "colorError": "MuiIcon-colorError",
                                                                      "colorPrimary": "MuiIcon-colorPrimary",
                                                                      "colorSecondary": "MuiIcon-colorSecondary",
                                                                      "fontSizeInherit": "MuiIcon-fontSizeInherit",
                                                                      "fontSizeLarge": "MuiIcon-fontSizeLarge",
                                                                      "fontSizeSmall": "MuiIcon-fontSizeSmall",
                                                                      "root": "MuiIcon-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    aria-hidden={true}
                                                                    className="material-icons MuiIcon-root c6"
                                                                  >
                                                                    search
                                                                  </span>
                                                                </ForwardRef(Icon)>
                                                              </WithStyles(ForwardRef(Icon))>
                                                            </FilterInput__SearchIcon>
                                                            <input
                                                              aria-invalid={false}
                                                              className="MuiInputBase-input MuiInput-input Mui-disabled Mui-disabled MuiInputBase-inputAdornedStart"
                                                              disabled={true}
                                                              onAnimationStart={[Function]}
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              required={false}
                                                              type="text"
                                                            />
                                                          </div>
                                                        </ForwardRef(InputBase)>
                                                      </WithStyles(ForwardRef(InputBase))>
                                                    </ForwardRef(Input)>
                                                  </WithStyles(ForwardRef(Input))>
                                                </div>
                                              </ForwardRef(FormControl)>
                                            </WithStyles(ForwardRef(FormControl))>
                                          </FilterInput__InputSearch>
                                        </th>
                                      </ForwardRef(TableCell)>
                                    </WithStyles(ForwardRef(TableCell))>
                                    <WithStyles(ForwardRef(TableCell))
                                      key="settingsFrom"
                                      style={
                                        Object {
                                          "paddingLeft": 3,
                                          "paddingRight": 3,
                                        }
                                      }
                                    >
                                      <ForwardRef(TableCell)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTableCell-alignCenter",
                                            "alignJustify": "MuiTableCell-alignJustify",
                                            "alignLeft": "MuiTableCell-alignLeft",
                                            "alignRight": "MuiTableCell-alignRight",
                                            "body": "MuiTableCell-body",
                                            "footer": "MuiTableCell-footer",
                                            "head": "MuiTableCell-head",
                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                            "paddingNone": "MuiTableCell-paddingNone",
                                            "root": "MuiTableCell-root",
                                            "sizeSmall": "MuiTableCell-sizeSmall",
                                            "stickyHeader": "MuiTableCell-stickyHeader",
                                          }
                                        }
                                        style={
                                          Object {
                                            "paddingLeft": 3,
                                            "paddingRight": 3,
                                          }
                                        }
                                      >
                                        <th
                                          aria-sort={null}
                                          className="MuiTableCell-root MuiTableCell-head"
                                          scope="col"
                                          style={
                                            Object {
                                              "paddingLeft": 3,
                                              "paddingRight": 3,
                                            }
                                          }
                                        >
                                          <FilterInput__InputSearch>
                                            <WithStyles(ForwardRef(FormControl))
                                              className="c5"
                                            >
                                              <ForwardRef(FormControl)
                                                className="c5"
                                                classes={
                                                  Object {
                                                    "fullWidth": "MuiFormControl-fullWidth",
                                                    "marginDense": "MuiFormControl-marginDense",
                                                    "marginNormal": "MuiFormControl-marginNormal",
                                                    "root": "MuiFormControl-root",
                                                  }
                                                }
                                              >
                                                <div
                                                  className="MuiFormControl-root c5"
                                                >
                                                  <WithStyles(ForwardRef(Input))
                                                    disableUnderline={true}
                                                    endAdornment={false}
                                                    inputRef={[Function]}
                                                    onChange={[Function]}
                                                    startAdornment={
                                                      <FilterInput__SearchIcon>
                                                        search
                                                      </FilterInput__SearchIcon>
                                                    }
                                                    type="text"
                                                  >
                                                    <ForwardRef(Input)
                                                      classes={
                                                        Object {
                                                          "colorSecondary": "MuiInput-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInput-formControl",
                                                          "fullWidth": "MuiInput-fullWidth",
                                                          "input": "MuiInput-input",
                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                          "marginDense": "MuiInput-marginDense",
                                                          "multiline": "MuiInput-multiline",
                                                          "root": "MuiInput-root",
                                                          "underline": "MuiInput-underline",
                                                        }
                                                      }
                                                      disableUnderline={true}
                                                      endAdornment={false}
                                                      inputRef={[Function]}
                                                      onChange={[Function]}
                                                      startAdornment={
                                                        <FilterInput__SearchIcon>
                                                          search
                                                        </FilterInput__SearchIcon>
                                                      }
                                                      type="text"
                                                    >
                                                      <WithStyles(ForwardRef(InputBase))
                                                        classes={
                                                          Object {
                                                            "colorSecondary": "MuiInput-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "error": "Mui-error",
                                                            "focused": "Mui-focused",
                                                            "formControl": "MuiInput-formControl",
                                                            "fullWidth": "MuiInput-fullWidth",
                                                            "input": "MuiInput-input",
                                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                            "marginDense": "MuiInput-marginDense",
                                                            "multiline": "MuiInput-multiline",
                                                            "root": "MuiInput-root",
                                                            "underline": null,
                                                          }
                                                        }
                                                        endAdornment={false}
                                                        fullWidth={false}
                                                        inputComponent="input"
                                                        inputRef={[Function]}
                                                        multiline={false}
                                                        onChange={[Function]}
                                                        startAdornment={
                                                          <FilterInput__SearchIcon>
                                                            search
                                                          </FilterInput__SearchIcon>
                                                        }
                                                        type="text"
                                                      >
                                                        <ForwardRef(InputBase)
                                                          classes={
                                                            Object {
                                                              "adornedEnd": "MuiInputBase-adornedEnd",
                                                              "adornedStart": "MuiInputBase-adornedStart",
                                                              "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                              "disabled": "Mui-disabled Mui-disabled",
                                                              "error": "Mui-error Mui-error",
                                                              "focused": "Mui-focused Mui-focused",
                                                              "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                              "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                              "input": "MuiInputBase-input MuiInput-input",
                                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                              "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                              "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                              "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                              "root": "MuiInputBase-root MuiInput-root",
                                                            }
                                                          }
                                                          endAdornment={false}
                                                          fullWidth={false}
                                                          inputComponent="input"
                                                          inputRef={[Function]}
                                                          multiline={false}
                                                          onChange={[Function]}
                                                          startAdornment={
                                                            <FilterInput__SearchIcon>
                                                              search
                                                            </FilterInput__SearchIcon>
                                                          }
                                                          type="text"
                                                        >
                                                          <div
                                                            className="MuiInputBase-root MuiInput-root MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                                                            onClick={[Function]}
                                                          >
                                                            <FilterInput__SearchIcon>
                                                              <WithStyles(ForwardRef(Icon))
                                                                className="c6"
                                                              >
                                                                <ForwardRef(Icon)
                                                                  className="c6"
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "MuiIcon-colorAction",
                                                                      "colorDisabled": "MuiIcon-colorDisabled",
                                                                      "colorError": "MuiIcon-colorError",
                                                                      "colorPrimary": "MuiIcon-colorPrimary",
                                                                      "colorSecondary": "MuiIcon-colorSecondary",
                                                                      "fontSizeInherit": "MuiIcon-fontSizeInherit",
                                                                      "fontSizeLarge": "MuiIcon-fontSizeLarge",
                                                                      "fontSizeSmall": "MuiIcon-fontSizeSmall",
                                                                      "root": "MuiIcon-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    aria-hidden={true}
                                                                    className="material-icons MuiIcon-root c6"
                                                                  >
                                                                    search
                                                                  </span>
                                                                </ForwardRef(Icon)>
                                                              </WithStyles(ForwardRef(Icon))>
                                                            </FilterInput__SearchIcon>
                                                            <input
                                                              aria-invalid={false}
                                                              className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                              disabled={false}
                                                              onAnimationStart={[Function]}
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              required={false}
                                                              type="text"
                                                            />
                                                          </div>
                                                        </ForwardRef(InputBase)>
                                                      </WithStyles(ForwardRef(InputBase))>
                                                    </ForwardRef(Input)>
                                                  </WithStyles(ForwardRef(Input))>
                                                </div>
                                              </ForwardRef(FormControl)>
                                            </WithStyles(ForwardRef(FormControl))>
                                          </FilterInput__InputSearch>
                                        </th>
                                      </ForwardRef(TableCell)>
                                    </WithStyles(ForwardRef(TableCell))>
                                    <WithStyles(ForwardRef(TableCell))
                                      key="catagory"
                                      style={
                                        Object {
                                          "paddingLeft": 3,
                                          "paddingRight": 3,
                                        }
                                      }
                                    >
                                      <ForwardRef(TableCell)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTableCell-alignCenter",
                                            "alignJustify": "MuiTableCell-alignJustify",
                                            "alignLeft": "MuiTableCell-alignLeft",
                                            "alignRight": "MuiTableCell-alignRight",
                                            "body": "MuiTableCell-body",
                                            "footer": "MuiTableCell-footer",
                                            "head": "MuiTableCell-head",
                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                            "paddingNone": "MuiTableCell-paddingNone",
                                            "root": "MuiTableCell-root",
                                            "sizeSmall": "MuiTableCell-sizeSmall",
                                            "stickyHeader": "MuiTableCell-stickyHeader",
                                          }
                                        }
                                        style={
                                          Object {
                                            "paddingLeft": 3,
                                            "paddingRight": 3,
                                          }
                                        }
                                      >
                                        <th
                                          aria-sort={null}
                                          className="MuiTableCell-root MuiTableCell-head"
                                          scope="col"
                                          style={
                                            Object {
                                              "paddingLeft": 3,
                                              "paddingRight": 3,
                                            }
                                          }
                                        >
                                          <FilterInput__InputSearch>
                                            <WithStyles(ForwardRef(FormControl))
                                              className="c5"
                                            >
                                              <ForwardRef(FormControl)
                                                className="c5"
                                                classes={
                                                  Object {
                                                    "fullWidth": "MuiFormControl-fullWidth",
                                                    "marginDense": "MuiFormControl-marginDense",
                                                    "marginNormal": "MuiFormControl-marginNormal",
                                                    "root": "MuiFormControl-root",
                                                  }
                                                }
                                              >
                                                <div
                                                  className="MuiFormControl-root c5"
                                                >
                                                  <WithStyles(ForwardRef(Input))
                                                    disableUnderline={true}
                                                    endAdornment={false}
                                                    inputRef={[Function]}
                                                    onChange={[Function]}
                                                    startAdornment={
                                                      <FilterInput__SearchIcon>
                                                        search
                                                      </FilterInput__SearchIcon>
                                                    }
                                                    type="text"
                                                  >
                                                    <ForwardRef(Input)
                                                      classes={
                                                        Object {
                                                          "colorSecondary": "MuiInput-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInput-formControl",
                                                          "fullWidth": "MuiInput-fullWidth",
                                                          "input": "MuiInput-input",
                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                          "marginDense": "MuiInput-marginDense",
                                                          "multiline": "MuiInput-multiline",
                                                          "root": "MuiInput-root",
                                                          "underline": "MuiInput-underline",
                                                        }
                                                      }
                                                      disableUnderline={true}
                                                      endAdornment={false}
                                                      inputRef={[Function]}
                                                      onChange={[Function]}
                                                      startAdornment={
                                                        <FilterInput__SearchIcon>
                                                          search
                                                        </FilterInput__SearchIcon>
                                                      }
                                                      type="text"
                                                    >
                                                      <WithStyles(ForwardRef(InputBase))
                                                        classes={
                                                          Object {
                                                            "colorSecondary": "MuiInput-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "error": "Mui-error",
                                                            "focused": "Mui-focused",
                                                            "formControl": "MuiInput-formControl",
                                                            "fullWidth": "MuiInput-fullWidth",
                                                            "input": "MuiInput-input",
                                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                            "marginDense": "MuiInput-marginDense",
                                                            "multiline": "MuiInput-multiline",
                                                            "root": "MuiInput-root",
                                                            "underline": null,
                                                          }
                                                        }
                                                        endAdornment={false}
                                                        fullWidth={false}
                                                        inputComponent="input"
                                                        inputRef={[Function]}
                                                        multiline={false}
                                                        onChange={[Function]}
                                                        startAdornment={
                                                          <FilterInput__SearchIcon>
                                                            search
                                                          </FilterInput__SearchIcon>
                                                        }
                                                        type="text"
                                                      >
                                                        <ForwardRef(InputBase)
                                                          classes={
                                                            Object {
                                                              "adornedEnd": "MuiInputBase-adornedEnd",
                                                              "adornedStart": "MuiInputBase-adornedStart",
                                                              "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                              "disabled": "Mui-disabled Mui-disabled",
                                                              "error": "Mui-error Mui-error",
                                                              "focused": "Mui-focused Mui-focused",
                                                              "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                              "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                              "input": "MuiInputBase-input MuiInput-input",
                                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                              "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                              "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                              "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                              "root": "MuiInputBase-root MuiInput-root",
                                                            }
                                                          }
                                                          endAdornment={false}
                                                          fullWidth={false}
                                                          inputComponent="input"
                                                          inputRef={[Function]}
                                                          multiline={false}
                                                          onChange={[Function]}
                                                          startAdornment={
                                                            <FilterInput__SearchIcon>
                                                              search
                                                            </FilterInput__SearchIcon>
                                                          }
                                                          type="text"
                                                        >
                                                          <div
                                                            className="MuiInputBase-root MuiInput-root MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                                                            onClick={[Function]}
                                                          >
                                                            <FilterInput__SearchIcon>
                                                              <WithStyles(ForwardRef(Icon))
                                                                className="c6"
                                                              >
                                                                <ForwardRef(Icon)
                                                                  className="c6"
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "MuiIcon-colorAction",
                                                                      "colorDisabled": "MuiIcon-colorDisabled",
                                                                      "colorError": "MuiIcon-colorError",
                                                                      "colorPrimary": "MuiIcon-colorPrimary",
                                                                      "colorSecondary": "MuiIcon-colorSecondary",
                                                                      "fontSizeInherit": "MuiIcon-fontSizeInherit",
                                                                      "fontSizeLarge": "MuiIcon-fontSizeLarge",
                                                                      "fontSizeSmall": "MuiIcon-fontSizeSmall",
                                                                      "root": "MuiIcon-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    aria-hidden={true}
                                                                    className="material-icons MuiIcon-root c6"
                                                                  >
                                                                    search
                                                                  </span>
                                                                </ForwardRef(Icon)>
                                                              </WithStyles(ForwardRef(Icon))>
                                                            </FilterInput__SearchIcon>
                                                            <input
                                                              aria-invalid={false}
                                                              className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                              disabled={false}
                                                              onAnimationStart={[Function]}
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              required={false}
                                                              type="text"
                                                            />
                                                          </div>
                                                        </ForwardRef(InputBase)>
                                                      </WithStyles(ForwardRef(InputBase))>
                                                    </ForwardRef(Input)>
                                                  </WithStyles(ForwardRef(Input))>
                                                </div>
                                              </ForwardRef(FormControl)>
                                            </WithStyles(ForwardRef(FormControl))>
                                          </FilterInput__InputSearch>
                                        </th>
                                      </ForwardRef(TableCell)>
                                    </WithStyles(ForwardRef(TableCell))>
                                    <WithStyles(ForwardRef(TableCell))
                                      key="type"
                                      style={
                                        Object {
                                          "paddingLeft": 3,
                                          "paddingRight": 3,
                                        }
                                      }
                                    >
                                      <ForwardRef(TableCell)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTableCell-alignCenter",
                                            "alignJustify": "MuiTableCell-alignJustify",
                                            "alignLeft": "MuiTableCell-alignLeft",
                                            "alignRight": "MuiTableCell-alignRight",
                                            "body": "MuiTableCell-body",
                                            "footer": "MuiTableCell-footer",
                                            "head": "MuiTableCell-head",
                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                            "paddingNone": "MuiTableCell-paddingNone",
                                            "root": "MuiTableCell-root",
                                            "sizeSmall": "MuiTableCell-sizeSmall",
                                            "stickyHeader": "MuiTableCell-stickyHeader",
                                          }
                                        }
                                        style={
                                          Object {
                                            "paddingLeft": 3,
                                            "paddingRight": 3,
                                          }
                                        }
                                      >
                                        <th
                                          aria-sort={null}
                                          className="MuiTableCell-root MuiTableCell-head"
                                          scope="col"
                                          style={
                                            Object {
                                              "paddingLeft": 3,
                                              "paddingRight": 3,
                                            }
                                          }
                                        >
                                          <FilterInput__InputSearch>
                                            <WithStyles(ForwardRef(FormControl))
                                              className="c5"
                                            >
                                              <ForwardRef(FormControl)
                                                className="c5"
                                                classes={
                                                  Object {
                                                    "fullWidth": "MuiFormControl-fullWidth",
                                                    "marginDense": "MuiFormControl-marginDense",
                                                    "marginNormal": "MuiFormControl-marginNormal",
                                                    "root": "MuiFormControl-root",
                                                  }
                                                }
                                              >
                                                <div
                                                  className="MuiFormControl-root c5"
                                                >
                                                  <WithStyles(ForwardRef(Input))
                                                    disableUnderline={true}
                                                    endAdornment={false}
                                                    inputRef={[Function]}
                                                    onChange={[Function]}
                                                    startAdornment={
                                                      <FilterInput__SearchIcon>
                                                        search
                                                      </FilterInput__SearchIcon>
                                                    }
                                                    type="text"
                                                  >
                                                    <ForwardRef(Input)
                                                      classes={
                                                        Object {
                                                          "colorSecondary": "MuiInput-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInput-formControl",
                                                          "fullWidth": "MuiInput-fullWidth",
                                                          "input": "MuiInput-input",
                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                          "marginDense": "MuiInput-marginDense",
                                                          "multiline": "MuiInput-multiline",
                                                          "root": "MuiInput-root",
                                                          "underline": "MuiInput-underline",
                                                        }
                                                      }
                                                      disableUnderline={true}
                                                      endAdornment={false}
                                                      inputRef={[Function]}
                                                      onChange={[Function]}
                                                      startAdornment={
                                                        <FilterInput__SearchIcon>
                                                          search
                                                        </FilterInput__SearchIcon>
                                                      }
                                                      type="text"
                                                    >
                                                      <WithStyles(ForwardRef(InputBase))
                                                        classes={
                                                          Object {
                                                            "colorSecondary": "MuiInput-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "error": "Mui-error",
                                                            "focused": "Mui-focused",
                                                            "formControl": "MuiInput-formControl",
                                                            "fullWidth": "MuiInput-fullWidth",
                                                            "input": "MuiInput-input",
                                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                            "marginDense": "MuiInput-marginDense",
                                                            "multiline": "MuiInput-multiline",
                                                            "root": "MuiInput-root",
                                                            "underline": null,
                                                          }
                                                        }
                                                        endAdornment={false}
                                                        fullWidth={false}
                                                        inputComponent="input"
                                                        inputRef={[Function]}
                                                        multiline={false}
                                                        onChange={[Function]}
                                                        startAdornment={
                                                          <FilterInput__SearchIcon>
                                                            search
                                                          </FilterInput__SearchIcon>
                                                        }
                                                        type="text"
                                                      >
                                                        <ForwardRef(InputBase)
                                                          classes={
                                                            Object {
                                                              "adornedEnd": "MuiInputBase-adornedEnd",
                                                              "adornedStart": "MuiInputBase-adornedStart",
                                                              "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                              "disabled": "Mui-disabled Mui-disabled",
                                                              "error": "Mui-error Mui-error",
                                                              "focused": "Mui-focused Mui-focused",
                                                              "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                              "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                              "input": "MuiInputBase-input MuiInput-input",
                                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                              "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                              "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                              "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                              "root": "MuiInputBase-root MuiInput-root",
                                                            }
                                                          }
                                                          endAdornment={false}
                                                          fullWidth={false}
                                                          inputComponent="input"
                                                          inputRef={[Function]}
                                                          multiline={false}
                                                          onChange={[Function]}
                                                          startAdornment={
                                                            <FilterInput__SearchIcon>
                                                              search
                                                            </FilterInput__SearchIcon>
                                                          }
                                                          type="text"
                                                        >
                                                          <div
                                                            className="MuiInputBase-root MuiInput-root MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                                                            onClick={[Function]}
                                                          >
                                                            <FilterInput__SearchIcon>
                                                              <WithStyles(ForwardRef(Icon))
                                                                className="c6"
                                                              >
                                                                <ForwardRef(Icon)
                                                                  className="c6"
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "MuiIcon-colorAction",
                                                                      "colorDisabled": "MuiIcon-colorDisabled",
                                                                      "colorError": "MuiIcon-colorError",
                                                                      "colorPrimary": "MuiIcon-colorPrimary",
                                                                      "colorSecondary": "MuiIcon-colorSecondary",
                                                                      "fontSizeInherit": "MuiIcon-fontSizeInherit",
                                                                      "fontSizeLarge": "MuiIcon-fontSizeLarge",
                                                                      "fontSizeSmall": "MuiIcon-fontSizeSmall",
                                                                      "root": "MuiIcon-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    aria-hidden={true}
                                                                    className="material-icons MuiIcon-root c6"
                                                                  >
                                                                    search
                                                                  </span>
                                                                </ForwardRef(Icon)>
                                                              </WithStyles(ForwardRef(Icon))>
                                                            </FilterInput__SearchIcon>
                                                            <input
                                                              aria-invalid={false}
                                                              className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                              disabled={false}
                                                              onAnimationStart={[Function]}
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              required={false}
                                                              type="text"
                                                            />
                                                          </div>
                                                        </ForwardRef(InputBase)>
                                                      </WithStyles(ForwardRef(InputBase))>
                                                    </ForwardRef(Input)>
                                                  </WithStyles(ForwardRef(Input))>
                                                </div>
                                              </ForwardRef(FormControl)>
                                            </WithStyles(ForwardRef(FormControl))>
                                          </FilterInput__InputSearch>
                                        </th>
                                      </ForwardRef(TableCell)>
                                    </WithStyles(ForwardRef(TableCell))>
                                  </tr>
                                </ForwardRef(TableRow)>
                              </WithStyles(ForwardRef(TableRow))>
                            </TableHead__CollapsableTableRow>
                          </thead>
                        </ForwardRef(TableHead)>
                      </WithStyles(ForwardRef(TableHead))>
                    </EnhancedTableHead>
                    <GenericTableBody
                      collapsibleComponent={[Function]}
                      collapsibleComponentProps={Object {}}
                      data={
                        Array [
                          Object {
                            "catagory": "CAR Government Regulation",
                            "id": 1,
                            "name": "Night Duty",
                            "settingsFrom": "Baseline Rules",
                            "state": true,
                            "type": "Definition",
                          },
                          Object {
                            "catagory": "CAR Government Regulation",
                            "id": 2,
                            "name": "Split Duty Extension to Maximum FDP (Split Duty Extension to Maximum FDP)",
                            "settingsFrom": "Flight Desk",
                            "state": false,
                            "type": "Duty Time Limitation",
                          },
                          Object {
                            "catagory": "CAR Government Regulation",
                            "id": 3,
                            "name": "Minimum Rest at Home Base (Minimum Rest at Home Base)",
                            "settingsFrom": "Baseline Rules",
                            "state": true,
                            "type": "Rest RUle",
                          },
                          Object {
                            "catagory": "OverSeas Cabin Contract",
                            "id": 4,
                            "isEdited": true,
                            "name": "Earily Duty",
                            "settingsFrom": "Widebody",
                            "state": false,
                            "type": "Cost RUle",
                          },
                          Object {
                            "catagory": "Basic Pairing Rules",
                            "id": 5,
                            "name": "Late Duty",
                            "settingsFrom": "Baseline Rules",
                            "state": true,
                            "type": "Soft Rule",
                          },
                        ]
                      }
                      disableRowStyle={[Function]}
                      enableEdits={false}
                      handleClick={[Function]}
                      handleDeleteItem={null}
                      handleEditItem={[MockFunction]}
                      handleFetchData={[Function]}
                      headers={
                        Array [
                          Object {
                            "displayName": "DATA.rules.headers.name",
                            "field": "name",
                            "transformer": [Function],
                            "transformerStyle": Object {
                              "maxWidth": "235px",
                            },
                          },
                          Object {
                            "cellStyle": Object {
                              "width": "120px",
                            },
                            "component": [Function],
                            "componentStyle": Object {
                              "fontSize": "0.8125rem",
                              "width": "120px",
                            },
                            "disableFilter": true,
                            "displayName": "DATA.rules.headers.state",
                            "field": "state",
                            "props": Object {
                              "items": Array [
                                Object {
                                  "display": "On",
                                  "value": true,
                                },
                                Object {
                                  "display": "Off",
                                  "value": false,
                                },
                              ],
                              "onChange": [Function],
                            },
                          },
                          Object {
                            "component": [Function],
                            "componentStyle": Object {
                              "color": "#FF650C",
                            },
                            "displayName": "DATA.rules.headers.settingsFrom",
                            "field": "settingsFrom",
                            "props": Object {
                              "header": "isEdited",
                            },
                          },
                          Object {
                            "displayName": "DATA.rules.headers.catagory",
                            "field": "catagory",
                          },
                          Object {
                            "displayName": "DATA.rules.headers.type",
                            "field": "type",
                          },
                        ]
                      }
                      isSelected={[Function]}
                      keyField=""
                      selectedItems={Array []}
                      toggleFilters={[Function]}
                      triggerResize={[Function]}
                    >
                      <ScrollBar
                        className=""
                        component="div"
                        containerRef={[Function]}
                        onScrollY={[Function]}
                        option={
                          Object {
                            "swipeEasing": true,
                            "wheelSpeed": 0.4,
                          }
                        }
                      >
                        <div
                          className="scrollbar-container "
                        >
                          <RootRef>
                            <WithStyles(ForwardRef(TableBody))
                              onScroll={[Function]}
                            >
                              <ForwardRef(TableBody)
                                classes={
                                  Object {
                                    "root": "MuiTableBody-root",
                                  }
                                }
                                onScroll={[Function]}
                              >
                                <tbody
                                  className="MuiTableBody-root"
                                  onScroll={[Function]}
                                  role={null}
                                >
                                  <WithStyles(ForwardRef(TableRow))
                                    classes={
                                      Object {
                                        "hover": "hover",
                                        "root": "MuiTableRow",
                                        "selected": "selected",
                                      }
                                    }
                                    hover={true}
                                    id="tablerow1"
                                    selected={false}
                                  >
                                    <ForwardRef(TableRow)
                                      classes={
                                        Object {
                                          "footer": "MuiTableRow-footer",
                                          "head": "MuiTableRow-head",
                                          "hover": "MuiTableRow-hover hover",
                                          "root": "MuiTableRow-root MuiTableRow",
                                          "selected": "Mui-selected selected",
                                        }
                                      }
                                      hover={true}
                                      id="tablerow1"
                                      selected={false}
                                    >
                                      <tr
                                        className="MuiTableRow-root MuiTableRow MuiTableRow-hover hover"
                                        id="tablerow1"
                                        role={null}
                                      >
                                        <WithStyles(ForwardRef(TableCell))
                                          style={
                                            Object {
                                              "height": 40,
                                              "paddingLeft": "18px",
                                              "paddingRight": "0px",
                                              "width": 40,
                                            }
                                          }
                                        >
                                          <ForwardRef(TableCell)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            style={
                                              Object {
                                                "height": 40,
                                                "paddingLeft": "18px",
                                                "paddingRight": "0px",
                                                "width": 40,
                                              }
                                            }
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body"
                                              style={
                                                Object {
                                                  "height": 40,
                                                  "paddingLeft": "18px",
                                                  "paddingRight": "0px",
                                                  "width": 40,
                                                }
                                              }
                                            >
                                              <WithStyles(ForwardRef(Checkbox))
                                                checked={false}
                                                color="primary"
                                                onClick={[Function]}
                                                style={
                                                  Object {
                                                    "height": 20,
                                                    "width": 20,
                                                  }
                                                }
                                              >
                                                <ForwardRef(Checkbox)
                                                  checked={false}
                                                  classes={
                                                    Object {
                                                      "checked": "Mui-checked",
                                                      "colorPrimary": "MuiCheckbox-colorPrimary",
                                                      "colorSecondary": "MuiCheckbox-colorSecondary",
                                                      "disabled": "Mui-disabled",
                                                      "indeterminate": "MuiCheckbox-indeterminate",
                                                      "root": "MuiCheckbox-root",
                                                    }
                                                  }
                                                  color="primary"
                                                  onClick={[Function]}
                                                  style={
                                                    Object {
                                                      "height": 20,
                                                      "width": 20,
                                                    }
                                                  }
                                                >
                                                  <WithStyles(ForwardRef(SwitchBase))
                                                    checked={false}
                                                    checkedIcon={<Memo />}
                                                    classes={
                                                      Object {
                                                        "checked": "Mui-checked",
                                                        "disabled": "Mui-disabled",
                                                        "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                                                      }
                                                    }
                                                    color="primary"
                                                    icon={<Memo />}
                                                    inputProps={
                                                      Object {
                                                        "data-indeterminate": false,
                                                      }
                                                    }
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "height": 20,
                                                        "width": 20,
                                                      }
                                                    }
                                                    type="checkbox"
                                                  >
                                                    <ForwardRef(SwitchBase)
                                                      checked={false}
                                                      checkedIcon={<Memo />}
                                                      classes={
                                                        Object {
                                                          "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                                                          "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                                                          "input": "PrivateSwitchBase-input-4",
                                                          "root": "PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary",
                                                        }
                                                      }
                                                      color="primary"
                                                      icon={<Memo />}
                                                      inputProps={
                                                        Object {
                                                          "data-indeterminate": false,
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                      style={
                                                        Object {
                                                          "height": 20,
                                                          "width": 20,
                                                        }
                                                      }
                                                      type="checkbox"
                                                    >
                                                      <WithStyles(ForwardRef(IconButton))
                                                        className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary"
                                                        color="primary"
                                                        component="span"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onFocus={[Function]}
                                                        style={
                                                          Object {
                                                            "height": 20,
                                                            "width": 20,
                                                          }
                                                        }
                                                        tabIndex={null}
                                                      >
                                                        <ForwardRef(IconButton)
                                                          className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary"
                                                          classes={
                                                            Object {
                                                              "colorInherit": "MuiIconButton-colorInherit",
                                                              "colorPrimary": "MuiIconButton-colorPrimary",
                                                              "colorSecondary": "MuiIconButton-colorSecondary",
                                                              "disabled": "Mui-disabled",
                                                              "edgeEnd": "MuiIconButton-edgeEnd",
                                                              "edgeStart": "MuiIconButton-edgeStart",
                                                              "label": "MuiIconButton-label",
                                                              "root": "MuiIconButton-root",
                                                              "sizeSmall": "MuiIconButton-sizeSmall",
                                                            }
                                                          }
                                                          color="primary"
                                                          component="span"
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onFocus={[Function]}
                                                          style={
                                                            Object {
                                                              "height": 20,
                                                              "width": 20,
                                                            }
                                                          }
                                                          tabIndex={null}
                                                        >
                                                          <WithStyles(ForwardRef(ButtonBase))
                                                            centerRipple={true}
                                                            className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                            component="span"
                                                            disabled={false}
                                                            focusRipple={true}
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onFocus={[Function]}
                                                            style={
                                                              Object {
                                                                "height": 20,
                                                                "width": 20,
                                                              }
                                                            }
                                                            tabIndex={null}
                                                          >
                                                            <ForwardRef(ButtonBase)
                                                              centerRipple={true}
                                                              className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                              classes={
                                                                Object {
                                                                  "disabled": "Mui-disabled",
                                                                  "focusVisible": "Mui-focusVisible",
                                                                  "root": "MuiButtonBase-root",
                                                                }
                                                              }
                                                              component="span"
                                                              disabled={false}
                                                              focusRipple={true}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onFocus={[Function]}
                                                              style={
                                                                Object {
                                                                  "height": 20,
                                                                  "width": 20,
                                                                }
                                                              }
                                                              tabIndex={null}
                                                            >
                                                              <span
                                                                aria-disabled={false}
                                                                className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                                onBlur={[Function]}
                                                                onClick={[Function]}
                                                                onDragLeave={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseDown={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                onTouchMove={[Function]}
                                                                onTouchStart={[Function]}
                                                                style={
                                                                  Object {
                                                                    "height": 20,
                                                                    "width": 20,
                                                                  }
                                                                }
                                                                tabIndex={null}
                                                              >
                                                                <span
                                                                  className="MuiIconButton-label"
                                                                >
                                                                  <input
                                                                    checked={false}
                                                                    className="PrivateSwitchBase-input-4"
                                                                    data-indeterminate={false}
                                                                    onChange={[Function]}
                                                                    type="checkbox"
                                                                  />
                                                                  <ForwardRef(CheckBoxOutlineBlankIcon)>
                                                                    <WithStyles(ForwardRef(SvgIcon))>
                                                                      <ForwardRef(SvgIcon)
                                                                        classes={
                                                                          Object {
                                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                            "colorError": "MuiSvgIcon-colorError",
                                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                            "root": "MuiSvgIcon-root",
                                                                          }
                                                                        }
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          className="MuiSvgIcon-root"
                                                                          focusable="false"
                                                                          viewBox="0 0 24 24"
                                                                        >
                                                                          <path
                                                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                                          />
                                                                        </svg>
                                                                      </ForwardRef(SvgIcon)>
                                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                                  </ForwardRef(CheckBoxOutlineBlankIcon)>
                                                                </span>
                                                                <WithStyles(memo)
                                                                  center={true}
                                                                >
                                                                  <ForwardRef(TouchRipple)
                                                                    center={true}
                                                                    classes={
                                                                      Object {
                                                                        "child": "MuiTouchRipple-child",
                                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                                        "ripple": "MuiTouchRipple-ripple",
                                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                        "root": "MuiTouchRipple-root",
                                                                      }
                                                                    }
                                                                  >
                                                                    <span
                                                                      className="MuiTouchRipple-root"
                                                                    >
                                                                      <TransitionGroup
                                                                        childFactory={[Function]}
                                                                        component={null}
                                                                        exit={true}
                                                                      />
                                                                    </span>
                                                                  </ForwardRef(TouchRipple)>
                                                                </WithStyles(memo)>
                                                              </span>
                                                            </ForwardRef(ButtonBase)>
                                                          </WithStyles(ForwardRef(ButtonBase))>
                                                        </ForwardRef(IconButton)>
                                                      </WithStyles(ForwardRef(IconButton))>
                                                    </ForwardRef(SwitchBase)>
                                                  </WithStyles(ForwardRef(SwitchBase))>
                                                </ForwardRef(Checkbox)>
                                              </WithStyles(ForwardRef(Checkbox))>
                                              <WithStyles(ForwardRef(IconButton))
                                                aria-label="expand row"
                                                onClick={[Function]}
                                                size="small"
                                                style={
                                                  Object {
                                                    "marginLeft": "10px",
                                                  }
                                                }
                                              >
                                                <ForwardRef(IconButton)
                                                  aria-label="expand row"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiIconButton-colorInherit",
                                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                                      "disabled": "Mui-disabled",
                                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                                      "edgeStart": "MuiIconButton-edgeStart",
                                                      "label": "MuiIconButton-label",
                                                      "root": "MuiIconButton-root",
                                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                                    }
                                                  }
                                                  onClick={[Function]}
                                                  size="small"
                                                  style={
                                                    Object {
                                                      "marginLeft": "10px",
                                                    }
                                                  }
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    aria-label="expand row"
                                                    centerRipple={true}
                                                    className="MuiIconButton-root MuiIconButton-sizeSmall"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "marginLeft": "10px",
                                                      }
                                                    }
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      aria-label="expand row"
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiIconButton-sizeSmall"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      disabled={false}
                                                      focusRipple={true}
                                                      onClick={[Function]}
                                                      style={
                                                        Object {
                                                          "marginLeft": "10px",
                                                        }
                                                      }
                                                    >
                                                      <button
                                                        aria-label="expand row"
                                                        className="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                                        disabled={false}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        style={
                                                          Object {
                                                            "marginLeft": "10px",
                                                          }
                                                        }
                                                        tabIndex={0}
                                                        type="button"
                                                      >
                                                        <span
                                                          className="MuiIconButton-label"
                                                        >
                                                          <ForwardRef(KeyboardArrowDownIcon)>
                                                            <WithStyles(ForwardRef(SvgIcon))>
                                                              <ForwardRef(SvgIcon)
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root"
                                                                  focusable="false"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef(KeyboardArrowDownIcon)>
                                                        </span>
                                                        <WithStyles(memo)
                                                          center={true}
                                                        >
                                                          <ForwardRef(TouchRipple)
                                                            center={true}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </ForwardRef(TouchRipple)>
                                                        </WithStyles(memo)>
                                                      </button>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(IconButton)>
                                              </WithStyles(ForwardRef(IconButton))>
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                        <WithStyles(ForwardRef(TableCell))
                                          key="name"
                                          onClick={[Function]}
                                          style={Object {}}
                                        >
                                          <ForwardRef(TableCell)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            onClick={[Function]}
                                            style={Object {}}
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body"
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              <OverflowTip
                                                content="Night Duty"
                                                maxWidth="200px"
                                                tooltipStyle={
                                                  Object {
                                                    "maxWidth": "235px",
                                                  }
                                                }
                                                value="Night Duty"
                                              >
                                                <SierraMuiTooltip
                                                  classes={
                                                    Object {
                                                      "popper": "ellipse-zoom-popper",
                                                    }
                                                  }
                                                  disableHoverListener={true}
                                                  interactive={true}
                                                  style={
                                                    Object {
                                                      "maxWidth": "235px",
                                                    }
                                                  }
                                                  title="Night Duty"
                                                >
                                                  <WithStyles(ForwardRef(Tooltip))
                                                    arrow={true}
                                                    classes={
                                                      Object {
                                                        "popper": "ellipse-zoom-popper",
                                                      }
                                                    }
                                                    disableHoverListener={true}
                                                    interactive={true}
                                                    style={
                                                      Object {
                                                        "maxWidth": "235px",
                                                      }
                                                    }
                                                    title="Night Duty"
                                                  >
                                                    <ForwardRef(Tooltip)
                                                      arrow={true}
                                                      classes={
                                                        Object {
                                                          "arrow": "MuiTooltip-arrow",
                                                          "popper": "MuiTooltip-popper ellipse-zoom-popper",
                                                          "popperArrow": "MuiTooltip-popperArrow",
                                                          "popperInteractive": "MuiTooltip-popperInteractive",
                                                          "tooltip": "MuiTooltip-tooltip",
                                                          "tooltipArrow": "MuiTooltip-tooltipArrow",
                                                          "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                                          "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                                          "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                                          "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                                          "touch": "MuiTooltip-touch",
                                                        }
                                                      }
                                                      disableHoverListener={true}
                                                      interactive={true}
                                                      style={
                                                        Object {
                                                          "maxWidth": "235px",
                                                        }
                                                      }
                                                      title="Night Duty"
                                                    >
                                                      <div
                                                        aria-describedby={null}
                                                        className=""
                                                        onBlur={[Function]}
                                                        onFocus={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchStart={[Function]}
                                                        style={
                                                          Object {
                                                            "maxWidth": "200px",
                                                            "overflow": "hidden",
                                                            "textOverflow": "ellipsis",
                                                            "whiteSpace": "nowrap",
                                                          }
                                                        }
                                                        title={null}
                                                      >
                                                        Night Duty
                                                      </div>
                                                      <ForwardRef(Popper)
                                                        anchorEl={
                                                          <div
                                                            class=""
                                                            style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 200px;"
                                                          >
                                                            Night Duty
                                                          </div>
                                                        }
                                                        className="MuiTooltip-popper ellipse-zoom-popper MuiTooltip-popperInteractive MuiTooltip-popperArrow"
                                                        id={null}
                                                        onBlur={[Function]}
                                                        onFocus={[Function]}
                                                        open={false}
                                                        placement="bottom"
                                                        popperOptions={
                                                          Object {
                                                            "modifiers": Object {
                                                              "arrow": Object {
                                                                "element": null,
                                                                "enabled": false,
                                                              },
                                                            },
                                                          }
                                                        }
                                                        transition={true}
                                                      />
                                                    </ForwardRef(Tooltip)>
                                                  </WithStyles(ForwardRef(Tooltip))>
                                                </SierraMuiTooltip>
                                              </OverflowTip>
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                        <WithStyles(ForwardRef(TableCell))
                                          key="state"
                                          onClick={[Function]}
                                          style={
                                            Object {
                                              "width": "120px",
                                            }
                                          }
                                        >
                                          <ForwardRef(TableCell)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "width": "120px",
                                              }
                                            }
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body"
                                              onClick={[Function]}
                                              style={
                                                Object {
                                                  "width": "120px",
                                                }
                                              }
                                            >
                                              <SelectInput
                                                data={
                                                  Object {
                                                    "catagory": "CAR Government Regulation",
                                                    "id": 1,
                                                    "name": "Night Duty",
                                                    "settingsFrom": "Baseline Rules",
                                                    "state": true,
                                                    "type": "Definition",
                                                  }
                                                }
                                                defaultValue="_default"
                                                enableReset={false}
                                                error={false}
                                                getTooltipContent={[Function]}
                                                handleDisable={[Function]}
                                                handleReset={[Function]}
                                                handleTooltipDisable={[Function]}
                                                items={
                                                  Array [
                                                    Object {
                                                      "display": "On",
                                                      "value": true,
                                                    },
                                                    Object {
                                                      "display": "Off",
                                                      "value": false,
                                                    },
                                                  ]
                                                }
                                                onChange={[Function]}
                                                placeholder=""
                                                removeOverlay={[Function]}
                                                style={
                                                  Object {
                                                    "fontSize": "0.8125rem",
                                                    "width": "120px",
                                                  }
                                                }
                                                value={true}
                                              >
                                                <span
                                                  className=""
                                                >
                                                   
                                                  <WithStyles(ForwardRef(Select))
                                                    className=""
                                                    disabled={false}
                                                    onChange={[Function]}
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "fontSize": "0.8125rem",
                                                        "width": "120px",
                                                        "zIndex": 1,
                                                      }
                                                    }
                                                    value={true}
                                                  >
                                                    <ForwardRef(Select)
                                                      className=""
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "filled": "MuiSelect-filled",
                                                          "icon": "MuiSelect-icon",
                                                          "iconFilled": "MuiSelect-iconFilled",
                                                          "iconOpen": "MuiSelect-iconOpen",
                                                          "iconOutlined": "MuiSelect-iconOutlined",
                                                          "nativeInput": "MuiSelect-nativeInput",
                                                          "outlined": "MuiSelect-outlined",
                                                          "root": "MuiSelect-root",
                                                          "select": "MuiSelect-select",
                                                          "selectMenu": "MuiSelect-selectMenu",
                                                        }
                                                      }
                                                      disabled={false}
                                                      onChange={[Function]}
                                                      onClick={[Function]}
                                                      style={
                                                        Object {
                                                          "fontSize": "0.8125rem",
                                                          "width": "120px",
                                                          "zIndex": 1,
                                                        }
                                                      }
                                                      value={true}
                                                    >
                                                      <WithStyles(ForwardRef(Input))
                                                        className=""
                                                        disabled={false}
                                                        inputComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "propTypes": Object {
                                                              "IconComponent": [Function],
                                                              "MenuProps": [Function],
                                                              "SelectDisplayProps": [Function],
                                                              "aria-label": [Function],
                                                              "autoFocus": [Function],
                                                              "autoWidth": [Function],
                                                              "children": [Function],
                                                              "className": [Function],
                                                              "classes": [Function],
                                                              "defaultValue": [Function],
                                                              "disabled": [Function],
                                                              "displayEmpty": [Function],
                                                              "inputRef": [Function],
                                                              "labelId": [Function],
                                                              "multiple": [Function],
                                                              "name": [Function],
                                                              "onBlur": [Function],
                                                              "onChange": [Function],
                                                              "onClose": [Function],
                                                              "onFocus": [Function],
                                                              "onOpen": [Function],
                                                              "open": [Function],
                                                              "readOnly": [Function],
                                                              "renderValue": [Function],
                                                              "tabIndex": [Function],
                                                              "type": [Function],
                                                              "value": [Function],
                                                              "variant": [Function],
                                                            },
                                                            "render": [Function],
                                                          }
                                                        }
                                                        inputProps={
                                                          Object {
                                                            "IconComponent": Object {
                                                              "$$typeof": Symbol(react.memo),
                                                              "compare": null,
                                                              "type": Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "render": [Function],
                                                              },
                                                            },
                                                            "MenuProps": undefined,
                                                            "SelectDisplayProps": Object {
                                                              "id": undefined,
                                                            },
                                                            "autoWidth": false,
                                                            "children": Array [
                                                              <WithStyles(ForwardRef(MenuItem))
                                                                disabled={true}
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                                value="_default"
                                                              >
                                                                
                                                              </WithStyles(ForwardRef(MenuItem))>,
                                                              Array [
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  value={true}
                                                                >
                                                                  On
                                                                </WithStyles(ForwardRef(MenuItem))>,
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  value={false}
                                                                >
                                                                  Off
                                                                </WithStyles(ForwardRef(MenuItem))>,
                                                              ],
                                                            ],
                                                            "classes": Object {
                                                              "disabled": "Mui-disabled",
                                                              "filled": "MuiSelect-filled",
                                                              "icon": "MuiSelect-icon",
                                                              "iconFilled": "MuiSelect-iconFilled",
                                                              "iconOpen": "MuiSelect-iconOpen",
                                                              "iconOutlined": "MuiSelect-iconOutlined",
                                                              "nativeInput": "MuiSelect-nativeInput",
                                                              "outlined": "MuiSelect-outlined",
                                                              "root": "MuiSelect-root",
                                                              "select": "MuiSelect-select",
                                                              "selectMenu": "MuiSelect-selectMenu",
                                                            },
                                                            "displayEmpty": false,
                                                            "labelId": undefined,
                                                            "multiple": false,
                                                            "onClose": undefined,
                                                            "onOpen": undefined,
                                                            "open": undefined,
                                                            "renderValue": undefined,
                                                            "type": undefined,
                                                            "variant": "standard",
                                                          }
                                                        }
                                                        onChange={[Function]}
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "fontSize": "0.8125rem",
                                                            "width": "120px",
                                                            "zIndex": 1,
                                                          }
                                                        }
                                                        value={true}
                                                      >
                                                        <ForwardRef(Input)
                                                          className=""
                                                          classes={
                                                            Object {
                                                              "colorSecondary": "MuiInput-colorSecondary",
                                                              "disabled": "Mui-disabled",
                                                              "error": "Mui-error",
                                                              "focused": "Mui-focused",
                                                              "formControl": "MuiInput-formControl",
                                                              "fullWidth": "MuiInput-fullWidth",
                                                              "input": "MuiInput-input",
                                                              "inputMarginDense": "MuiInput-inputMarginDense",
                                                              "inputMultiline": "MuiInput-inputMultiline",
                                                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                              "marginDense": "MuiInput-marginDense",
                                                              "multiline": "MuiInput-multiline",
                                                              "root": "MuiInput-root",
                                                              "underline": "MuiInput-underline",
                                                            }
                                                          }
                                                          disabled={false}
                                                          inputComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "propTypes": Object {
                                                                "IconComponent": [Function],
                                                                "MenuProps": [Function],
                                                                "SelectDisplayProps": [Function],
                                                                "aria-label": [Function],
                                                                "autoFocus": [Function],
                                                                "autoWidth": [Function],
                                                                "children": [Function],
                                                                "className": [Function],
                                                                "classes": [Function],
                                                                "defaultValue": [Function],
                                                                "disabled": [Function],
                                                                "displayEmpty": [Function],
                                                                "inputRef": [Function],
                                                                "labelId": [Function],
                                                                "multiple": [Function],
                                                                "name": [Function],
                                                                "onBlur": [Function],
                                                                "onChange": [Function],
                                                                "onClose": [Function],
                                                                "onFocus": [Function],
                                                                "onOpen": [Function],
                                                                "open": [Function],
                                                                "readOnly": [Function],
                                                                "renderValue": [Function],
                                                                "tabIndex": [Function],
                                                                "type": [Function],
                                                                "value": [Function],
                                                                "variant": [Function],
                                                              },
                                                              "render": [Function],
                                                            }
                                                          }
                                                          inputProps={
                                                            Object {
                                                              "IconComponent": Object {
                                                                "$$typeof": Symbol(react.memo),
                                                                "compare": null,
                                                                "type": Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "render": [Function],
                                                                },
                                                              },
                                                              "MenuProps": undefined,
                                                              "SelectDisplayProps": Object {
                                                                "id": undefined,
                                                              },
                                                              "autoWidth": false,
                                                              "children": Array [
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  disabled={true}
                                                                  style={
                                                                    Object {
                                                                      "display": "none",
                                                                    }
                                                                  }
                                                                  value="_default"
                                                                >
                                                                  
                                                                </WithStyles(ForwardRef(MenuItem))>,
                                                                Array [
                                                                  <WithStyles(ForwardRef(MenuItem))
                                                                    value={true}
                                                                  >
                                                                    On
                                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                                  <WithStyles(ForwardRef(MenuItem))
                                                                    value={false}
                                                                  >
                                                                    Off
                                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                                ],
                                                              ],
                                                              "classes": Object {
                                                                "disabled": "Mui-disabled",
                                                                "filled": "MuiSelect-filled",
                                                                "icon": "MuiSelect-icon",
                                                                "iconFilled": "MuiSelect-iconFilled",
                                                                "iconOpen": "MuiSelect-iconOpen",
                                                                "iconOutlined": "MuiSelect-iconOutlined",
                                                                "nativeInput": "MuiSelect-nativeInput",
                                                                "outlined": "MuiSelect-outlined",
                                                                "root": "MuiSelect-root",
                                                                "select": "MuiSelect-select",
                                                                "selectMenu": "MuiSelect-selectMenu",
                                                              },
                                                              "displayEmpty": false,
                                                              "labelId": undefined,
                                                              "multiple": false,
                                                              "onClose": undefined,
                                                              "onOpen": undefined,
                                                              "open": undefined,
                                                              "renderValue": undefined,
                                                              "type": undefined,
                                                              "variant": "standard",
                                                            }
                                                          }
                                                          onChange={[Function]}
                                                          onClick={[Function]}
                                                          style={
                                                            Object {
                                                              "fontSize": "0.8125rem",
                                                              "width": "120px",
                                                              "zIndex": 1,
                                                            }
                                                          }
                                                          value={true}
                                                        >
                                                          <WithStyles(ForwardRef(InputBase))
                                                            className=""
                                                            classes={
                                                              Object {
                                                                "colorSecondary": "MuiInput-colorSecondary",
                                                                "disabled": "Mui-disabled",
                                                                "error": "Mui-error",
                                                                "focused": "Mui-focused",
                                                                "formControl": "MuiInput-formControl",
                                                                "fullWidth": "MuiInput-fullWidth",
                                                                "input": "MuiInput-input",
                                                                "inputMarginDense": "MuiInput-inputMarginDense",
                                                                "inputMultiline": "MuiInput-inputMultiline",
                                                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                "marginDense": "MuiInput-marginDense",
                                                                "multiline": "MuiInput-multiline",
                                                                "root": "MuiInput-root MuiInput-underline",
                                                                "underline": null,
                                                              }
                                                            }
                                                            disabled={false}
                                                            fullWidth={false}
                                                            inputComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "propTypes": Object {
                                                                  "IconComponent": [Function],
                                                                  "MenuProps": [Function],
                                                                  "SelectDisplayProps": [Function],
                                                                  "aria-label": [Function],
                                                                  "autoFocus": [Function],
                                                                  "autoWidth": [Function],
                                                                  "children": [Function],
                                                                  "className": [Function],
                                                                  "classes": [Function],
                                                                  "defaultValue": [Function],
                                                                  "disabled": [Function],
                                                                  "displayEmpty": [Function],
                                                                  "inputRef": [Function],
                                                                  "labelId": [Function],
                                                                  "multiple": [Function],
                                                                  "name": [Function],
                                                                  "onBlur": [Function],
                                                                  "onChange": [Function],
                                                                  "onClose": [Function],
                                                                  "onFocus": [Function],
                                                                  "onOpen": [Function],
                                                                  "open": [Function],
                                                                  "readOnly": [Function],
                                                                  "renderValue": [Function],
                                                                  "tabIndex": [Function],
                                                                  "type": [Function],
                                                                  "value": [Function],
                                                                  "variant": [Function],
                                                                },
                                                                "render": [Function],
                                                              }
                                                            }
                                                            inputProps={
                                                              Object {
                                                                "IconComponent": Object {
                                                                  "$$typeof": Symbol(react.memo),
                                                                  "compare": null,
                                                                  "type": Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "render": [Function],
                                                                  },
                                                                },
                                                                "MenuProps": undefined,
                                                                "SelectDisplayProps": Object {
                                                                  "id": undefined,
                                                                },
                                                                "autoWidth": false,
                                                                "children": Array [
                                                                  <WithStyles(ForwardRef(MenuItem))
                                                                    disabled={true}
                                                                    style={
                                                                      Object {
                                                                        "display": "none",
                                                                      }
                                                                    }
                                                                    value="_default"
                                                                  >
                                                                    
                                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                                  Array [
                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                      value={true}
                                                                    >
                                                                      On
                                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                      value={false}
                                                                    >
                                                                      Off
                                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                                  ],
                                                                ],
                                                                "classes": Object {
                                                                  "disabled": "Mui-disabled",
                                                                  "filled": "MuiSelect-filled",
                                                                  "icon": "MuiSelect-icon",
                                                                  "iconFilled": "MuiSelect-iconFilled",
                                                                  "iconOpen": "MuiSelect-iconOpen",
                                                                  "iconOutlined": "MuiSelect-iconOutlined",
                                                                  "nativeInput": "MuiSelect-nativeInput",
                                                                  "outlined": "MuiSelect-outlined",
                                                                  "root": "MuiSelect-root",
                                                                  "select": "MuiSelect-select",
                                                                  "selectMenu": "MuiSelect-selectMenu",
                                                                },
                                                                "displayEmpty": false,
                                                                "labelId": undefined,
                                                                "multiple": false,
                                                                "onClose": undefined,
                                                                "onOpen": undefined,
                                                                "open": undefined,
                                                                "renderValue": undefined,
                                                                "type": undefined,
                                                                "variant": "standard",
                                                              }
                                                            }
                                                            multiline={false}
                                                            onChange={[Function]}
                                                            onClick={[Function]}
                                                            style={
                                                              Object {
                                                                "fontSize": "0.8125rem",
                                                                "width": "120px",
                                                                "zIndex": 1,
                                                              }
                                                            }
                                                            type="text"
                                                            value={true}
                                                          >
                                                            <ForwardRef(InputBase)
                                                              className=""
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiInputBase-adornedEnd",
                                                                  "adornedStart": "MuiInputBase-adornedStart",
                                                                  "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                  "disabled": "Mui-disabled Mui-disabled",
                                                                  "error": "Mui-error Mui-error",
                                                                  "focused": "Mui-focused Mui-focused",
                                                                  "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                  "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                  "input": "MuiInputBase-input MuiInput-input",
                                                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                  "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                  "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                  "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                  "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                }
                                                              }
                                                              disabled={false}
                                                              fullWidth={false}
                                                              inputComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "propTypes": Object {
                                                                    "IconComponent": [Function],
                                                                    "MenuProps": [Function],
                                                                    "SelectDisplayProps": [Function],
                                                                    "aria-label": [Function],
                                                                    "autoFocus": [Function],
                                                                    "autoWidth": [Function],
                                                                    "children": [Function],
                                                                    "className": [Function],
                                                                    "classes": [Function],
                                                                    "defaultValue": [Function],
                                                                    "disabled": [Function],
                                                                    "displayEmpty": [Function],
                                                                    "inputRef": [Function],
                                                                    "labelId": [Function],
                                                                    "multiple": [Function],
                                                                    "name": [Function],
                                                                    "onBlur": [Function],
                                                                    "onChange": [Function],
                                                                    "onClose": [Function],
                                                                    "onFocus": [Function],
                                                                    "onOpen": [Function],
                                                                    "open": [Function],
                                                                    "readOnly": [Function],
                                                                    "renderValue": [Function],
                                                                    "tabIndex": [Function],
                                                                    "type": [Function],
                                                                    "value": [Function],
                                                                    "variant": [Function],
                                                                  },
                                                                  "render": [Function],
                                                                }
                                                              }
                                                              inputProps={
                                                                Object {
                                                                  "IconComponent": Object {
                                                                    "$$typeof": Symbol(react.memo),
                                                                    "compare": null,
                                                                    "type": Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "render": [Function],
                                                                    },
                                                                  },
                                                                  "MenuProps": undefined,
                                                                  "SelectDisplayProps": Object {
                                                                    "id": undefined,
                                                                  },
                                                                  "autoWidth": false,
                                                                  "children": Array [
                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                      disabled={true}
                                                                      style={
                                                                        Object {
                                                                          "display": "none",
                                                                        }
                                                                      }
                                                                      value="_default"
                                                                    >
                                                                      
                                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                                    Array [
                                                                      <WithStyles(ForwardRef(MenuItem))
                                                                        value={true}
                                                                      >
                                                                        On
                                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                                      <WithStyles(ForwardRef(MenuItem))
                                                                        value={false}
                                                                      >
                                                                        Off
                                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                                    ],
                                                                  ],
                                                                  "classes": Object {
                                                                    "disabled": "Mui-disabled",
                                                                    "filled": "MuiSelect-filled",
                                                                    "icon": "MuiSelect-icon",
                                                                    "iconFilled": "MuiSelect-iconFilled",
                                                                    "iconOpen": "MuiSelect-iconOpen",
                                                                    "iconOutlined": "MuiSelect-iconOutlined",
                                                                    "nativeInput": "MuiSelect-nativeInput",
                                                                    "outlined": "MuiSelect-outlined",
                                                                    "root": "MuiSelect-root",
                                                                    "select": "MuiSelect-select",
                                                                    "selectMenu": "MuiSelect-selectMenu",
                                                                  },
                                                                  "displayEmpty": false,
                                                                  "labelId": undefined,
                                                                  "multiple": false,
                                                                  "onClose": undefined,
                                                                  "onOpen": undefined,
                                                                  "open": undefined,
                                                                  "renderValue": undefined,
                                                                  "type": undefined,
                                                                  "variant": "standard",
                                                                }
                                                              }
                                                              multiline={false}
                                                              onChange={[Function]}
                                                              onClick={[Function]}
                                                              style={
                                                                Object {
                                                                  "fontSize": "0.8125rem",
                                                                  "width": "120px",
                                                                  "zIndex": 1,
                                                                }
                                                              }
                                                              type="text"
                                                              value={true}
                                                            >
                                                              <div
                                                                className="MuiInputBase-root MuiInput-root MuiInput-underline"
                                                                onClick={[Function]}
                                                                style={
                                                                  Object {
                                                                    "fontSize": "0.8125rem",
                                                                    "width": "120px",
                                                                    "zIndex": 1,
                                                                  }
                                                                }
                                                              >
                                                                <ForwardRef(SelectInput)
                                                                  IconComponent={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.memo),
                                                                      "compare": null,
                                                                      "type": Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "render": [Function],
                                                                      },
                                                                    }
                                                                  }
                                                                  SelectDisplayProps={
                                                                    Object {
                                                                      "id": undefined,
                                                                    }
                                                                  }
                                                                  autoWidth={false}
                                                                  className="MuiInputBase-input MuiInput-input"
                                                                  classes={
                                                                    Object {
                                                                      "disabled": "Mui-disabled",
                                                                      "filled": "MuiSelect-filled",
                                                                      "icon": "MuiSelect-icon",
                                                                      "iconFilled": "MuiSelect-iconFilled",
                                                                      "iconOpen": "MuiSelect-iconOpen",
                                                                      "iconOutlined": "MuiSelect-iconOutlined",
                                                                      "nativeInput": "MuiSelect-nativeInput",
                                                                      "outlined": "MuiSelect-outlined",
                                                                      "root": "MuiSelect-root",
                                                                      "select": "MuiSelect-select",
                                                                      "selectMenu": "MuiSelect-selectMenu",
                                                                    }
                                                                  }
                                                                  disabled={false}
                                                                  displayEmpty={false}
                                                                  inputRef={[Function]}
                                                                  multiple={false}
                                                                  onAnimationStart={[Function]}
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  onFocus={[Function]}
                                                                  value={true}
                                                                  variant="standard"
                                                                >
                                                                  <div
                                                                    aria-haspopup="listbox"
                                                                    className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                    onBlur={[Function]}
                                                                    onFocus={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onMouseDown={[Function]}
                                                                    role="button"
                                                                    tabIndex={0}
                                                                  >
                                                                    On
                                                                  </div>
                                                                  <input
                                                                    aria-hidden={true}
                                                                    className="MuiSelect-nativeInput"
                                                                    onAnimationStart={[Function]}
                                                                    onChange={[Function]}
                                                                    tabIndex={-1}
                                                                    value={true}
                                                                  />
                                                                  <ForwardRef(ArrowDropDownIcon)
                                                                    className="MuiSelect-icon"
                                                                  >
                                                                    <WithStyles(ForwardRef(SvgIcon))
                                                                      className="MuiSelect-icon"
                                                                    >
                                                                      <ForwardRef(SvgIcon)
                                                                        className="MuiSelect-icon"
                                                                        classes={
                                                                          Object {
                                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                            "colorError": "MuiSvgIcon-colorError",
                                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                            "root": "MuiSvgIcon-root",
                                                                          }
                                                                        }
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          className="MuiSvgIcon-root MuiSelect-icon"
                                                                          focusable="false"
                                                                          viewBox="0 0 24 24"
                                                                        >
                                                                          <path
                                                                            d="M7 10l5 5 5-5z"
                                                                          />
                                                                        </svg>
                                                                      </ForwardRef(SvgIcon)>
                                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                                  </ForwardRef(ArrowDropDownIcon)>
                                                                  <WithStyles(ForwardRef(Menu))
                                                                    MenuListProps={
                                                                      Object {
                                                                        "aria-labelledby": undefined,
                                                                        "disableListWrap": true,
                                                                        "role": "listbox",
                                                                      }
                                                                    }
                                                                    PaperProps={
                                                                      Object {
                                                                        "style": Object {
                                                                          "minWidth": undefined,
                                                                        },
                                                                      }
                                                                    }
                                                                    anchorEl={
                                                                      <div
                                                                        aria-haspopup="listbox"
                                                                        class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                        role="button"
                                                                        tabindex="0"
                                                                      >
                                                                        On
                                                                      </div>
                                                                    }
                                                                    id="menu-"
                                                                    onClose={[Function]}
                                                                    open={false}
                                                                  >
                                                                    <ForwardRef(Menu)
                                                                      MenuListProps={
                                                                        Object {
                                                                          "aria-labelledby": undefined,
                                                                          "disableListWrap": true,
                                                                          "role": "listbox",
                                                                        }
                                                                      }
                                                                      PaperProps={
                                                                        Object {
                                                                          "style": Object {
                                                                            "minWidth": undefined,
                                                                          },
                                                                        }
                                                                      }
                                                                      anchorEl={
                                                                        <div
                                                                          aria-haspopup="listbox"
                                                                          class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                          role="button"
                                                                          tabindex="0"
                                                                        >
                                                                          On
                                                                        </div>
                                                                      }
                                                                      classes={
                                                                        Object {
                                                                          "list": "MuiMenu-list",
                                                                          "paper": "MuiMenu-paper",
                                                                        }
                                                                      }
                                                                      id="menu-"
                                                                      onClose={[Function]}
                                                                      open={false}
                                                                    >
                                                                      <WithStyles(ForwardRef(Popover))
                                                                        PaperProps={
                                                                          Object {
                                                                            "classes": Object {
                                                                              "root": "MuiMenu-paper",
                                                                            },
                                                                            "style": Object {
                                                                              "minWidth": undefined,
                                                                            },
                                                                          }
                                                                        }
                                                                        anchorEl={
                                                                          <div
                                                                            aria-haspopup="listbox"
                                                                            class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                            role="button"
                                                                            tabindex="0"
                                                                          >
                                                                            On
                                                                          </div>
                                                                        }
                                                                        anchorOrigin={
                                                                          Object {
                                                                            "horizontal": "left",
                                                                            "vertical": "top",
                                                                          }
                                                                        }
                                                                        getContentAnchorEl={[Function]}
                                                                        id="menu-"
                                                                        onClose={[Function]}
                                                                        onEntering={[Function]}
                                                                        open={false}
                                                                        transformOrigin={
                                                                          Object {
                                                                            "horizontal": "left",
                                                                            "vertical": "top",
                                                                          }
                                                                        }
                                                                        transitionDuration="auto"
                                                                      >
                                                                        <ForwardRef(Popover)
                                                                          PaperProps={
                                                                            Object {
                                                                              "classes": Object {
                                                                                "root": "MuiMenu-paper",
                                                                              },
                                                                              "style": Object {
                                                                                "minWidth": undefined,
                                                                              },
                                                                            }
                                                                          }
                                                                          anchorEl={
                                                                            <div
                                                                              aria-haspopup="listbox"
                                                                              class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                              role="button"
                                                                              tabindex="0"
                                                                            >
                                                                              On
                                                                            </div>
                                                                          }
                                                                          anchorOrigin={
                                                                            Object {
                                                                              "horizontal": "left",
                                                                              "vertical": "top",
                                                                            }
                                                                          }
                                                                          classes={
                                                                            Object {
                                                                              "paper": "MuiPopover-paper",
                                                                              "root": "MuiPopover-root",
                                                                            }
                                                                          }
                                                                          getContentAnchorEl={[Function]}
                                                                          id="menu-"
                                                                          onClose={[Function]}
                                                                          onEntering={[Function]}
                                                                          open={false}
                                                                          transformOrigin={
                                                                            Object {
                                                                              "horizontal": "left",
                                                                              "vertical": "top",
                                                                            }
                                                                          }
                                                                          transitionDuration="auto"
                                                                        >
                                                                          <ForwardRef(Modal)
                                                                            BackdropProps={
                                                                              Object {
                                                                                "invisible": true,
                                                                              }
                                                                            }
                                                                            className="MuiPopover-root"
                                                                            container={<body />}
                                                                            id="menu-"
                                                                            onClose={[Function]}
                                                                            open={false}
                                                                          />
                                                                        </ForwardRef(Popover)>
                                                                      </WithStyles(ForwardRef(Popover))>
                                                                    </ForwardRef(Menu)>
                                                                  </WithStyles(ForwardRef(Menu))>
                                                                </ForwardRef(SelectInput)>
                                                              </div>
                                                            </ForwardRef(InputBase)>
                                                          </WithStyles(ForwardRef(InputBase))>
                                                        </ForwardRef(Input)>
                                                      </WithStyles(ForwardRef(Input))>
                                                    </ForwardRef(Select)>
                                                  </WithStyles(ForwardRef(Select))>
                                                   
                                                </span>
                                              </SelectInput>
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                        <WithStyles(ForwardRef(TableCell))
                                          key="settingsFrom"
                                          onClick={[Function]}
                                          style={Object {}}
                                        >
                                          <ForwardRef(TableCell)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            onClick={[Function]}
                                            style={Object {}}
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body"
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              <ColorHighlighter
                                                data={
                                                  Object {
                                                    "catagory": "CAR Government Regulation",
                                                    "id": 1,
                                                    "name": "Night Duty",
                                                    "settingsFrom": "Baseline Rules",
                                                    "state": true,
                                                    "type": "Definition",
                                                  }
                                                }
                                                header="isEdited"
                                                highlighter={[Function]}
                                                style={
                                                  Object {
                                                    "color": "#FF650C",
                                                  }
                                                }
                                                value="Baseline Rules"
                                              >
                                                <span
                                                  style={Object {}}
                                                >
                                                  Baseline Rules
                                                </span>
                                              </ColorHighlighter>
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                        <WithStyles(ForwardRef(TableCell))
                                          key="catagory"
                                          onClick={[Function]}
                                          style={Object {}}
                                        >
                                          <ForwardRef(TableCell)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            onClick={[Function]}
                                            style={Object {}}
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body"
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              CAR Government Regulation
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                        <WithStyles(ForwardRef(TableCell))
                                          key="type"
                                          onClick={[Function]}
                                          style={Object {}}
                                        >
                                          <ForwardRef(TableCell)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            onClick={[Function]}
                                            style={Object {}}
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body"
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              Definition
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                      </tr>
                                    </ForwardRef(TableRow)>
                                  </WithStyles(ForwardRef(TableRow))>
                                  <WithStyles(ForwardRef(TableRow))>
                                    <ForwardRef(TableRow)
                                      classes={
                                        Object {
                                          "footer": "MuiTableRow-footer",
                                          "head": "MuiTableRow-head",
                                          "hover": "MuiTableRow-hover",
                                          "root": "MuiTableRow-root",
                                          "selected": "Mui-selected",
                                        }
                                      }
                                    >
                                      <tr
                                        className="MuiTableRow-root"
                                        role={null}
                                      >
                                        <WithStyles(ForwardRef(TableCell))
                                          className="no-border"
                                          colSpan={6}
                                          style={
                                            Object {
                                              "padding": 0,
                                            }
                                          }
                                        >
                                          <ForwardRef(TableCell)
                                            className="no-border"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            colSpan={6}
                                            style={
                                              Object {
                                                "padding": 0,
                                              }
                                            }
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body no-border"
                                              colSpan={6}
                                              style={
                                                Object {
                                                  "padding": 0,
                                                }
                                              }
                                            >
                                              <WithStyles(ForwardRef(Collapse))
                                                in={false}
                                                timeout="auto"
                                                unmountOnExit={true}
                                              >
                                                <ForwardRef(Collapse)
                                                  classes={
                                                    Object {
                                                      "container": "MuiCollapse-container",
                                                      "entered": "MuiCollapse-entered",
                                                      "hidden": "MuiCollapse-hidden",
                                                      "wrapper": "MuiCollapse-wrapper",
                                                      "wrapperInner": "MuiCollapse-wrapperInner",
                                                    }
                                                  }
                                                  in={false}
                                                  timeout="auto"
                                                  unmountOnExit={true}
                                                >
                                                  <Transition
                                                    addEndListener={[Function]}
                                                    appear={false}
                                                    enter={true}
                                                    exit={true}
                                                    in={false}
                                                    mountOnEnter={false}
                                                    onEnter={[Function]}
                                                    onEntered={[Function]}
                                                    onEntering={[Function]}
                                                    onExit={[Function]}
                                                    onExited={[Function]}
                                                    onExiting={[Function]}
                                                    timeout={null}
                                                    unmountOnExit={true}
                                                  />
                                                </ForwardRef(Collapse)>
                                              </WithStyles(ForwardRef(Collapse))>
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                      </tr>
                                    </ForwardRef(TableRow)>
                                  </WithStyles(ForwardRef(TableRow))>
                                  <WithStyles(ForwardRef(TableRow))
                                    classes={
                                      Object {
                                        "hover": "hover",
                                        "root": "MuiTableRow",
                                        "selected": "selected",
                                      }
                                    }
                                    hover={true}
                                    id="tablerow2"
                                    selected={false}
                                  >
                                    <ForwardRef(TableRow)
                                      classes={
                                        Object {
                                          "footer": "MuiTableRow-footer",
                                          "head": "MuiTableRow-head",
                                          "hover": "MuiTableRow-hover hover",
                                          "root": "MuiTableRow-root MuiTableRow",
                                          "selected": "Mui-selected selected",
                                        }
                                      }
                                      hover={true}
                                      id="tablerow2"
                                      selected={false}
                                    >
                                      <tr
                                        className="MuiTableRow-root MuiTableRow MuiTableRow-hover hover"
                                        id="tablerow2"
                                        role={null}
                                      >
                                        <WithStyles(ForwardRef(TableCell))
                                          style={
                                            Object {
                                              "height": 40,
                                              "paddingLeft": "18px",
                                              "paddingRight": "0px",
                                              "width": 40,
                                            }
                                          }
                                        >
                                          <ForwardRef(TableCell)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            style={
                                              Object {
                                                "height": 40,
                                                "paddingLeft": "18px",
                                                "paddingRight": "0px",
                                                "width": 40,
                                              }
                                            }
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body"
                                              style={
                                                Object {
                                                  "height": 40,
                                                  "paddingLeft": "18px",
                                                  "paddingRight": "0px",
                                                  "width": 40,
                                                }
                                              }
                                            >
                                              <WithStyles(ForwardRef(Checkbox))
                                                checked={false}
                                                color="primary"
                                                onClick={[Function]}
                                                style={
                                                  Object {
                                                    "height": 20,
                                                    "width": 20,
                                                  }
                                                }
                                              >
                                                <ForwardRef(Checkbox)
                                                  checked={false}
                                                  classes={
                                                    Object {
                                                      "checked": "Mui-checked",
                                                      "colorPrimary": "MuiCheckbox-colorPrimary",
                                                      "colorSecondary": "MuiCheckbox-colorSecondary",
                                                      "disabled": "Mui-disabled",
                                                      "indeterminate": "MuiCheckbox-indeterminate",
                                                      "root": "MuiCheckbox-root",
                                                    }
                                                  }
                                                  color="primary"
                                                  onClick={[Function]}
                                                  style={
                                                    Object {
                                                      "height": 20,
                                                      "width": 20,
                                                    }
                                                  }
                                                >
                                                  <WithStyles(ForwardRef(SwitchBase))
                                                    checked={false}
                                                    checkedIcon={<Memo />}
                                                    classes={
                                                      Object {
                                                        "checked": "Mui-checked",
                                                        "disabled": "Mui-disabled",
                                                        "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                                                      }
                                                    }
                                                    color="primary"
                                                    icon={<Memo />}
                                                    inputProps={
                                                      Object {
                                                        "data-indeterminate": false,
                                                      }
                                                    }
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "height": 20,
                                                        "width": 20,
                                                      }
                                                    }
                                                    type="checkbox"
                                                  >
                                                    <ForwardRef(SwitchBase)
                                                      checked={false}
                                                      checkedIcon={<Memo />}
                                                      classes={
                                                        Object {
                                                          "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                                                          "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                                                          "input": "PrivateSwitchBase-input-4",
                                                          "root": "PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary",
                                                        }
                                                      }
                                                      color="primary"
                                                      icon={<Memo />}
                                                      inputProps={
                                                        Object {
                                                          "data-indeterminate": false,
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                      style={
                                                        Object {
                                                          "height": 20,
                                                          "width": 20,
                                                        }
                                                      }
                                                      type="checkbox"
                                                    >
                                                      <WithStyles(ForwardRef(IconButton))
                                                        className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary"
                                                        color="primary"
                                                        component="span"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onFocus={[Function]}
                                                        style={
                                                          Object {
                                                            "height": 20,
                                                            "width": 20,
                                                          }
                                                        }
                                                        tabIndex={null}
                                                      >
                                                        <ForwardRef(IconButton)
                                                          className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary"
                                                          classes={
                                                            Object {
                                                              "colorInherit": "MuiIconButton-colorInherit",
                                                              "colorPrimary": "MuiIconButton-colorPrimary",
                                                              "colorSecondary": "MuiIconButton-colorSecondary",
                                                              "disabled": "Mui-disabled",
                                                              "edgeEnd": "MuiIconButton-edgeEnd",
                                                              "edgeStart": "MuiIconButton-edgeStart",
                                                              "label": "MuiIconButton-label",
                                                              "root": "MuiIconButton-root",
                                                              "sizeSmall": "MuiIconButton-sizeSmall",
                                                            }
                                                          }
                                                          color="primary"
                                                          component="span"
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onFocus={[Function]}
                                                          style={
                                                            Object {
                                                              "height": 20,
                                                              "width": 20,
                                                            }
                                                          }
                                                          tabIndex={null}
                                                        >
                                                          <WithStyles(ForwardRef(ButtonBase))
                                                            centerRipple={true}
                                                            className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                            component="span"
                                                            disabled={false}
                                                            focusRipple={true}
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onFocus={[Function]}
                                                            style={
                                                              Object {
                                                                "height": 20,
                                                                "width": 20,
                                                              }
                                                            }
                                                            tabIndex={null}
                                                          >
                                                            <ForwardRef(ButtonBase)
                                                              centerRipple={true}
                                                              className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                              classes={
                                                                Object {
                                                                  "disabled": "Mui-disabled",
                                                                  "focusVisible": "Mui-focusVisible",
                                                                  "root": "MuiButtonBase-root",
                                                                }
                                                              }
                                                              component="span"
                                                              disabled={false}
                                                              focusRipple={true}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onFocus={[Function]}
                                                              style={
                                                                Object {
                                                                  "height": 20,
                                                                  "width": 20,
                                                                }
                                                              }
                                                              tabIndex={null}
                                                            >
                                                              <span
                                                                aria-disabled={false}
                                                                className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                                onBlur={[Function]}
                                                                onClick={[Function]}
                                                                onDragLeave={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseDown={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                onTouchMove={[Function]}
                                                                onTouchStart={[Function]}
                                                                style={
                                                                  Object {
                                                                    "height": 20,
                                                                    "width": 20,
                                                                  }
                                                                }
                                                                tabIndex={null}
                                                              >
                                                                <span
                                                                  className="MuiIconButton-label"
                                                                >
                                                                  <input
                                                                    checked={false}
                                                                    className="PrivateSwitchBase-input-4"
                                                                    data-indeterminate={false}
                                                                    onChange={[Function]}
                                                                    type="checkbox"
                                                                  />
                                                                  <ForwardRef(CheckBoxOutlineBlankIcon)>
                                                                    <WithStyles(ForwardRef(SvgIcon))>
                                                                      <ForwardRef(SvgIcon)
                                                                        classes={
                                                                          Object {
                                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                            "colorError": "MuiSvgIcon-colorError",
                                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                            "root": "MuiSvgIcon-root",
                                                                          }
                                                                        }
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          className="MuiSvgIcon-root"
                                                                          focusable="false"
                                                                          viewBox="0 0 24 24"
                                                                        >
                                                                          <path
                                                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                                          />
                                                                        </svg>
                                                                      </ForwardRef(SvgIcon)>
                                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                                  </ForwardRef(CheckBoxOutlineBlankIcon)>
                                                                </span>
                                                                <WithStyles(memo)
                                                                  center={true}
                                                                >
                                                                  <ForwardRef(TouchRipple)
                                                                    center={true}
                                                                    classes={
                                                                      Object {
                                                                        "child": "MuiTouchRipple-child",
                                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                                        "ripple": "MuiTouchRipple-ripple",
                                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                        "root": "MuiTouchRipple-root",
                                                                      }
                                                                    }
                                                                  >
                                                                    <span
                                                                      className="MuiTouchRipple-root"
                                                                    >
                                                                      <TransitionGroup
                                                                        childFactory={[Function]}
                                                                        component={null}
                                                                        exit={true}
                                                                      />
                                                                    </span>
                                                                  </ForwardRef(TouchRipple)>
                                                                </WithStyles(memo)>
                                                              </span>
                                                            </ForwardRef(ButtonBase)>
                                                          </WithStyles(ForwardRef(ButtonBase))>
                                                        </ForwardRef(IconButton)>
                                                      </WithStyles(ForwardRef(IconButton))>
                                                    </ForwardRef(SwitchBase)>
                                                  </WithStyles(ForwardRef(SwitchBase))>
                                                </ForwardRef(Checkbox)>
                                              </WithStyles(ForwardRef(Checkbox))>
                                              <WithStyles(ForwardRef(IconButton))
                                                aria-label="expand row"
                                                onClick={[Function]}
                                                size="small"
                                                style={
                                                  Object {
                                                    "marginLeft": "10px",
                                                  }
                                                }
                                              >
                                                <ForwardRef(IconButton)
                                                  aria-label="expand row"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiIconButton-colorInherit",
                                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                                      "disabled": "Mui-disabled",
                                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                                      "edgeStart": "MuiIconButton-edgeStart",
                                                      "label": "MuiIconButton-label",
                                                      "root": "MuiIconButton-root",
                                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                                    }
                                                  }
                                                  onClick={[Function]}
                                                  size="small"
                                                  style={
                                                    Object {
                                                      "marginLeft": "10px",
                                                    }
                                                  }
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    aria-label="expand row"
                                                    centerRipple={true}
                                                    className="MuiIconButton-root MuiIconButton-sizeSmall"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "marginLeft": "10px",
                                                      }
                                                    }
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      aria-label="expand row"
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiIconButton-sizeSmall"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      disabled={false}
                                                      focusRipple={true}
                                                      onClick={[Function]}
                                                      style={
                                                        Object {
                                                          "marginLeft": "10px",
                                                        }
                                                      }
                                                    >
                                                      <button
                                                        aria-label="expand row"
                                                        className="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                                        disabled={false}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        style={
                                                          Object {
                                                            "marginLeft": "10px",
                                                          }
                                                        }
                                                        tabIndex={0}
                                                        type="button"
                                                      >
                                                        <span
                                                          className="MuiIconButton-label"
                                                        >
                                                          <ForwardRef(KeyboardArrowDownIcon)>
                                                            <WithStyles(ForwardRef(SvgIcon))>
                                                              <ForwardRef(SvgIcon)
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root"
                                                                  focusable="false"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef(KeyboardArrowDownIcon)>
                                                        </span>
                                                        <WithStyles(memo)
                                                          center={true}
                                                        >
                                                          <ForwardRef(TouchRipple)
                                                            center={true}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </ForwardRef(TouchRipple)>
                                                        </WithStyles(memo)>
                                                      </button>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(IconButton)>
                                              </WithStyles(ForwardRef(IconButton))>
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                        <WithStyles(ForwardRef(TableCell))
                                          key="name"
                                          onClick={[Function]}
                                          style={Object {}}
                                        >
                                          <ForwardRef(TableCell)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            onClick={[Function]}
                                            style={Object {}}
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body"
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              <OverflowTip
                                                content="Split Duty Extension to Maximum FDP (Split Duty Extension to Maximum FDP)"
                                                maxWidth="200px"
                                                tooltipStyle={
                                                  Object {
                                                    "maxWidth": "235px",
                                                  }
                                                }
                                                value="Split Duty Extension to Maximum FDP (Split Duty Extension to Maximum FDP)"
                                              >
                                                <SierraMuiTooltip
                                                  classes={
                                                    Object {
                                                      "popper": "ellipse-zoom-popper",
                                                    }
                                                  }
                                                  disableHoverListener={true}
                                                  interactive={true}
                                                  style={
                                                    Object {
                                                      "maxWidth": "235px",
                                                    }
                                                  }
                                                  title="Split Duty Extension to Maximum FDP (Split Duty Extension to Maximum FDP)"
                                                >
                                                  <WithStyles(ForwardRef(Tooltip))
                                                    arrow={true}
                                                    classes={
                                                      Object {
                                                        "popper": "ellipse-zoom-popper",
                                                      }
                                                    }
                                                    disableHoverListener={true}
                                                    interactive={true}
                                                    style={
                                                      Object {
                                                        "maxWidth": "235px",
                                                      }
                                                    }
                                                    title="Split Duty Extension to Maximum FDP (Split Duty Extension to Maximum FDP)"
                                                  >
                                                    <ForwardRef(Tooltip)
                                                      arrow={true}
                                                      classes={
                                                        Object {
                                                          "arrow": "MuiTooltip-arrow",
                                                          "popper": "MuiTooltip-popper ellipse-zoom-popper",
                                                          "popperArrow": "MuiTooltip-popperArrow",
                                                          "popperInteractive": "MuiTooltip-popperInteractive",
                                                          "tooltip": "MuiTooltip-tooltip",
                                                          "tooltipArrow": "MuiTooltip-tooltipArrow",
                                                          "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                                          "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                                          "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                                          "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                                          "touch": "MuiTooltip-touch",
                                                        }
                                                      }
                                                      disableHoverListener={true}
                                                      interactive={true}
                                                      style={
                                                        Object {
                                                          "maxWidth": "235px",
                                                        }
                                                      }
                                                      title="Split Duty Extension to Maximum FDP (Split Duty Extension to Maximum FDP)"
                                                    >
                                                      <div
                                                        aria-describedby={null}
                                                        className=""
                                                        onBlur={[Function]}
                                                        onFocus={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchStart={[Function]}
                                                        style={
                                                          Object {
                                                            "maxWidth": "200px",
                                                            "overflow": "hidden",
                                                            "textOverflow": "ellipsis",
                                                            "whiteSpace": "nowrap",
                                                          }
                                                        }
                                                        title={null}
                                                      >
                                                        Split Duty Extension to Maximum FDP (Split Duty Extension to Maximum FDP)
                                                      </div>
                                                      <ForwardRef(Popper)
                                                        anchorEl={
                                                          <div
                                                            class=""
                                                            style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 200px;"
                                                          >
                                                            Split Duty Extension to Maximum FDP (Split Duty Extension to Maximum FDP)
                                                          </div>
                                                        }
                                                        className="MuiTooltip-popper ellipse-zoom-popper MuiTooltip-popperInteractive MuiTooltip-popperArrow"
                                                        id={null}
                                                        onBlur={[Function]}
                                                        onFocus={[Function]}
                                                        open={false}
                                                        placement="bottom"
                                                        popperOptions={
                                                          Object {
                                                            "modifiers": Object {
                                                              "arrow": Object {
                                                                "element": null,
                                                                "enabled": false,
                                                              },
                                                            },
                                                          }
                                                        }
                                                        transition={true}
                                                      />
                                                    </ForwardRef(Tooltip)>
                                                  </WithStyles(ForwardRef(Tooltip))>
                                                </SierraMuiTooltip>
                                              </OverflowTip>
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                        <WithStyles(ForwardRef(TableCell))
                                          key="state"
                                          onClick={[Function]}
                                          style={
                                            Object {
                                              "width": "120px",
                                            }
                                          }
                                        >
                                          <ForwardRef(TableCell)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "width": "120px",
                                              }
                                            }
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body"
                                              onClick={[Function]}
                                              style={
                                                Object {
                                                  "width": "120px",
                                                }
                                              }
                                            >
                                              <SelectInput
                                                data={
                                                  Object {
                                                    "catagory": "CAR Government Regulation",
                                                    "id": 2,
                                                    "name": "Split Duty Extension to Maximum FDP (Split Duty Extension to Maximum FDP)",
                                                    "settingsFrom": "Flight Desk",
                                                    "state": false,
                                                    "type": "Duty Time Limitation",
                                                  }
                                                }
                                                defaultValue="_default"
                                                enableReset={false}
                                                error={false}
                                                getTooltipContent={[Function]}
                                                handleDisable={[Function]}
                                                handleReset={[Function]}
                                                handleTooltipDisable={[Function]}
                                                items={
                                                  Array [
                                                    Object {
                                                      "display": "On",
                                                      "value": true,
                                                    },
                                                    Object {
                                                      "display": "Off",
                                                      "value": false,
                                                    },
                                                  ]
                                                }
                                                onChange={[Function]}
                                                placeholder=""
                                                removeOverlay={[Function]}
                                                style={
                                                  Object {
                                                    "fontSize": "0.8125rem",
                                                    "width": "120px",
                                                  }
                                                }
                                                value={false}
                                              >
                                                <span
                                                  className=""
                                                >
                                                   
                                                  <WithStyles(ForwardRef(Select))
                                                    className=""
                                                    disabled={false}
                                                    onChange={[Function]}
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "fontSize": "0.8125rem",
                                                        "width": "120px",
                                                        "zIndex": 1,
                                                      }
                                                    }
                                                    value={false}
                                                  >
                                                    <ForwardRef(Select)
                                                      className=""
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "filled": "MuiSelect-filled",
                                                          "icon": "MuiSelect-icon",
                                                          "iconFilled": "MuiSelect-iconFilled",
                                                          "iconOpen": "MuiSelect-iconOpen",
                                                          "iconOutlined": "MuiSelect-iconOutlined",
                                                          "nativeInput": "MuiSelect-nativeInput",
                                                          "outlined": "MuiSelect-outlined",
                                                          "root": "MuiSelect-root",
                                                          "select": "MuiSelect-select",
                                                          "selectMenu": "MuiSelect-selectMenu",
                                                        }
                                                      }
                                                      disabled={false}
                                                      onChange={[Function]}
                                                      onClick={[Function]}
                                                      style={
                                                        Object {
                                                          "fontSize": "0.8125rem",
                                                          "width": "120px",
                                                          "zIndex": 1,
                                                        }
                                                      }
                                                      value={false}
                                                    >
                                                      <WithStyles(ForwardRef(Input))
                                                        className=""
                                                        disabled={false}
                                                        inputComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "propTypes": Object {
                                                              "IconComponent": [Function],
                                                              "MenuProps": [Function],
                                                              "SelectDisplayProps": [Function],
                                                              "aria-label": [Function],
                                                              "autoFocus": [Function],
                                                              "autoWidth": [Function],
                                                              "children": [Function],
                                                              "className": [Function],
                                                              "classes": [Function],
                                                              "defaultValue": [Function],
                                                              "disabled": [Function],
                                                              "displayEmpty": [Function],
                                                              "inputRef": [Function],
                                                              "labelId": [Function],
                                                              "multiple": [Function],
                                                              "name": [Function],
                                                              "onBlur": [Function],
                                                              "onChange": [Function],
                                                              "onClose": [Function],
                                                              "onFocus": [Function],
                                                              "onOpen": [Function],
                                                              "open": [Function],
                                                              "readOnly": [Function],
                                                              "renderValue": [Function],
                                                              "tabIndex": [Function],
                                                              "type": [Function],
                                                              "value": [Function],
                                                              "variant": [Function],
                                                            },
                                                            "render": [Function],
                                                          }
                                                        }
                                                        inputProps={
                                                          Object {
                                                            "IconComponent": Object {
                                                              "$$typeof": Symbol(react.memo),
                                                              "compare": null,
                                                              "type": Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "render": [Function],
                                                              },
                                                            },
                                                            "MenuProps": undefined,
                                                            "SelectDisplayProps": Object {
                                                              "id": undefined,
                                                            },
                                                            "autoWidth": false,
                                                            "children": Array [
                                                              <WithStyles(ForwardRef(MenuItem))
                                                                disabled={true}
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                                value="_default"
                                                              >
                                                                
                                                              </WithStyles(ForwardRef(MenuItem))>,
                                                              Array [
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  value={true}
                                                                >
                                                                  On
                                                                </WithStyles(ForwardRef(MenuItem))>,
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  value={false}
                                                                >
                                                                  Off
                                                                </WithStyles(ForwardRef(MenuItem))>,
                                                              ],
                                                            ],
                                                            "classes": Object {
                                                              "disabled": "Mui-disabled",
                                                              "filled": "MuiSelect-filled",
                                                              "icon": "MuiSelect-icon",
                                                              "iconFilled": "MuiSelect-iconFilled",
                                                              "iconOpen": "MuiSelect-iconOpen",
                                                              "iconOutlined": "MuiSelect-iconOutlined",
                                                              "nativeInput": "MuiSelect-nativeInput",
                                                              "outlined": "MuiSelect-outlined",
                                                              "root": "MuiSelect-root",
                                                              "select": "MuiSelect-select",
                                                              "selectMenu": "MuiSelect-selectMenu",
                                                            },
                                                            "displayEmpty": false,
                                                            "labelId": undefined,
                                                            "multiple": false,
                                                            "onClose": undefined,
                                                            "onOpen": undefined,
                                                            "open": undefined,
                                                            "renderValue": undefined,
                                                            "type": undefined,
                                                            "variant": "standard",
                                                          }
                                                        }
                                                        onChange={[Function]}
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "fontSize": "0.8125rem",
                                                            "width": "120px",
                                                            "zIndex": 1,
                                                          }
                                                        }
                                                        value={false}
                                                      >
                                                        <ForwardRef(Input)
                                                          className=""
                                                          classes={
                                                            Object {
                                                              "colorSecondary": "MuiInput-colorSecondary",
                                                              "disabled": "Mui-disabled",
                                                              "error": "Mui-error",
                                                              "focused": "Mui-focused",
                                                              "formControl": "MuiInput-formControl",
                                                              "fullWidth": "MuiInput-fullWidth",
                                                              "input": "MuiInput-input",
                                                              "inputMarginDense": "MuiInput-inputMarginDense",
                                                              "inputMultiline": "MuiInput-inputMultiline",
                                                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                              "marginDense": "MuiInput-marginDense",
                                                              "multiline": "MuiInput-multiline",
                                                              "root": "MuiInput-root",
                                                              "underline": "MuiInput-underline",
                                                            }
                                                          }
                                                          disabled={false}
                                                          inputComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "propTypes": Object {
                                                                "IconComponent": [Function],
                                                                "MenuProps": [Function],
                                                                "SelectDisplayProps": [Function],
                                                                "aria-label": [Function],
                                                                "autoFocus": [Function],
                                                                "autoWidth": [Function],
                                                                "children": [Function],
                                                                "className": [Function],
                                                                "classes": [Function],
                                                                "defaultValue": [Function],
                                                                "disabled": [Function],
                                                                "displayEmpty": [Function],
                                                                "inputRef": [Function],
                                                                "labelId": [Function],
                                                                "multiple": [Function],
                                                                "name": [Function],
                                                                "onBlur": [Function],
                                                                "onChange": [Function],
                                                                "onClose": [Function],
                                                                "onFocus": [Function],
                                                                "onOpen": [Function],
                                                                "open": [Function],
                                                                "readOnly": [Function],
                                                                "renderValue": [Function],
                                                                "tabIndex": [Function],
                                                                "type": [Function],
                                                                "value": [Function],
                                                                "variant": [Function],
                                                              },
                                                              "render": [Function],
                                                            }
                                                          }
                                                          inputProps={
                                                            Object {
                                                              "IconComponent": Object {
                                                                "$$typeof": Symbol(react.memo),
                                                                "compare": null,
                                                                "type": Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "render": [Function],
                                                                },
                                                              },
                                                              "MenuProps": undefined,
                                                              "SelectDisplayProps": Object {
                                                                "id": undefined,
                                                              },
                                                              "autoWidth": false,
                                                              "children": Array [
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  disabled={true}
                                                                  style={
                                                                    Object {
                                                                      "display": "none",
                                                                    }
                                                                  }
                                                                  value="_default"
                                                                >
                                                                  
                                                                </WithStyles(ForwardRef(MenuItem))>,
                                                                Array [
                                                                  <WithStyles(ForwardRef(MenuItem))
                                                                    value={true}
                                                                  >
                                                                    On
                                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                                  <WithStyles(ForwardRef(MenuItem))
                                                                    value={false}
                                                                  >
                                                                    Off
                                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                                ],
                                                              ],
                                                              "classes": Object {
                                                                "disabled": "Mui-disabled",
                                                                "filled": "MuiSelect-filled",
                                                                "icon": "MuiSelect-icon",
                                                                "iconFilled": "MuiSelect-iconFilled",
                                                                "iconOpen": "MuiSelect-iconOpen",
                                                                "iconOutlined": "MuiSelect-iconOutlined",
                                                                "nativeInput": "MuiSelect-nativeInput",
                                                                "outlined": "MuiSelect-outlined",
                                                                "root": "MuiSelect-root",
                                                                "select": "MuiSelect-select",
                                                                "selectMenu": "MuiSelect-selectMenu",
                                                              },
                                                              "displayEmpty": false,
                                                              "labelId": undefined,
                                                              "multiple": false,
                                                              "onClose": undefined,
                                                              "onOpen": undefined,
                                                              "open": undefined,
                                                              "renderValue": undefined,
                                                              "type": undefined,
                                                              "variant": "standard",
                                                            }
                                                          }
                                                          onChange={[Function]}
                                                          onClick={[Function]}
                                                          style={
                                                            Object {
                                                              "fontSize": "0.8125rem",
                                                              "width": "120px",
                                                              "zIndex": 1,
                                                            }
                                                          }
                                                          value={false}
                                                        >
                                                          <WithStyles(ForwardRef(InputBase))
                                                            className=""
                                                            classes={
                                                              Object {
                                                                "colorSecondary": "MuiInput-colorSecondary",
                                                                "disabled": "Mui-disabled",
                                                                "error": "Mui-error",
                                                                "focused": "Mui-focused",
                                                                "formControl": "MuiInput-formControl",
                                                                "fullWidth": "MuiInput-fullWidth",
                                                                "input": "MuiInput-input",
                                                                "inputMarginDense": "MuiInput-inputMarginDense",
                                                                "inputMultiline": "MuiInput-inputMultiline",
                                                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                "marginDense": "MuiInput-marginDense",
                                                                "multiline": "MuiInput-multiline",
                                                                "root": "MuiInput-root MuiInput-underline",
                                                                "underline": null,
                                                              }
                                                            }
                                                            disabled={false}
                                                            fullWidth={false}
                                                            inputComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "propTypes": Object {
                                                                  "IconComponent": [Function],
                                                                  "MenuProps": [Function],
                                                                  "SelectDisplayProps": [Function],
                                                                  "aria-label": [Function],
                                                                  "autoFocus": [Function],
                                                                  "autoWidth": [Function],
                                                                  "children": [Function],
                                                                  "className": [Function],
                                                                  "classes": [Function],
                                                                  "defaultValue": [Function],
                                                                  "disabled": [Function],
                                                                  "displayEmpty": [Function],
                                                                  "inputRef": [Function],
                                                                  "labelId": [Function],
                                                                  "multiple": [Function],
                                                                  "name": [Function],
                                                                  "onBlur": [Function],
                                                                  "onChange": [Function],
                                                                  "onClose": [Function],
                                                                  "onFocus": [Function],
                                                                  "onOpen": [Function],
                                                                  "open": [Function],
                                                                  "readOnly": [Function],
                                                                  "renderValue": [Function],
                                                                  "tabIndex": [Function],
                                                                  "type": [Function],
                                                                  "value": [Function],
                                                                  "variant": [Function],
                                                                },
                                                                "render": [Function],
                                                              }
                                                            }
                                                            inputProps={
                                                              Object {
                                                                "IconComponent": Object {
                                                                  "$$typeof": Symbol(react.memo),
                                                                  "compare": null,
                                                                  "type": Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "render": [Function],
                                                                  },
                                                                },
                                                                "MenuProps": undefined,
                                                                "SelectDisplayProps": Object {
                                                                  "id": undefined,
                                                                },
                                                                "autoWidth": false,
                                                                "children": Array [
                                                                  <WithStyles(ForwardRef(MenuItem))
                                                                    disabled={true}
                                                                    style={
                                                                      Object {
                                                                        "display": "none",
                                                                      }
                                                                    }
                                                                    value="_default"
                                                                  >
                                                                    
                                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                                  Array [
                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                      value={true}
                                                                    >
                                                                      On
                                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                      value={false}
                                                                    >
                                                                      Off
                                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                                  ],
                                                                ],
                                                                "classes": Object {
                                                                  "disabled": "Mui-disabled",
                                                                  "filled": "MuiSelect-filled",
                                                                  "icon": "MuiSelect-icon",
                                                                  "iconFilled": "MuiSelect-iconFilled",
                                                                  "iconOpen": "MuiSelect-iconOpen",
                                                                  "iconOutlined": "MuiSelect-iconOutlined",
                                                                  "nativeInput": "MuiSelect-nativeInput",
                                                                  "outlined": "MuiSelect-outlined",
                                                                  "root": "MuiSelect-root",
                                                                  "select": "MuiSelect-select",
                                                                  "selectMenu": "MuiSelect-selectMenu",
                                                                },
                                                                "displayEmpty": false,
                                                                "labelId": undefined,
                                                                "multiple": false,
                                                                "onClose": undefined,
                                                                "onOpen": undefined,
                                                                "open": undefined,
                                                                "renderValue": undefined,
                                                                "type": undefined,
                                                                "variant": "standard",
                                                              }
                                                            }
                                                            multiline={false}
                                                            onChange={[Function]}
                                                            onClick={[Function]}
                                                            style={
                                                              Object {
                                                                "fontSize": "0.8125rem",
                                                                "width": "120px",
                                                                "zIndex": 1,
                                                              }
                                                            }
                                                            type="text"
                                                            value={false}
                                                          >
                                                            <ForwardRef(InputBase)
                                                              className=""
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiInputBase-adornedEnd",
                                                                  "adornedStart": "MuiInputBase-adornedStart",
                                                                  "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                  "disabled": "Mui-disabled Mui-disabled",
                                                                  "error": "Mui-error Mui-error",
                                                                  "focused": "Mui-focused Mui-focused",
                                                                  "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                  "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                  "input": "MuiInputBase-input MuiInput-input",
                                                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                  "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                  "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                  "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                  "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                }
                                                              }
                                                              disabled={false}
                                                              fullWidth={false}
                                                              inputComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "propTypes": Object {
                                                                    "IconComponent": [Function],
                                                                    "MenuProps": [Function],
                                                                    "SelectDisplayProps": [Function],
                                                                    "aria-label": [Function],
                                                                    "autoFocus": [Function],
                                                                    "autoWidth": [Function],
                                                                    "children": [Function],
                                                                    "className": [Function],
                                                                    "classes": [Function],
                                                                    "defaultValue": [Function],
                                                                    "disabled": [Function],
                                                                    "displayEmpty": [Function],
                                                                    "inputRef": [Function],
                                                                    "labelId": [Function],
                                                                    "multiple": [Function],
                                                                    "name": [Function],
                                                                    "onBlur": [Function],
                                                                    "onChange": [Function],
                                                                    "onClose": [Function],
                                                                    "onFocus": [Function],
                                                                    "onOpen": [Function],
                                                                    "open": [Function],
                                                                    "readOnly": [Function],
                                                                    "renderValue": [Function],
                                                                    "tabIndex": [Function],
                                                                    "type": [Function],
                                                                    "value": [Function],
                                                                    "variant": [Function],
                                                                  },
                                                                  "render": [Function],
                                                                }
                                                              }
                                                              inputProps={
                                                                Object {
                                                                  "IconComponent": Object {
                                                                    "$$typeof": Symbol(react.memo),
                                                                    "compare": null,
                                                                    "type": Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "render": [Function],
                                                                    },
                                                                  },
                                                                  "MenuProps": undefined,
                                                                  "SelectDisplayProps": Object {
                                                                    "id": undefined,
                                                                  },
                                                                  "autoWidth": false,
                                                                  "children": Array [
                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                      disabled={true}
                                                                      style={
                                                                        Object {
                                                                          "display": "none",
                                                                        }
                                                                      }
                                                                      value="_default"
                                                                    >
                                                                      
                                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                                    Array [
                                                                      <WithStyles(ForwardRef(MenuItem))
                                                                        value={true}
                                                                      >
                                                                        On
                                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                                      <WithStyles(ForwardRef(MenuItem))
                                                                        value={false}
                                                                      >
                                                                        Off
                                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                                    ],
                                                                  ],
                                                                  "classes": Object {
                                                                    "disabled": "Mui-disabled",
                                                                    "filled": "MuiSelect-filled",
                                                                    "icon": "MuiSelect-icon",
                                                                    "iconFilled": "MuiSelect-iconFilled",
                                                                    "iconOpen": "MuiSelect-iconOpen",
                                                                    "iconOutlined": "MuiSelect-iconOutlined",
                                                                    "nativeInput": "MuiSelect-nativeInput",
                                                                    "outlined": "MuiSelect-outlined",
                                                                    "root": "MuiSelect-root",
                                                                    "select": "MuiSelect-select",
                                                                    "selectMenu": "MuiSelect-selectMenu",
                                                                  },
                                                                  "displayEmpty": false,
                                                                  "labelId": undefined,
                                                                  "multiple": false,
                                                                  "onClose": undefined,
                                                                  "onOpen": undefined,
                                                                  "open": undefined,
                                                                  "renderValue": undefined,
                                                                  "type": undefined,
                                                                  "variant": "standard",
                                                                }
                                                              }
                                                              multiline={false}
                                                              onChange={[Function]}
                                                              onClick={[Function]}
                                                              style={
                                                                Object {
                                                                  "fontSize": "0.8125rem",
                                                                  "width": "120px",
                                                                  "zIndex": 1,
                                                                }
                                                              }
                                                              type="text"
                                                              value={false}
                                                            >
                                                              <div
                                                                className="MuiInputBase-root MuiInput-root MuiInput-underline"
                                                                onClick={[Function]}
                                                                style={
                                                                  Object {
                                                                    "fontSize": "0.8125rem",
                                                                    "width": "120px",
                                                                    "zIndex": 1,
                                                                  }
                                                                }
                                                              >
                                                                <ForwardRef(SelectInput)
                                                                  IconComponent={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.memo),
                                                                      "compare": null,
                                                                      "type": Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "render": [Function],
                                                                      },
                                                                    }
                                                                  }
                                                                  SelectDisplayProps={
                                                                    Object {
                                                                      "id": undefined,
                                                                    }
                                                                  }
                                                                  autoWidth={false}
                                                                  className="MuiInputBase-input MuiInput-input"
                                                                  classes={
                                                                    Object {
                                                                      "disabled": "Mui-disabled",
                                                                      "filled": "MuiSelect-filled",
                                                                      "icon": "MuiSelect-icon",
                                                                      "iconFilled": "MuiSelect-iconFilled",
                                                                      "iconOpen": "MuiSelect-iconOpen",
                                                                      "iconOutlined": "MuiSelect-iconOutlined",
                                                                      "nativeInput": "MuiSelect-nativeInput",
                                                                      "outlined": "MuiSelect-outlined",
                                                                      "root": "MuiSelect-root",
                                                                      "select": "MuiSelect-select",
                                                                      "selectMenu": "MuiSelect-selectMenu",
                                                                    }
                                                                  }
                                                                  disabled={false}
                                                                  displayEmpty={false}
                                                                  inputRef={[Function]}
                                                                  multiple={false}
                                                                  onAnimationStart={[Function]}
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  onFocus={[Function]}
                                                                  value={false}
                                                                  variant="standard"
                                                                >
                                                                  <div
                                                                    aria-haspopup="listbox"
                                                                    className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                    onBlur={[Function]}
                                                                    onFocus={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onMouseDown={[Function]}
                                                                    role="button"
                                                                    tabIndex={0}
                                                                  >
                                                                    Off
                                                                  </div>
                                                                  <input
                                                                    aria-hidden={true}
                                                                    className="MuiSelect-nativeInput"
                                                                    onAnimationStart={[Function]}
                                                                    onChange={[Function]}
                                                                    tabIndex={-1}
                                                                    value={false}
                                                                  />
                                                                  <ForwardRef(ArrowDropDownIcon)
                                                                    className="MuiSelect-icon"
                                                                  >
                                                                    <WithStyles(ForwardRef(SvgIcon))
                                                                      className="MuiSelect-icon"
                                                                    >
                                                                      <ForwardRef(SvgIcon)
                                                                        className="MuiSelect-icon"
                                                                        classes={
                                                                          Object {
                                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                            "colorError": "MuiSvgIcon-colorError",
                                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                            "root": "MuiSvgIcon-root",
                                                                          }
                                                                        }
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          className="MuiSvgIcon-root MuiSelect-icon"
                                                                          focusable="false"
                                                                          viewBox="0 0 24 24"
                                                                        >
                                                                          <path
                                                                            d="M7 10l5 5 5-5z"
                                                                          />
                                                                        </svg>
                                                                      </ForwardRef(SvgIcon)>
                                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                                  </ForwardRef(ArrowDropDownIcon)>
                                                                  <WithStyles(ForwardRef(Menu))
                                                                    MenuListProps={
                                                                      Object {
                                                                        "aria-labelledby": undefined,
                                                                        "disableListWrap": true,
                                                                        "role": "listbox",
                                                                      }
                                                                    }
                                                                    PaperProps={
                                                                      Object {
                                                                        "style": Object {
                                                                          "minWidth": undefined,
                                                                        },
                                                                      }
                                                                    }
                                                                    anchorEl={
                                                                      <div
                                                                        aria-haspopup="listbox"
                                                                        class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                        role="button"
                                                                        tabindex="0"
                                                                      >
                                                                        Off
                                                                      </div>
                                                                    }
                                                                    id="menu-"
                                                                    onClose={[Function]}
                                                                    open={false}
                                                                  >
                                                                    <ForwardRef(Menu)
                                                                      MenuListProps={
                                                                        Object {
                                                                          "aria-labelledby": undefined,
                                                                          "disableListWrap": true,
                                                                          "role": "listbox",
                                                                        }
                                                                      }
                                                                      PaperProps={
                                                                        Object {
                                                                          "style": Object {
                                                                            "minWidth": undefined,
                                                                          },
                                                                        }
                                                                      }
                                                                      anchorEl={
                                                                        <div
                                                                          aria-haspopup="listbox"
                                                                          class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                          role="button"
                                                                          tabindex="0"
                                                                        >
                                                                          Off
                                                                        </div>
                                                                      }
                                                                      classes={
                                                                        Object {
                                                                          "list": "MuiMenu-list",
                                                                          "paper": "MuiMenu-paper",
                                                                        }
                                                                      }
                                                                      id="menu-"
                                                                      onClose={[Function]}
                                                                      open={false}
                                                                    >
                                                                      <WithStyles(ForwardRef(Popover))
                                                                        PaperProps={
                                                                          Object {
                                                                            "classes": Object {
                                                                              "root": "MuiMenu-paper",
                                                                            },
                                                                            "style": Object {
                                                                              "minWidth": undefined,
                                                                            },
                                                                          }
                                                                        }
                                                                        anchorEl={
                                                                          <div
                                                                            aria-haspopup="listbox"
                                                                            class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                            role="button"
                                                                            tabindex="0"
                                                                          >
                                                                            Off
                                                                          </div>
                                                                        }
                                                                        anchorOrigin={
                                                                          Object {
                                                                            "horizontal": "left",
                                                                            "vertical": "top",
                                                                          }
                                                                        }
                                                                        getContentAnchorEl={[Function]}
                                                                        id="menu-"
                                                                        onClose={[Function]}
                                                                        onEntering={[Function]}
                                                                        open={false}
                                                                        transformOrigin={
                                                                          Object {
                                                                            "horizontal": "left",
                                                                            "vertical": "top",
                                                                          }
                                                                        }
                                                                        transitionDuration="auto"
                                                                      >
                                                                        <ForwardRef(Popover)
                                                                          PaperProps={
                                                                            Object {
                                                                              "classes": Object {
                                                                                "root": "MuiMenu-paper",
                                                                              },
                                                                              "style": Object {
                                                                                "minWidth": undefined,
                                                                              },
                                                                            }
                                                                          }
                                                                          anchorEl={
                                                                            <div
                                                                              aria-haspopup="listbox"
                                                                              class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                              role="button"
                                                                              tabindex="0"
                                                                            >
                                                                              Off
                                                                            </div>
                                                                          }
                                                                          anchorOrigin={
                                                                            Object {
                                                                              "horizontal": "left",
                                                                              "vertical": "top",
                                                                            }
                                                                          }
                                                                          classes={
                                                                            Object {
                                                                              "paper": "MuiPopover-paper",
                                                                              "root": "MuiPopover-root",
                                                                            }
                                                                          }
                                                                          getContentAnchorEl={[Function]}
                                                                          id="menu-"
                                                                          onClose={[Function]}
                                                                          onEntering={[Function]}
                                                                          open={false}
                                                                          transformOrigin={
                                                                            Object {
                                                                              "horizontal": "left",
                                                                              "vertical": "top",
                                                                            }
                                                                          }
                                                                          transitionDuration="auto"
                                                                        >
                                                                          <ForwardRef(Modal)
                                                                            BackdropProps={
                                                                              Object {
                                                                                "invisible": true,
                                                                              }
                                                                            }
                                                                            className="MuiPopover-root"
                                                                            container={<body />}
                                                                            id="menu-"
                                                                            onClose={[Function]}
                                                                            open={false}
                                                                          />
                                                                        </ForwardRef(Popover)>
                                                                      </WithStyles(ForwardRef(Popover))>
                                                                    </ForwardRef(Menu)>
                                                                  </WithStyles(ForwardRef(Menu))>
                                                                </ForwardRef(SelectInput)>
                                                              </div>
                                                            </ForwardRef(InputBase)>
                                                          </WithStyles(ForwardRef(InputBase))>
                                                        </ForwardRef(Input)>
                                                      </WithStyles(ForwardRef(Input))>
                                                    </ForwardRef(Select)>
                                                  </WithStyles(ForwardRef(Select))>
                                                   
                                                </span>
                                              </SelectInput>
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                        <WithStyles(ForwardRef(TableCell))
                                          key="settingsFrom"
                                          onClick={[Function]}
                                          style={Object {}}
                                        >
                                          <ForwardRef(TableCell)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            onClick={[Function]}
                                            style={Object {}}
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body"
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              <ColorHighlighter
                                                data={
                                                  Object {
                                                    "catagory": "CAR Government Regulation",
                                                    "id": 2,
                                                    "name": "Split Duty Extension to Maximum FDP (Split Duty Extension to Maximum FDP)",
                                                    "settingsFrom": "Flight Desk",
                                                    "state": false,
                                                    "type": "Duty Time Limitation",
                                                  }
                                                }
                                                header="isEdited"
                                                highlighter={[Function]}
                                                style={
                                                  Object {
                                                    "color": "#FF650C",
                                                  }
                                                }
                                                value="Flight Desk"
                                              >
                                                <span
                                                  style={Object {}}
                                                >
                                                  Flight Desk
                                                </span>
                                              </ColorHighlighter>
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                        <WithStyles(ForwardRef(TableCell))
                                          key="catagory"
                                          onClick={[Function]}
                                          style={Object {}}
                                        >
                                          <ForwardRef(TableCell)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            onClick={[Function]}
                                            style={Object {}}
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body"
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              CAR Government Regulation
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                        <WithStyles(ForwardRef(TableCell))
                                          key="type"
                                          onClick={[Function]}
                                          style={Object {}}
                                        >
                                          <ForwardRef(TableCell)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            onClick={[Function]}
                                            style={Object {}}
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body"
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              Duty Time Limitation
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                      </tr>
                                    </ForwardRef(TableRow)>
                                  </WithStyles(ForwardRef(TableRow))>
                                  <WithStyles(ForwardRef(TableRow))>
                                    <ForwardRef(TableRow)
                                      classes={
                                        Object {
                                          "footer": "MuiTableRow-footer",
                                          "head": "MuiTableRow-head",
                                          "hover": "MuiTableRow-hover",
                                          "root": "MuiTableRow-root",
                                          "selected": "Mui-selected",
                                        }
                                      }
                                    >
                                      <tr
                                        className="MuiTableRow-root"
                                        role={null}
                                      >
                                        <WithStyles(ForwardRef(TableCell))
                                          className="no-border"
                                          colSpan={6}
                                          style={
                                            Object {
                                              "padding": 0,
                                            }
                                          }
                                        >
                                          <ForwardRef(TableCell)
                                            className="no-border"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            colSpan={6}
                                            style={
                                              Object {
                                                "padding": 0,
                                              }
                                            }
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body no-border"
                                              colSpan={6}
                                              style={
                                                Object {
                                                  "padding": 0,
                                                }
                                              }
                                            >
                                              <WithStyles(ForwardRef(Collapse))
                                                in={false}
                                                timeout="auto"
                                                unmountOnExit={true}
                                              >
                                                <ForwardRef(Collapse)
                                                  classes={
                                                    Object {
                                                      "container": "MuiCollapse-container",
                                                      "entered": "MuiCollapse-entered",
                                                      "hidden": "MuiCollapse-hidden",
                                                      "wrapper": "MuiCollapse-wrapper",
                                                      "wrapperInner": "MuiCollapse-wrapperInner",
                                                    }
                                                  }
                                                  in={false}
                                                  timeout="auto"
                                                  unmountOnExit={true}
                                                >
                                                  <Transition
                                                    addEndListener={[Function]}
                                                    appear={false}
                                                    enter={true}
                                                    exit={true}
                                                    in={false}
                                                    mountOnEnter={false}
                                                    onEnter={[Function]}
                                                    onEntered={[Function]}
                                                    onEntering={[Function]}
                                                    onExit={[Function]}
                                                    onExited={[Function]}
                                                    onExiting={[Function]}
                                                    timeout={null}
                                                    unmountOnExit={true}
                                                  />
                                                </ForwardRef(Collapse)>
                                              </WithStyles(ForwardRef(Collapse))>
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                      </tr>
                                    </ForwardRef(TableRow)>
                                  </WithStyles(ForwardRef(TableRow))>
                                  <WithStyles(ForwardRef(TableRow))
                                    classes={
                                      Object {
                                        "hover": "hover",
                                        "root": "MuiTableRow",
                                        "selected": "selected",
                                      }
                                    }
                                    hover={true}
                                    id="tablerow3"
                                    selected={false}
                                  >
                                    <ForwardRef(TableRow)
                                      classes={
                                        Object {
                                          "footer": "MuiTableRow-footer",
                                          "head": "MuiTableRow-head",
                                          "hover": "MuiTableRow-hover hover",
                                          "root": "MuiTableRow-root MuiTableRow",
                                          "selected": "Mui-selected selected",
                                        }
                                      }
                                      hover={true}
                                      id="tablerow3"
                                      selected={false}
                                    >
                                      <tr
                                        className="MuiTableRow-root MuiTableRow MuiTableRow-hover hover"
                                        id="tablerow3"
                                        role={null}
                                      >
                                        <WithStyles(ForwardRef(TableCell))
                                          style={
                                            Object {
                                              "height": 40,
                                              "paddingLeft": "18px",
                                              "paddingRight": "0px",
                                              "width": 40,
                                            }
                                          }
                                        >
                                          <ForwardRef(TableCell)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            style={
                                              Object {
                                                "height": 40,
                                                "paddingLeft": "18px",
                                                "paddingRight": "0px",
                                                "width": 40,
                                              }
                                            }
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body"
                                              style={
                                                Object {
                                                  "height": 40,
                                                  "paddingLeft": "18px",
                                                  "paddingRight": "0px",
                                                  "width": 40,
                                                }
                                              }
                                            >
                                              <WithStyles(ForwardRef(Checkbox))
                                                checked={false}
                                                color="primary"
                                                onClick={[Function]}
                                                style={
                                                  Object {
                                                    "height": 20,
                                                    "width": 20,
                                                  }
                                                }
                                              >
                                                <ForwardRef(Checkbox)
                                                  checked={false}
                                                  classes={
                                                    Object {
                                                      "checked": "Mui-checked",
                                                      "colorPrimary": "MuiCheckbox-colorPrimary",
                                                      "colorSecondary": "MuiCheckbox-colorSecondary",
                                                      "disabled": "Mui-disabled",
                                                      "indeterminate": "MuiCheckbox-indeterminate",
                                                      "root": "MuiCheckbox-root",
                                                    }
                                                  }
                                                  color="primary"
                                                  onClick={[Function]}
                                                  style={
                                                    Object {
                                                      "height": 20,
                                                      "width": 20,
                                                    }
                                                  }
                                                >
                                                  <WithStyles(ForwardRef(SwitchBase))
                                                    checked={false}
                                                    checkedIcon={<Memo />}
                                                    classes={
                                                      Object {
                                                        "checked": "Mui-checked",
                                                        "disabled": "Mui-disabled",
                                                        "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                                                      }
                                                    }
                                                    color="primary"
                                                    icon={<Memo />}
                                                    inputProps={
                                                      Object {
                                                        "data-indeterminate": false,
                                                      }
                                                    }
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "height": 20,
                                                        "width": 20,
                                                      }
                                                    }
                                                    type="checkbox"
                                                  >
                                                    <ForwardRef(SwitchBase)
                                                      checked={false}
                                                      checkedIcon={<Memo />}
                                                      classes={
                                                        Object {
                                                          "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                                                          "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                                                          "input": "PrivateSwitchBase-input-4",
                                                          "root": "PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary",
                                                        }
                                                      }
                                                      color="primary"
                                                      icon={<Memo />}
                                                      inputProps={
                                                        Object {
                                                          "data-indeterminate": false,
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                      style={
                                                        Object {
                                                          "height": 20,
                                                          "width": 20,
                                                        }
                                                      }
                                                      type="checkbox"
                                                    >
                                                      <WithStyles(ForwardRef(IconButton))
                                                        className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary"
                                                        color="primary"
                                                        component="span"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onFocus={[Function]}
                                                        style={
                                                          Object {
                                                            "height": 20,
                                                            "width": 20,
                                                          }
                                                        }
                                                        tabIndex={null}
                                                      >
                                                        <ForwardRef(IconButton)
                                                          className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary"
                                                          classes={
                                                            Object {
                                                              "colorInherit": "MuiIconButton-colorInherit",
                                                              "colorPrimary": "MuiIconButton-colorPrimary",
                                                              "colorSecondary": "MuiIconButton-colorSecondary",
                                                              "disabled": "Mui-disabled",
                                                              "edgeEnd": "MuiIconButton-edgeEnd",
                                                              "edgeStart": "MuiIconButton-edgeStart",
                                                              "label": "MuiIconButton-label",
                                                              "root": "MuiIconButton-root",
                                                              "sizeSmall": "MuiIconButton-sizeSmall",
                                                            }
                                                          }
                                                          color="primary"
                                                          component="span"
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onFocus={[Function]}
                                                          style={
                                                            Object {
                                                              "height": 20,
                                                              "width": 20,
                                                            }
                                                          }
                                                          tabIndex={null}
                                                        >
                                                          <WithStyles(ForwardRef(ButtonBase))
                                                            centerRipple={true}
                                                            className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                            component="span"
                                                            disabled={false}
                                                            focusRipple={true}
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onFocus={[Function]}
                                                            style={
                                                              Object {
                                                                "height": 20,
                                                                "width": 20,
                                                              }
                                                            }
                                                            tabIndex={null}
                                                          >
                                                            <ForwardRef(ButtonBase)
                                                              centerRipple={true}
                                                              className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                              classes={
                                                                Object {
                                                                  "disabled": "Mui-disabled",
                                                                  "focusVisible": "Mui-focusVisible",
                                                                  "root": "MuiButtonBase-root",
                                                                }
                                                              }
                                                              component="span"
                                                              disabled={false}
                                                              focusRipple={true}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onFocus={[Function]}
                                                              style={
                                                                Object {
                                                                  "height": 20,
                                                                  "width": 20,
                                                                }
                                                              }
                                                              tabIndex={null}
                                                            >
                                                              <span
                                                                aria-disabled={false}
                                                                className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                                onBlur={[Function]}
                                                                onClick={[Function]}
                                                                onDragLeave={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseDown={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                onTouchMove={[Function]}
                                                                onTouchStart={[Function]}
                                                                style={
                                                                  Object {
                                                                    "height": 20,
                                                                    "width": 20,
                                                                  }
                                                                }
                                                                tabIndex={null}
                                                              >
                                                                <span
                                                                  className="MuiIconButton-label"
                                                                >
                                                                  <input
                                                                    checked={false}
                                                                    className="PrivateSwitchBase-input-4"
                                                                    data-indeterminate={false}
                                                                    onChange={[Function]}
                                                                    type="checkbox"
                                                                  />
                                                                  <ForwardRef(CheckBoxOutlineBlankIcon)>
                                                                    <WithStyles(ForwardRef(SvgIcon))>
                                                                      <ForwardRef(SvgIcon)
                                                                        classes={
                                                                          Object {
                                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                            "colorError": "MuiSvgIcon-colorError",
                                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                            "root": "MuiSvgIcon-root",
                                                                          }
                                                                        }
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          className="MuiSvgIcon-root"
                                                                          focusable="false"
                                                                          viewBox="0 0 24 24"
                                                                        >
                                                                          <path
                                                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                                          />
                                                                        </svg>
                                                                      </ForwardRef(SvgIcon)>
                                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                                  </ForwardRef(CheckBoxOutlineBlankIcon)>
                                                                </span>
                                                                <WithStyles(memo)
                                                                  center={true}
                                                                >
                                                                  <ForwardRef(TouchRipple)
                                                                    center={true}
                                                                    classes={
                                                                      Object {
                                                                        "child": "MuiTouchRipple-child",
                                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                                        "ripple": "MuiTouchRipple-ripple",
                                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                        "root": "MuiTouchRipple-root",
                                                                      }
                                                                    }
                                                                  >
                                                                    <span
                                                                      className="MuiTouchRipple-root"
                                                                    >
                                                                      <TransitionGroup
                                                                        childFactory={[Function]}
                                                                        component={null}
                                                                        exit={true}
                                                                      />
                                                                    </span>
                                                                  </ForwardRef(TouchRipple)>
                                                                </WithStyles(memo)>
                                                              </span>
                                                            </ForwardRef(ButtonBase)>
                                                          </WithStyles(ForwardRef(ButtonBase))>
                                                        </ForwardRef(IconButton)>
                                                      </WithStyles(ForwardRef(IconButton))>
                                                    </ForwardRef(SwitchBase)>
                                                  </WithStyles(ForwardRef(SwitchBase))>
                                                </ForwardRef(Checkbox)>
                                              </WithStyles(ForwardRef(Checkbox))>
                                              <WithStyles(ForwardRef(IconButton))
                                                aria-label="expand row"
                                                onClick={[Function]}
                                                size="small"
                                                style={
                                                  Object {
                                                    "marginLeft": "10px",
                                                  }
                                                }
                                              >
                                                <ForwardRef(IconButton)
                                                  aria-label="expand row"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiIconButton-colorInherit",
                                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                                      "disabled": "Mui-disabled",
                                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                                      "edgeStart": "MuiIconButton-edgeStart",
                                                      "label": "MuiIconButton-label",
                                                      "root": "MuiIconButton-root",
                                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                                    }
                                                  }
                                                  onClick={[Function]}
                                                  size="small"
                                                  style={
                                                    Object {
                                                      "marginLeft": "10px",
                                                    }
                                                  }
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    aria-label="expand row"
                                                    centerRipple={true}
                                                    className="MuiIconButton-root MuiIconButton-sizeSmall"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "marginLeft": "10px",
                                                      }
                                                    }
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      aria-label="expand row"
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiIconButton-sizeSmall"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      disabled={false}
                                                      focusRipple={true}
                                                      onClick={[Function]}
                                                      style={
                                                        Object {
                                                          "marginLeft": "10px",
                                                        }
                                                      }
                                                    >
                                                      <button
                                                        aria-label="expand row"
                                                        className="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                                        disabled={false}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        style={
                                                          Object {
                                                            "marginLeft": "10px",
                                                          }
                                                        }
                                                        tabIndex={0}
                                                        type="button"
                                                      >
                                                        <span
                                                          className="MuiIconButton-label"
                                                        >
                                                          <ForwardRef(KeyboardArrowDownIcon)>
                                                            <WithStyles(ForwardRef(SvgIcon))>
                                                              <ForwardRef(SvgIcon)
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root"
                                                                  focusable="false"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef(KeyboardArrowDownIcon)>
                                                        </span>
                                                        <WithStyles(memo)
                                                          center={true}
                                                        >
                                                          <ForwardRef(TouchRipple)
                                                            center={true}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </ForwardRef(TouchRipple)>
                                                        </WithStyles(memo)>
                                                      </button>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(IconButton)>
                                              </WithStyles(ForwardRef(IconButton))>
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                        <WithStyles(ForwardRef(TableCell))
                                          key="name"
                                          onClick={[Function]}
                                          style={Object {}}
                                        >
                                          <ForwardRef(TableCell)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            onClick={[Function]}
                                            style={Object {}}
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body"
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              <OverflowTip
                                                content="Minimum Rest at Home Base (Minimum Rest at Home Base)"
                                                maxWidth="200px"
                                                tooltipStyle={
                                                  Object {
                                                    "maxWidth": "235px",
                                                  }
                                                }
                                                value="Minimum Rest at Home Base (Minimum Rest at Home Base)"
                                              >
                                                <SierraMuiTooltip
                                                  classes={
                                                    Object {
                                                      "popper": "ellipse-zoom-popper",
                                                    }
                                                  }
                                                  disableHoverListener={true}
                                                  interactive={true}
                                                  style={
                                                    Object {
                                                      "maxWidth": "235px",
                                                    }
                                                  }
                                                  title="Minimum Rest at Home Base (Minimum Rest at Home Base)"
                                                >
                                                  <WithStyles(ForwardRef(Tooltip))
                                                    arrow={true}
                                                    classes={
                                                      Object {
                                                        "popper": "ellipse-zoom-popper",
                                                      }
                                                    }
                                                    disableHoverListener={true}
                                                    interactive={true}
                                                    style={
                                                      Object {
                                                        "maxWidth": "235px",
                                                      }
                                                    }
                                                    title="Minimum Rest at Home Base (Minimum Rest at Home Base)"
                                                  >
                                                    <ForwardRef(Tooltip)
                                                      arrow={true}
                                                      classes={
                                                        Object {
                                                          "arrow": "MuiTooltip-arrow",
                                                          "popper": "MuiTooltip-popper ellipse-zoom-popper",
                                                          "popperArrow": "MuiTooltip-popperArrow",
                                                          "popperInteractive": "MuiTooltip-popperInteractive",
                                                          "tooltip": "MuiTooltip-tooltip",
                                                          "tooltipArrow": "MuiTooltip-tooltipArrow",
                                                          "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                                          "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                                          "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                                          "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                                          "touch": "MuiTooltip-touch",
                                                        }
                                                      }
                                                      disableHoverListener={true}
                                                      interactive={true}
                                                      style={
                                                        Object {
                                                          "maxWidth": "235px",
                                                        }
                                                      }
                                                      title="Minimum Rest at Home Base (Minimum Rest at Home Base)"
                                                    >
                                                      <div
                                                        aria-describedby={null}
                                                        className=""
                                                        onBlur={[Function]}
                                                        onFocus={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchStart={[Function]}
                                                        style={
                                                          Object {
                                                            "maxWidth": "200px",
                                                            "overflow": "hidden",
                                                            "textOverflow": "ellipsis",
                                                            "whiteSpace": "nowrap",
                                                          }
                                                        }
                                                        title={null}
                                                      >
                                                        Minimum Rest at Home Base (Minimum Rest at Home Base)
                                                      </div>
                                                      <ForwardRef(Popper)
                                                        anchorEl={
                                                          <div
                                                            class=""
                                                            style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 200px;"
                                                          >
                                                            Minimum Rest at Home Base (Minimum Rest at Home Base)
                                                          </div>
                                                        }
                                                        className="MuiTooltip-popper ellipse-zoom-popper MuiTooltip-popperInteractive MuiTooltip-popperArrow"
                                                        id={null}
                                                        onBlur={[Function]}
                                                        onFocus={[Function]}
                                                        open={false}
                                                        placement="bottom"
                                                        popperOptions={
                                                          Object {
                                                            "modifiers": Object {
                                                              "arrow": Object {
                                                                "element": null,
                                                                "enabled": false,
                                                              },
                                                            },
                                                          }
                                                        }
                                                        transition={true}
                                                      />
                                                    </ForwardRef(Tooltip)>
                                                  </WithStyles(ForwardRef(Tooltip))>
                                                </SierraMuiTooltip>
                                              </OverflowTip>
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                        <WithStyles(ForwardRef(TableCell))
                                          key="state"
                                          onClick={[Function]}
                                          style={
                                            Object {
                                              "width": "120px",
                                            }
                                          }
                                        >
                                          <ForwardRef(TableCell)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "width": "120px",
                                              }
                                            }
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body"
                                              onClick={[Function]}
                                              style={
                                                Object {
                                                  "width": "120px",
                                                }
                                              }
                                            >
                                              <SelectInput
                                                data={
                                                  Object {
                                                    "catagory": "CAR Government Regulation",
                                                    "id": 3,
                                                    "name": "Minimum Rest at Home Base (Minimum Rest at Home Base)",
                                                    "settingsFrom": "Baseline Rules",
                                                    "state": true,
                                                    "type": "Rest RUle",
                                                  }
                                                }
                                                defaultValue="_default"
                                                enableReset={false}
                                                error={false}
                                                getTooltipContent={[Function]}
                                                handleDisable={[Function]}
                                                handleReset={[Function]}
                                                handleTooltipDisable={[Function]}
                                                items={
                                                  Array [
                                                    Object {
                                                      "display": "On",
                                                      "value": true,
                                                    },
                                                    Object {
                                                      "display": "Off",
                                                      "value": false,
                                                    },
                                                  ]
                                                }
                                                onChange={[Function]}
                                                placeholder=""
                                                removeOverlay={[Function]}
                                                style={
                                                  Object {
                                                    "fontSize": "0.8125rem",
                                                    "width": "120px",
                                                  }
                                                }
                                                value={true}
                                              >
                                                <span
                                                  className=""
                                                >
                                                   
                                                  <WithStyles(ForwardRef(Select))
                                                    className=""
                                                    disabled={false}
                                                    onChange={[Function]}
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "fontSize": "0.8125rem",
                                                        "width": "120px",
                                                        "zIndex": 1,
                                                      }
                                                    }
                                                    value={true}
                                                  >
                                                    <ForwardRef(Select)
                                                      className=""
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "filled": "MuiSelect-filled",
                                                          "icon": "MuiSelect-icon",
                                                          "iconFilled": "MuiSelect-iconFilled",
                                                          "iconOpen": "MuiSelect-iconOpen",
                                                          "iconOutlined": "MuiSelect-iconOutlined",
                                                          "nativeInput": "MuiSelect-nativeInput",
                                                          "outlined": "MuiSelect-outlined",
                                                          "root": "MuiSelect-root",
                                                          "select": "MuiSelect-select",
                                                          "selectMenu": "MuiSelect-selectMenu",
                                                        }
                                                      }
                                                      disabled={false}
                                                      onChange={[Function]}
                                                      onClick={[Function]}
                                                      style={
                                                        Object {
                                                          "fontSize": "0.8125rem",
                                                          "width": "120px",
                                                          "zIndex": 1,
                                                        }
                                                      }
                                                      value={true}
                                                    >
                                                      <WithStyles(ForwardRef(Input))
                                                        className=""
                                                        disabled={false}
                                                        inputComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "propTypes": Object {
                                                              "IconComponent": [Function],
                                                              "MenuProps": [Function],
                                                              "SelectDisplayProps": [Function],
                                                              "aria-label": [Function],
                                                              "autoFocus": [Function],
                                                              "autoWidth": [Function],
                                                              "children": [Function],
                                                              "className": [Function],
                                                              "classes": [Function],
                                                              "defaultValue": [Function],
                                                              "disabled": [Function],
                                                              "displayEmpty": [Function],
                                                              "inputRef": [Function],
                                                              "labelId": [Function],
                                                              "multiple": [Function],
                                                              "name": [Function],
                                                              "onBlur": [Function],
                                                              "onChange": [Function],
                                                              "onClose": [Function],
                                                              "onFocus": [Function],
                                                              "onOpen": [Function],
                                                              "open": [Function],
                                                              "readOnly": [Function],
                                                              "renderValue": [Function],
                                                              "tabIndex": [Function],
                                                              "type": [Function],
                                                              "value": [Function],
                                                              "variant": [Function],
                                                            },
                                                            "render": [Function],
                                                          }
                                                        }
                                                        inputProps={
                                                          Object {
                                                            "IconComponent": Object {
                                                              "$$typeof": Symbol(react.memo),
                                                              "compare": null,
                                                              "type": Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "render": [Function],
                                                              },
                                                            },
                                                            "MenuProps": undefined,
                                                            "SelectDisplayProps": Object {
                                                              "id": undefined,
                                                            },
                                                            "autoWidth": false,
                                                            "children": Array [
                                                              <WithStyles(ForwardRef(MenuItem))
                                                                disabled={true}
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                                value="_default"
                                                              >
                                                                
                                                              </WithStyles(ForwardRef(MenuItem))>,
                                                              Array [
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  value={true}
                                                                >
                                                                  On
                                                                </WithStyles(ForwardRef(MenuItem))>,
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  value={false}
                                                                >
                                                                  Off
                                                                </WithStyles(ForwardRef(MenuItem))>,
                                                              ],
                                                            ],
                                                            "classes": Object {
                                                              "disabled": "Mui-disabled",
                                                              "filled": "MuiSelect-filled",
                                                              "icon": "MuiSelect-icon",
                                                              "iconFilled": "MuiSelect-iconFilled",
                                                              "iconOpen": "MuiSelect-iconOpen",
                                                              "iconOutlined": "MuiSelect-iconOutlined",
                                                              "nativeInput": "MuiSelect-nativeInput",
                                                              "outlined": "MuiSelect-outlined",
                                                              "root": "MuiSelect-root",
                                                              "select": "MuiSelect-select",
                                                              "selectMenu": "MuiSelect-selectMenu",
                                                            },
                                                            "displayEmpty": false,
                                                            "labelId": undefined,
                                                            "multiple": false,
                                                            "onClose": undefined,
                                                            "onOpen": undefined,
                                                            "open": undefined,
                                                            "renderValue": undefined,
                                                            "type": undefined,
                                                            "variant": "standard",
                                                          }
                                                        }
                                                        onChange={[Function]}
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "fontSize": "0.8125rem",
                                                            "width": "120px",
                                                            "zIndex": 1,
                                                          }
                                                        }
                                                        value={true}
                                                      >
                                                        <ForwardRef(Input)
                                                          className=""
                                                          classes={
                                                            Object {
                                                              "colorSecondary": "MuiInput-colorSecondary",
                                                              "disabled": "Mui-disabled",
                                                              "error": "Mui-error",
                                                              "focused": "Mui-focused",
                                                              "formControl": "MuiInput-formControl",
                                                              "fullWidth": "MuiInput-fullWidth",
                                                              "input": "MuiInput-input",
                                                              "inputMarginDense": "MuiInput-inputMarginDense",
                                                              "inputMultiline": "MuiInput-inputMultiline",
                                                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                              "marginDense": "MuiInput-marginDense",
                                                              "multiline": "MuiInput-multiline",
                                                              "root": "MuiInput-root",
                                                              "underline": "MuiInput-underline",
                                                            }
                                                          }
                                                          disabled={false}
                                                          inputComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "propTypes": Object {
                                                                "IconComponent": [Function],
                                                                "MenuProps": [Function],
                                                                "SelectDisplayProps": [Function],
                                                                "aria-label": [Function],
                                                                "autoFocus": [Function],
                                                                "autoWidth": [Function],
                                                                "children": [Function],
                                                                "className": [Function],
                                                                "classes": [Function],
                                                                "defaultValue": [Function],
                                                                "disabled": [Function],
                                                                "displayEmpty": [Function],
                                                                "inputRef": [Function],
                                                                "labelId": [Function],
                                                                "multiple": [Function],
                                                                "name": [Function],
                                                                "onBlur": [Function],
                                                                "onChange": [Function],
                                                                "onClose": [Function],
                                                                "onFocus": [Function],
                                                                "onOpen": [Function],
                                                                "open": [Function],
                                                                "readOnly": [Function],
                                                                "renderValue": [Function],
                                                                "tabIndex": [Function],
                                                                "type": [Function],
                                                                "value": [Function],
                                                                "variant": [Function],
                                                              },
                                                              "render": [Function],
                                                            }
                                                          }
                                                          inputProps={
                                                            Object {
                                                              "IconComponent": Object {
                                                                "$$typeof": Symbol(react.memo),
                                                                "compare": null,
                                                                "type": Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "render": [Function],
                                                                },
                                                              },
                                                              "MenuProps": undefined,
                                                              "SelectDisplayProps": Object {
                                                                "id": undefined,
                                                              },
                                                              "autoWidth": false,
                                                              "children": Array [
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  disabled={true}
                                                                  style={
                                                                    Object {
                                                                      "display": "none",
                                                                    }
                                                                  }
                                                                  value="_default"
                                                                >
                                                                  
                                                                </WithStyles(ForwardRef(MenuItem))>,
                                                                Array [
                                                                  <WithStyles(ForwardRef(MenuItem))
                                                                    value={true}
                                                                  >
                                                                    On
                                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                                  <WithStyles(ForwardRef(MenuItem))
                                                                    value={false}
                                                                  >
                                                                    Off
                                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                                ],
                                                              ],
                                                              "classes": Object {
                                                                "disabled": "Mui-disabled",
                                                                "filled": "MuiSelect-filled",
                                                                "icon": "MuiSelect-icon",
                                                                "iconFilled": "MuiSelect-iconFilled",
                                                                "iconOpen": "MuiSelect-iconOpen",
                                                                "iconOutlined": "MuiSelect-iconOutlined",
                                                                "nativeInput": "MuiSelect-nativeInput",
                                                                "outlined": "MuiSelect-outlined",
                                                                "root": "MuiSelect-root",
                                                                "select": "MuiSelect-select",
                                                                "selectMenu": "MuiSelect-selectMenu",
                                                              },
                                                              "displayEmpty": false,
                                                              "labelId": undefined,
                                                              "multiple": false,
                                                              "onClose": undefined,
                                                              "onOpen": undefined,
                                                              "open": undefined,
                                                              "renderValue": undefined,
                                                              "type": undefined,
                                                              "variant": "standard",
                                                            }
                                                          }
                                                          onChange={[Function]}
                                                          onClick={[Function]}
                                                          style={
                                                            Object {
                                                              "fontSize": "0.8125rem",
                                                              "width": "120px",
                                                              "zIndex": 1,
                                                            }
                                                          }
                                                          value={true}
                                                        >
                                                          <WithStyles(ForwardRef(InputBase))
                                                            className=""
                                                            classes={
                                                              Object {
                                                                "colorSecondary": "MuiInput-colorSecondary",
                                                                "disabled": "Mui-disabled",
                                                                "error": "Mui-error",
                                                                "focused": "Mui-focused",
                                                                "formControl": "MuiInput-formControl",
                                                                "fullWidth": "MuiInput-fullWidth",
                                                                "input": "MuiInput-input",
                                                                "inputMarginDense": "MuiInput-inputMarginDense",
                                                                "inputMultiline": "MuiInput-inputMultiline",
                                                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                "marginDense": "MuiInput-marginDense",
                                                                "multiline": "MuiInput-multiline",
                                                                "root": "MuiInput-root MuiInput-underline",
                                                                "underline": null,
                                                              }
                                                            }
                                                            disabled={false}
                                                            fullWidth={false}
                                                            inputComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "propTypes": Object {
                                                                  "IconComponent": [Function],
                                                                  "MenuProps": [Function],
                                                                  "SelectDisplayProps": [Function],
                                                                  "aria-label": [Function],
                                                                  "autoFocus": [Function],
                                                                  "autoWidth": [Function],
                                                                  "children": [Function],
                                                                  "className": [Function],
                                                                  "classes": [Function],
                                                                  "defaultValue": [Function],
                                                                  "disabled": [Function],
                                                                  "displayEmpty": [Function],
                                                                  "inputRef": [Function],
                                                                  "labelId": [Function],
                                                                  "multiple": [Function],
                                                                  "name": [Function],
                                                                  "onBlur": [Function],
                                                                  "onChange": [Function],
                                                                  "onClose": [Function],
                                                                  "onFocus": [Function],
                                                                  "onOpen": [Function],
                                                                  "open": [Function],
                                                                  "readOnly": [Function],
                                                                  "renderValue": [Function],
                                                                  "tabIndex": [Function],
                                                                  "type": [Function],
                                                                  "value": [Function],
                                                                  "variant": [Function],
                                                                },
                                                                "render": [Function],
                                                              }
                                                            }
                                                            inputProps={
                                                              Object {
                                                                "IconComponent": Object {
                                                                  "$$typeof": Symbol(react.memo),
                                                                  "compare": null,
                                                                  "type": Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "render": [Function],
                                                                  },
                                                                },
                                                                "MenuProps": undefined,
                                                                "SelectDisplayProps": Object {
                                                                  "id": undefined,
                                                                },
                                                                "autoWidth": false,
                                                                "children": Array [
                                                                  <WithStyles(ForwardRef(MenuItem))
                                                                    disabled={true}
                                                                    style={
                                                                      Object {
                                                                        "display": "none",
                                                                      }
                                                                    }
                                                                    value="_default"
                                                                  >
                                                                    
                                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                                  Array [
                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                      value={true}
                                                                    >
                                                                      On
                                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                      value={false}
                                                                    >
                                                                      Off
                                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                                  ],
                                                                ],
                                                                "classes": Object {
                                                                  "disabled": "Mui-disabled",
                                                                  "filled": "MuiSelect-filled",
                                                                  "icon": "MuiSelect-icon",
                                                                  "iconFilled": "MuiSelect-iconFilled",
                                                                  "iconOpen": "MuiSelect-iconOpen",
                                                                  "iconOutlined": "MuiSelect-iconOutlined",
                                                                  "nativeInput": "MuiSelect-nativeInput",
                                                                  "outlined": "MuiSelect-outlined",
                                                                  "root": "MuiSelect-root",
                                                                  "select": "MuiSelect-select",
                                                                  "selectMenu": "MuiSelect-selectMenu",
                                                                },
                                                                "displayEmpty": false,
                                                                "labelId": undefined,
                                                                "multiple": false,
                                                                "onClose": undefined,
                                                                "onOpen": undefined,
                                                                "open": undefined,
                                                                "renderValue": undefined,
                                                                "type": undefined,
                                                                "variant": "standard",
                                                              }
                                                            }
                                                            multiline={false}
                                                            onChange={[Function]}
                                                            onClick={[Function]}
                                                            style={
                                                              Object {
                                                                "fontSize": "0.8125rem",
                                                                "width": "120px",
                                                                "zIndex": 1,
                                                              }
                                                            }
                                                            type="text"
                                                            value={true}
                                                          >
                                                            <ForwardRef(InputBase)
                                                              className=""
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiInputBase-adornedEnd",
                                                                  "adornedStart": "MuiInputBase-adornedStart",
                                                                  "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                  "disabled": "Mui-disabled Mui-disabled",
                                                                  "error": "Mui-error Mui-error",
                                                                  "focused": "Mui-focused Mui-focused",
                                                                  "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                  "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                  "input": "MuiInputBase-input MuiInput-input",
                                                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                  "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                  "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                  "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                  "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                }
                                                              }
                                                              disabled={false}
                                                              fullWidth={false}
                                                              inputComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "propTypes": Object {
                                                                    "IconComponent": [Function],
                                                                    "MenuProps": [Function],
                                                                    "SelectDisplayProps": [Function],
                                                                    "aria-label": [Function],
                                                                    "autoFocus": [Function],
                                                                    "autoWidth": [Function],
                                                                    "children": [Function],
                                                                    "className": [Function],
                                                                    "classes": [Function],
                                                                    "defaultValue": [Function],
                                                                    "disabled": [Function],
                                                                    "displayEmpty": [Function],
                                                                    "inputRef": [Function],
                                                                    "labelId": [Function],
                                                                    "multiple": [Function],
                                                                    "name": [Function],
                                                                    "onBlur": [Function],
                                                                    "onChange": [Function],
                                                                    "onClose": [Function],
                                                                    "onFocus": [Function],
                                                                    "onOpen": [Function],
                                                                    "open": [Function],
                                                                    "readOnly": [Function],
                                                                    "renderValue": [Function],
                                                                    "tabIndex": [Function],
                                                                    "type": [Function],
                                                                    "value": [Function],
                                                                    "variant": [Function],
                                                                  },
                                                                  "render": [Function],
                                                                }
                                                              }
                                                              inputProps={
                                                                Object {
                                                                  "IconComponent": Object {
                                                                    "$$typeof": Symbol(react.memo),
                                                                    "compare": null,
                                                                    "type": Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "render": [Function],
                                                                    },
                                                                  },
                                                                  "MenuProps": undefined,
                                                                  "SelectDisplayProps": Object {
                                                                    "id": undefined,
                                                                  },
                                                                  "autoWidth": false,
                                                                  "children": Array [
                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                      disabled={true}
                                                                      style={
                                                                        Object {
                                                                          "display": "none",
                                                                        }
                                                                      }
                                                                      value="_default"
                                                                    >
                                                                      
                                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                                    Array [
                                                                      <WithStyles(ForwardRef(MenuItem))
                                                                        value={true}
                                                                      >
                                                                        On
                                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                                      <WithStyles(ForwardRef(MenuItem))
                                                                        value={false}
                                                                      >
                                                                        Off
                                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                                    ],
                                                                  ],
                                                                  "classes": Object {
                                                                    "disabled": "Mui-disabled",
                                                                    "filled": "MuiSelect-filled",
                                                                    "icon": "MuiSelect-icon",
                                                                    "iconFilled": "MuiSelect-iconFilled",
                                                                    "iconOpen": "MuiSelect-iconOpen",
                                                                    "iconOutlined": "MuiSelect-iconOutlined",
                                                                    "nativeInput": "MuiSelect-nativeInput",
                                                                    "outlined": "MuiSelect-outlined",
                                                                    "root": "MuiSelect-root",
                                                                    "select": "MuiSelect-select",
                                                                    "selectMenu": "MuiSelect-selectMenu",
                                                                  },
                                                                  "displayEmpty": false,
                                                                  "labelId": undefined,
                                                                  "multiple": false,
                                                                  "onClose": undefined,
                                                                  "onOpen": undefined,
                                                                  "open": undefined,
                                                                  "renderValue": undefined,
                                                                  "type": undefined,
                                                                  "variant": "standard",
                                                                }
                                                              }
                                                              multiline={false}
                                                              onChange={[Function]}
                                                              onClick={[Function]}
                                                              style={
                                                                Object {
                                                                  "fontSize": "0.8125rem",
                                                                  "width": "120px",
                                                                  "zIndex": 1,
                                                                }
                                                              }
                                                              type="text"
                                                              value={true}
                                                            >
                                                              <div
                                                                className="MuiInputBase-root MuiInput-root MuiInput-underline"
                                                                onClick={[Function]}
                                                                style={
                                                                  Object {
                                                                    "fontSize": "0.8125rem",
                                                                    "width": "120px",
                                                                    "zIndex": 1,
                                                                  }
                                                                }
                                                              >
                                                                <ForwardRef(SelectInput)
                                                                  IconComponent={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.memo),
                                                                      "compare": null,
                                                                      "type": Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "render": [Function],
                                                                      },
                                                                    }
                                                                  }
                                                                  SelectDisplayProps={
                                                                    Object {
                                                                      "id": undefined,
                                                                    }
                                                                  }
                                                                  autoWidth={false}
                                                                  className="MuiInputBase-input MuiInput-input"
                                                                  classes={
                                                                    Object {
                                                                      "disabled": "Mui-disabled",
                                                                      "filled": "MuiSelect-filled",
                                                                      "icon": "MuiSelect-icon",
                                                                      "iconFilled": "MuiSelect-iconFilled",
                                                                      "iconOpen": "MuiSelect-iconOpen",
                                                                      "iconOutlined": "MuiSelect-iconOutlined",
                                                                      "nativeInput": "MuiSelect-nativeInput",
                                                                      "outlined": "MuiSelect-outlined",
                                                                      "root": "MuiSelect-root",
                                                                      "select": "MuiSelect-select",
                                                                      "selectMenu": "MuiSelect-selectMenu",
                                                                    }
                                                                  }
                                                                  disabled={false}
                                                                  displayEmpty={false}
                                                                  inputRef={[Function]}
                                                                  multiple={false}
                                                                  onAnimationStart={[Function]}
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  onFocus={[Function]}
                                                                  value={true}
                                                                  variant="standard"
                                                                >
                                                                  <div
                                                                    aria-haspopup="listbox"
                                                                    className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                    onBlur={[Function]}
                                                                    onFocus={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onMouseDown={[Function]}
                                                                    role="button"
                                                                    tabIndex={0}
                                                                  >
                                                                    On
                                                                  </div>
                                                                  <input
                                                                    aria-hidden={true}
                                                                    className="MuiSelect-nativeInput"
                                                                    onAnimationStart={[Function]}
                                                                    onChange={[Function]}
                                                                    tabIndex={-1}
                                                                    value={true}
                                                                  />
                                                                  <ForwardRef(ArrowDropDownIcon)
                                                                    className="MuiSelect-icon"
                                                                  >
                                                                    <WithStyles(ForwardRef(SvgIcon))
                                                                      className="MuiSelect-icon"
                                                                    >
                                                                      <ForwardRef(SvgIcon)
                                                                        className="MuiSelect-icon"
                                                                        classes={
                                                                          Object {
                                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                            "colorError": "MuiSvgIcon-colorError",
                                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                            "root": "MuiSvgIcon-root",
                                                                          }
                                                                        }
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          className="MuiSvgIcon-root MuiSelect-icon"
                                                                          focusable="false"
                                                                          viewBox="0 0 24 24"
                                                                        >
                                                                          <path
                                                                            d="M7 10l5 5 5-5z"
                                                                          />
                                                                        </svg>
                                                                      </ForwardRef(SvgIcon)>
                                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                                  </ForwardRef(ArrowDropDownIcon)>
                                                                  <WithStyles(ForwardRef(Menu))
                                                                    MenuListProps={
                                                                      Object {
                                                                        "aria-labelledby": undefined,
                                                                        "disableListWrap": true,
                                                                        "role": "listbox",
                                                                      }
                                                                    }
                                                                    PaperProps={
                                                                      Object {
                                                                        "style": Object {
                                                                          "minWidth": undefined,
                                                                        },
                                                                      }
                                                                    }
                                                                    anchorEl={
                                                                      <div
                                                                        aria-haspopup="listbox"
                                                                        class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                        role="button"
                                                                        tabindex="0"
                                                                      >
                                                                        On
                                                                      </div>
                                                                    }
                                                                    id="menu-"
                                                                    onClose={[Function]}
                                                                    open={false}
                                                                  >
                                                                    <ForwardRef(Menu)
                                                                      MenuListProps={
                                                                        Object {
                                                                          "aria-labelledby": undefined,
                                                                          "disableListWrap": true,
                                                                          "role": "listbox",
                                                                        }
                                                                      }
                                                                      PaperProps={
                                                                        Object {
                                                                          "style": Object {
                                                                            "minWidth": undefined,
                                                                          },
                                                                        }
                                                                      }
                                                                      anchorEl={
                                                                        <div
                                                                          aria-haspopup="listbox"
                                                                          class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                          role="button"
                                                                          tabindex="0"
                                                                        >
                                                                          On
                                                                        </div>
                                                                      }
                                                                      classes={
                                                                        Object {
                                                                          "list": "MuiMenu-list",
                                                                          "paper": "MuiMenu-paper",
                                                                        }
                                                                      }
                                                                      id="menu-"
                                                                      onClose={[Function]}
                                                                      open={false}
                                                                    >
                                                                      <WithStyles(ForwardRef(Popover))
                                                                        PaperProps={
                                                                          Object {
                                                                            "classes": Object {
                                                                              "root": "MuiMenu-paper",
                                                                            },
                                                                            "style": Object {
                                                                              "minWidth": undefined,
                                                                            },
                                                                          }
                                                                        }
                                                                        anchorEl={
                                                                          <div
                                                                            aria-haspopup="listbox"
                                                                            class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                            role="button"
                                                                            tabindex="0"
                                                                          >
                                                                            On
                                                                          </div>
                                                                        }
                                                                        anchorOrigin={
                                                                          Object {
                                                                            "horizontal": "left",
                                                                            "vertical": "top",
                                                                          }
                                                                        }
                                                                        getContentAnchorEl={[Function]}
                                                                        id="menu-"
                                                                        onClose={[Function]}
                                                                        onEntering={[Function]}
                                                                        open={false}
                                                                        transformOrigin={
                                                                          Object {
                                                                            "horizontal": "left",
                                                                            "vertical": "top",
                                                                          }
                                                                        }
                                                                        transitionDuration="auto"
                                                                      >
                                                                        <ForwardRef(Popover)
                                                                          PaperProps={
                                                                            Object {
                                                                              "classes": Object {
                                                                                "root": "MuiMenu-paper",
                                                                              },
                                                                              "style": Object {
                                                                                "minWidth": undefined,
                                                                              },
                                                                            }
                                                                          }
                                                                          anchorEl={
                                                                            <div
                                                                              aria-haspopup="listbox"
                                                                              class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                              role="button"
                                                                              tabindex="0"
                                                                            >
                                                                              On
                                                                            </div>
                                                                          }
                                                                          anchorOrigin={
                                                                            Object {
                                                                              "horizontal": "left",
                                                                              "vertical": "top",
                                                                            }
                                                                          }
                                                                          classes={
                                                                            Object {
                                                                              "paper": "MuiPopover-paper",
                                                                              "root": "MuiPopover-root",
                                                                            }
                                                                          }
                                                                          getContentAnchorEl={[Function]}
                                                                          id="menu-"
                                                                          onClose={[Function]}
                                                                          onEntering={[Function]}
                                                                          open={false}
                                                                          transformOrigin={
                                                                            Object {
                                                                              "horizontal": "left",
                                                                              "vertical": "top",
                                                                            }
                                                                          }
                                                                          transitionDuration="auto"
                                                                        >
                                                                          <ForwardRef(Modal)
                                                                            BackdropProps={
                                                                              Object {
                                                                                "invisible": true,
                                                                              }
                                                                            }
                                                                            className="MuiPopover-root"
                                                                            container={<body />}
                                                                            id="menu-"
                                                                            onClose={[Function]}
                                                                            open={false}
                                                                          />
                                                                        </ForwardRef(Popover)>
                                                                      </WithStyles(ForwardRef(Popover))>
                                                                    </ForwardRef(Menu)>
                                                                  </WithStyles(ForwardRef(Menu))>
                                                                </ForwardRef(SelectInput)>
                                                              </div>
                                                            </ForwardRef(InputBase)>
                                                          </WithStyles(ForwardRef(InputBase))>
                                                        </ForwardRef(Input)>
                                                      </WithStyles(ForwardRef(Input))>
                                                    </ForwardRef(Select)>
                                                  </WithStyles(ForwardRef(Select))>
                                                   
                                                </span>
                                              </SelectInput>
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                        <WithStyles(ForwardRef(TableCell))
                                          key="settingsFrom"
                                          onClick={[Function]}
                                          style={Object {}}
                                        >
                                          <ForwardRef(TableCell)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            onClick={[Function]}
                                            style={Object {}}
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body"
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              <ColorHighlighter
                                                data={
                                                  Object {
                                                    "catagory": "CAR Government Regulation",
                                                    "id": 3,
                                                    "name": "Minimum Rest at Home Base (Minimum Rest at Home Base)",
                                                    "settingsFrom": "Baseline Rules",
                                                    "state": true,
                                                    "type": "Rest RUle",
                                                  }
                                                }
                                                header="isEdited"
                                                highlighter={[Function]}
                                                style={
                                                  Object {
                                                    "color": "#FF650C",
                                                  }
                                                }
                                                value="Baseline Rules"
                                              >
                                                <span
                                                  style={Object {}}
                                                >
                                                  Baseline Rules
                                                </span>
                                              </ColorHighlighter>
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                        <WithStyles(ForwardRef(TableCell))
                                          key="catagory"
                                          onClick={[Function]}
                                          style={Object {}}
                                        >
                                          <ForwardRef(TableCell)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            onClick={[Function]}
                                            style={Object {}}
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body"
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              CAR Government Regulation
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                        <WithStyles(ForwardRef(TableCell))
                                          key="type"
                                          onClick={[Function]}
                                          style={Object {}}
                                        >
                                          <ForwardRef(TableCell)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            onClick={[Function]}
                                            style={Object {}}
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body"
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              Rest RUle
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                      </tr>
                                    </ForwardRef(TableRow)>
                                  </WithStyles(ForwardRef(TableRow))>
                                  <WithStyles(ForwardRef(TableRow))>
                                    <ForwardRef(TableRow)
                                      classes={
                                        Object {
                                          "footer": "MuiTableRow-footer",
                                          "head": "MuiTableRow-head",
                                          "hover": "MuiTableRow-hover",
                                          "root": "MuiTableRow-root",
                                          "selected": "Mui-selected",
                                        }
                                      }
                                    >
                                      <tr
                                        className="MuiTableRow-root"
                                        role={null}
                                      >
                                        <WithStyles(ForwardRef(TableCell))
                                          className="no-border"
                                          colSpan={6}
                                          style={
                                            Object {
                                              "padding": 0,
                                            }
                                          }
                                        >
                                          <ForwardRef(TableCell)
                                            className="no-border"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            colSpan={6}
                                            style={
                                              Object {
                                                "padding": 0,
                                              }
                                            }
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body no-border"
                                              colSpan={6}
                                              style={
                                                Object {
                                                  "padding": 0,
                                                }
                                              }
                                            >
                                              <WithStyles(ForwardRef(Collapse))
                                                in={false}
                                                timeout="auto"
                                                unmountOnExit={true}
                                              >
                                                <ForwardRef(Collapse)
                                                  classes={
                                                    Object {
                                                      "container": "MuiCollapse-container",
                                                      "entered": "MuiCollapse-entered",
                                                      "hidden": "MuiCollapse-hidden",
                                                      "wrapper": "MuiCollapse-wrapper",
                                                      "wrapperInner": "MuiCollapse-wrapperInner",
                                                    }
                                                  }
                                                  in={false}
                                                  timeout="auto"
                                                  unmountOnExit={true}
                                                >
                                                  <Transition
                                                    addEndListener={[Function]}
                                                    appear={false}
                                                    enter={true}
                                                    exit={true}
                                                    in={false}
                                                    mountOnEnter={false}
                                                    onEnter={[Function]}
                                                    onEntered={[Function]}
                                                    onEntering={[Function]}
                                                    onExit={[Function]}
                                                    onExited={[Function]}
                                                    onExiting={[Function]}
                                                    timeout={null}
                                                    unmountOnExit={true}
                                                  />
                                                </ForwardRef(Collapse)>
                                              </WithStyles(ForwardRef(Collapse))>
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                      </tr>
                                    </ForwardRef(TableRow)>
                                  </WithStyles(ForwardRef(TableRow))>
                                  <WithStyles(ForwardRef(TableRow))
                                    classes={
                                      Object {
                                        "hover": "hover",
                                        "root": "MuiTableRow",
                                        "selected": "selected",
                                      }
                                    }
                                    hover={true}
                                    id="tablerow4"
                                    selected={false}
                                  >
                                    <ForwardRef(TableRow)
                                      classes={
                                        Object {
                                          "footer": "MuiTableRow-footer",
                                          "head": "MuiTableRow-head",
                                          "hover": "MuiTableRow-hover hover",
                                          "root": "MuiTableRow-root MuiTableRow",
                                          "selected": "Mui-selected selected",
                                        }
                                      }
                                      hover={true}
                                      id="tablerow4"
                                      selected={false}
                                    >
                                      <tr
                                        className="MuiTableRow-root MuiTableRow MuiTableRow-hover hover"
                                        id="tablerow4"
                                        role={null}
                                      >
                                        <WithStyles(ForwardRef(TableCell))
                                          style={
                                            Object {
                                              "height": 40,
                                              "paddingLeft": "18px",
                                              "paddingRight": "0px",
                                              "width": 40,
                                            }
                                          }
                                        >
                                          <ForwardRef(TableCell)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            style={
                                              Object {
                                                "height": 40,
                                                "paddingLeft": "18px",
                                                "paddingRight": "0px",
                                                "width": 40,
                                              }
                                            }
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body"
                                              style={
                                                Object {
                                                  "height": 40,
                                                  "paddingLeft": "18px",
                                                  "paddingRight": "0px",
                                                  "width": 40,
                                                }
                                              }
                                            >
                                              <WithStyles(ForwardRef(Checkbox))
                                                checked={false}
                                                color="primary"
                                                onClick={[Function]}
                                                style={
                                                  Object {
                                                    "height": 20,
                                                    "width": 20,
                                                  }
                                                }
                                              >
                                                <ForwardRef(Checkbox)
                                                  checked={false}
                                                  classes={
                                                    Object {
                                                      "checked": "Mui-checked",
                                                      "colorPrimary": "MuiCheckbox-colorPrimary",
                                                      "colorSecondary": "MuiCheckbox-colorSecondary",
                                                      "disabled": "Mui-disabled",
                                                      "indeterminate": "MuiCheckbox-indeterminate",
                                                      "root": "MuiCheckbox-root",
                                                    }
                                                  }
                                                  color="primary"
                                                  onClick={[Function]}
                                                  style={
                                                    Object {
                                                      "height": 20,
                                                      "width": 20,
                                                    }
                                                  }
                                                >
                                                  <WithStyles(ForwardRef(SwitchBase))
                                                    checked={false}
                                                    checkedIcon={<Memo />}
                                                    classes={
                                                      Object {
                                                        "checked": "Mui-checked",
                                                        "disabled": "Mui-disabled",
                                                        "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                                                      }
                                                    }
                                                    color="primary"
                                                    icon={<Memo />}
                                                    inputProps={
                                                      Object {
                                                        "data-indeterminate": false,
                                                      }
                                                    }
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "height": 20,
                                                        "width": 20,
                                                      }
                                                    }
                                                    type="checkbox"
                                                  >
                                                    <ForwardRef(SwitchBase)
                                                      checked={false}
                                                      checkedIcon={<Memo />}
                                                      classes={
                                                        Object {
                                                          "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                                                          "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                                                          "input": "PrivateSwitchBase-input-4",
                                                          "root": "PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary",
                                                        }
                                                      }
                                                      color="primary"
                                                      icon={<Memo />}
                                                      inputProps={
                                                        Object {
                                                          "data-indeterminate": false,
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                      style={
                                                        Object {
                                                          "height": 20,
                                                          "width": 20,
                                                        }
                                                      }
                                                      type="checkbox"
                                                    >
                                                      <WithStyles(ForwardRef(IconButton))
                                                        className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary"
                                                        color="primary"
                                                        component="span"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onFocus={[Function]}
                                                        style={
                                                          Object {
                                                            "height": 20,
                                                            "width": 20,
                                                          }
                                                        }
                                                        tabIndex={null}
                                                      >
                                                        <ForwardRef(IconButton)
                                                          className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary"
                                                          classes={
                                                            Object {
                                                              "colorInherit": "MuiIconButton-colorInherit",
                                                              "colorPrimary": "MuiIconButton-colorPrimary",
                                                              "colorSecondary": "MuiIconButton-colorSecondary",
                                                              "disabled": "Mui-disabled",
                                                              "edgeEnd": "MuiIconButton-edgeEnd",
                                                              "edgeStart": "MuiIconButton-edgeStart",
                                                              "label": "MuiIconButton-label",
                                                              "root": "MuiIconButton-root",
                                                              "sizeSmall": "MuiIconButton-sizeSmall",
                                                            }
                                                          }
                                                          color="primary"
                                                          component="span"
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onFocus={[Function]}
                                                          style={
                                                            Object {
                                                              "height": 20,
                                                              "width": 20,
                                                            }
                                                          }
                                                          tabIndex={null}
                                                        >
                                                          <WithStyles(ForwardRef(ButtonBase))
                                                            centerRipple={true}
                                                            className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                            component="span"
                                                            disabled={false}
                                                            focusRipple={true}
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onFocus={[Function]}
                                                            style={
                                                              Object {
                                                                "height": 20,
                                                                "width": 20,
                                                              }
                                                            }
                                                            tabIndex={null}
                                                          >
                                                            <ForwardRef(ButtonBase)
                                                              centerRipple={true}
                                                              className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                              classes={
                                                                Object {
                                                                  "disabled": "Mui-disabled",
                                                                  "focusVisible": "Mui-focusVisible",
                                                                  "root": "MuiButtonBase-root",
                                                                }
                                                              }
                                                              component="span"
                                                              disabled={false}
                                                              focusRipple={true}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onFocus={[Function]}
                                                              style={
                                                                Object {
                                                                  "height": 20,
                                                                  "width": 20,
                                                                }
                                                              }
                                                              tabIndex={null}
                                                            >
                                                              <span
                                                                aria-disabled={false}
                                                                className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                                onBlur={[Function]}
                                                                onClick={[Function]}
                                                                onDragLeave={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseDown={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                onTouchMove={[Function]}
                                                                onTouchStart={[Function]}
                                                                style={
                                                                  Object {
                                                                    "height": 20,
                                                                    "width": 20,
                                                                  }
                                                                }
                                                                tabIndex={null}
                                                              >
                                                                <span
                                                                  className="MuiIconButton-label"
                                                                >
                                                                  <input
                                                                    checked={false}
                                                                    className="PrivateSwitchBase-input-4"
                                                                    data-indeterminate={false}
                                                                    onChange={[Function]}
                                                                    type="checkbox"
                                                                  />
                                                                  <ForwardRef(CheckBoxOutlineBlankIcon)>
                                                                    <WithStyles(ForwardRef(SvgIcon))>
                                                                      <ForwardRef(SvgIcon)
                                                                        classes={
                                                                          Object {
                                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                            "colorError": "MuiSvgIcon-colorError",
                                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                            "root": "MuiSvgIcon-root",
                                                                          }
                                                                        }
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          className="MuiSvgIcon-root"
                                                                          focusable="false"
                                                                          viewBox="0 0 24 24"
                                                                        >
                                                                          <path
                                                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                                          />
                                                                        </svg>
                                                                      </ForwardRef(SvgIcon)>
                                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                                  </ForwardRef(CheckBoxOutlineBlankIcon)>
                                                                </span>
                                                                <WithStyles(memo)
                                                                  center={true}
                                                                >
                                                                  <ForwardRef(TouchRipple)
                                                                    center={true}
                                                                    classes={
                                                                      Object {
                                                                        "child": "MuiTouchRipple-child",
                                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                                        "ripple": "MuiTouchRipple-ripple",
                                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                        "root": "MuiTouchRipple-root",
                                                                      }
                                                                    }
                                                                  >
                                                                    <span
                                                                      className="MuiTouchRipple-root"
                                                                    >
                                                                      <TransitionGroup
                                                                        childFactory={[Function]}
                                                                        component={null}
                                                                        exit={true}
                                                                      />
                                                                    </span>
                                                                  </ForwardRef(TouchRipple)>
                                                                </WithStyles(memo)>
                                                              </span>
                                                            </ForwardRef(ButtonBase)>
                                                          </WithStyles(ForwardRef(ButtonBase))>
                                                        </ForwardRef(IconButton)>
                                                      </WithStyles(ForwardRef(IconButton))>
                                                    </ForwardRef(SwitchBase)>
                                                  </WithStyles(ForwardRef(SwitchBase))>
                                                </ForwardRef(Checkbox)>
                                              </WithStyles(ForwardRef(Checkbox))>
                                              <WithStyles(ForwardRef(IconButton))
                                                aria-label="expand row"
                                                onClick={[Function]}
                                                size="small"
                                                style={
                                                  Object {
                                                    "marginLeft": "10px",
                                                  }
                                                }
                                              >
                                                <ForwardRef(IconButton)
                                                  aria-label="expand row"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiIconButton-colorInherit",
                                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                                      "disabled": "Mui-disabled",
                                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                                      "edgeStart": "MuiIconButton-edgeStart",
                                                      "label": "MuiIconButton-label",
                                                      "root": "MuiIconButton-root",
                                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                                    }
                                                  }
                                                  onClick={[Function]}
                                                  size="small"
                                                  style={
                                                    Object {
                                                      "marginLeft": "10px",
                                                    }
                                                  }
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    aria-label="expand row"
                                                    centerRipple={true}
                                                    className="MuiIconButton-root MuiIconButton-sizeSmall"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "marginLeft": "10px",
                                                      }
                                                    }
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      aria-label="expand row"
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiIconButton-sizeSmall"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      disabled={false}
                                                      focusRipple={true}
                                                      onClick={[Function]}
                                                      style={
                                                        Object {
                                                          "marginLeft": "10px",
                                                        }
                                                      }
                                                    >
                                                      <button
                                                        aria-label="expand row"
                                                        className="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                                        disabled={false}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        style={
                                                          Object {
                                                            "marginLeft": "10px",
                                                          }
                                                        }
                                                        tabIndex={0}
                                                        type="button"
                                                      >
                                                        <span
                                                          className="MuiIconButton-label"
                                                        >
                                                          <ForwardRef(KeyboardArrowDownIcon)>
                                                            <WithStyles(ForwardRef(SvgIcon))>
                                                              <ForwardRef(SvgIcon)
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root"
                                                                  focusable="false"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef(KeyboardArrowDownIcon)>
                                                        </span>
                                                        <WithStyles(memo)
                                                          center={true}
                                                        >
                                                          <ForwardRef(TouchRipple)
                                                            center={true}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </ForwardRef(TouchRipple)>
                                                        </WithStyles(memo)>
                                                      </button>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(IconButton)>
                                              </WithStyles(ForwardRef(IconButton))>
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                        <WithStyles(ForwardRef(TableCell))
                                          key="name"
                                          onClick={[Function]}
                                          style={Object {}}
                                        >
                                          <ForwardRef(TableCell)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            onClick={[Function]}
                                            style={Object {}}
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body"
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              <OverflowTip
                                                content="Earily Duty"
                                                maxWidth="200px"
                                                tooltipStyle={
                                                  Object {
                                                    "maxWidth": "235px",
                                                  }
                                                }
                                                value="Earily Duty"
                                              >
                                                <SierraMuiTooltip
                                                  classes={
                                                    Object {
                                                      "popper": "ellipse-zoom-popper",
                                                    }
                                                  }
                                                  disableHoverListener={true}
                                                  interactive={true}
                                                  style={
                                                    Object {
                                                      "maxWidth": "235px",
                                                    }
                                                  }
                                                  title="Earily Duty"
                                                >
                                                  <WithStyles(ForwardRef(Tooltip))
                                                    arrow={true}
                                                    classes={
                                                      Object {
                                                        "popper": "ellipse-zoom-popper",
                                                      }
                                                    }
                                                    disableHoverListener={true}
                                                    interactive={true}
                                                    style={
                                                      Object {
                                                        "maxWidth": "235px",
                                                      }
                                                    }
                                                    title="Earily Duty"
                                                  >
                                                    <ForwardRef(Tooltip)
                                                      arrow={true}
                                                      classes={
                                                        Object {
                                                          "arrow": "MuiTooltip-arrow",
                                                          "popper": "MuiTooltip-popper ellipse-zoom-popper",
                                                          "popperArrow": "MuiTooltip-popperArrow",
                                                          "popperInteractive": "MuiTooltip-popperInteractive",
                                                          "tooltip": "MuiTooltip-tooltip",
                                                          "tooltipArrow": "MuiTooltip-tooltipArrow",
                                                          "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                                          "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                                          "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                                          "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                                          "touch": "MuiTooltip-touch",
                                                        }
                                                      }
                                                      disableHoverListener={true}
                                                      interactive={true}
                                                      style={
                                                        Object {
                                                          "maxWidth": "235px",
                                                        }
                                                      }
                                                      title="Earily Duty"
                                                    >
                                                      <div
                                                        aria-describedby={null}
                                                        className=""
                                                        onBlur={[Function]}
                                                        onFocus={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchStart={[Function]}
                                                        style={
                                                          Object {
                                                            "maxWidth": "200px",
                                                            "overflow": "hidden",
                                                            "textOverflow": "ellipsis",
                                                            "whiteSpace": "nowrap",
                                                          }
                                                        }
                                                        title={null}
                                                      >
                                                        Earily Duty
                                                      </div>
                                                      <ForwardRef(Popper)
                                                        anchorEl={
                                                          <div
                                                            class=""
                                                            style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 200px;"
                                                          >
                                                            Earily Duty
                                                          </div>
                                                        }
                                                        className="MuiTooltip-popper ellipse-zoom-popper MuiTooltip-popperInteractive MuiTooltip-popperArrow"
                                                        id={null}
                                                        onBlur={[Function]}
                                                        onFocus={[Function]}
                                                        open={false}
                                                        placement="bottom"
                                                        popperOptions={
                                                          Object {
                                                            "modifiers": Object {
                                                              "arrow": Object {
                                                                "element": null,
                                                                "enabled": false,
                                                              },
                                                            },
                                                          }
                                                        }
                                                        transition={true}
                                                      />
                                                    </ForwardRef(Tooltip)>
                                                  </WithStyles(ForwardRef(Tooltip))>
                                                </SierraMuiTooltip>
                                              </OverflowTip>
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                        <WithStyles(ForwardRef(TableCell))
                                          key="state"
                                          onClick={[Function]}
                                          style={
                                            Object {
                                              "width": "120px",
                                            }
                                          }
                                        >
                                          <ForwardRef(TableCell)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "width": "120px",
                                              }
                                            }
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body"
                                              onClick={[Function]}
                                              style={
                                                Object {
                                                  "width": "120px",
                                                }
                                              }
                                            >
                                              <SelectInput
                                                data={
                                                  Object {
                                                    "catagory": "OverSeas Cabin Contract",
                                                    "id": 4,
                                                    "isEdited": true,
                                                    "name": "Earily Duty",
                                                    "settingsFrom": "Widebody",
                                                    "state": false,
                                                    "type": "Cost RUle",
                                                  }
                                                }
                                                defaultValue="_default"
                                                enableReset={false}
                                                error={false}
                                                getTooltipContent={[Function]}
                                                handleDisable={[Function]}
                                                handleReset={[Function]}
                                                handleTooltipDisable={[Function]}
                                                items={
                                                  Array [
                                                    Object {
                                                      "display": "On",
                                                      "value": true,
                                                    },
                                                    Object {
                                                      "display": "Off",
                                                      "value": false,
                                                    },
                                                  ]
                                                }
                                                onChange={[Function]}
                                                placeholder=""
                                                removeOverlay={[Function]}
                                                style={
                                                  Object {
                                                    "fontSize": "0.8125rem",
                                                    "width": "120px",
                                                  }
                                                }
                                                value={false}
                                              >
                                                <span
                                                  className=""
                                                >
                                                   
                                                  <WithStyles(ForwardRef(Select))
                                                    className=""
                                                    disabled={false}
                                                    onChange={[Function]}
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "fontSize": "0.8125rem",
                                                        "width": "120px",
                                                        "zIndex": 1,
                                                      }
                                                    }
                                                    value={false}
                                                  >
                                                    <ForwardRef(Select)
                                                      className=""
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "filled": "MuiSelect-filled",
                                                          "icon": "MuiSelect-icon",
                                                          "iconFilled": "MuiSelect-iconFilled",
                                                          "iconOpen": "MuiSelect-iconOpen",
                                                          "iconOutlined": "MuiSelect-iconOutlined",
                                                          "nativeInput": "MuiSelect-nativeInput",
                                                          "outlined": "MuiSelect-outlined",
                                                          "root": "MuiSelect-root",
                                                          "select": "MuiSelect-select",
                                                          "selectMenu": "MuiSelect-selectMenu",
                                                        }
                                                      }
                                                      disabled={false}
                                                      onChange={[Function]}
                                                      onClick={[Function]}
                                                      style={
                                                        Object {
                                                          "fontSize": "0.8125rem",
                                                          "width": "120px",
                                                          "zIndex": 1,
                                                        }
                                                      }
                                                      value={false}
                                                    >
                                                      <WithStyles(ForwardRef(Input))
                                                        className=""
                                                        disabled={false}
                                                        inputComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "propTypes": Object {
                                                              "IconComponent": [Function],
                                                              "MenuProps": [Function],
                                                              "SelectDisplayProps": [Function],
                                                              "aria-label": [Function],
                                                              "autoFocus": [Function],
                                                              "autoWidth": [Function],
                                                              "children": [Function],
                                                              "className": [Function],
                                                              "classes": [Function],
                                                              "defaultValue": [Function],
                                                              "disabled": [Function],
                                                              "displayEmpty": [Function],
                                                              "inputRef": [Function],
                                                              "labelId": [Function],
                                                              "multiple": [Function],
                                                              "name": [Function],
                                                              "onBlur": [Function],
                                                              "onChange": [Function],
                                                              "onClose": [Function],
                                                              "onFocus": [Function],
                                                              "onOpen": [Function],
                                                              "open": [Function],
                                                              "readOnly": [Function],
                                                              "renderValue": [Function],
                                                              "tabIndex": [Function],
                                                              "type": [Function],
                                                              "value": [Function],
                                                              "variant": [Function],
                                                            },
                                                            "render": [Function],
                                                          }
                                                        }
                                                        inputProps={
                                                          Object {
                                                            "IconComponent": Object {
                                                              "$$typeof": Symbol(react.memo),
                                                              "compare": null,
                                                              "type": Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "render": [Function],
                                                              },
                                                            },
                                                            "MenuProps": undefined,
                                                            "SelectDisplayProps": Object {
                                                              "id": undefined,
                                                            },
                                                            "autoWidth": false,
                                                            "children": Array [
                                                              <WithStyles(ForwardRef(MenuItem))
                                                                disabled={true}
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                                value="_default"
                                                              >
                                                                
                                                              </WithStyles(ForwardRef(MenuItem))>,
                                                              Array [
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  value={true}
                                                                >
                                                                  On
                                                                </WithStyles(ForwardRef(MenuItem))>,
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  value={false}
                                                                >
                                                                  Off
                                                                </WithStyles(ForwardRef(MenuItem))>,
                                                              ],
                                                            ],
                                                            "classes": Object {
                                                              "disabled": "Mui-disabled",
                                                              "filled": "MuiSelect-filled",
                                                              "icon": "MuiSelect-icon",
                                                              "iconFilled": "MuiSelect-iconFilled",
                                                              "iconOpen": "MuiSelect-iconOpen",
                                                              "iconOutlined": "MuiSelect-iconOutlined",
                                                              "nativeInput": "MuiSelect-nativeInput",
                                                              "outlined": "MuiSelect-outlined",
                                                              "root": "MuiSelect-root",
                                                              "select": "MuiSelect-select",
                                                              "selectMenu": "MuiSelect-selectMenu",
                                                            },
                                                            "displayEmpty": false,
                                                            "labelId": undefined,
                                                            "multiple": false,
                                                            "onClose": undefined,
                                                            "onOpen": undefined,
                                                            "open": undefined,
                                                            "renderValue": undefined,
                                                            "type": undefined,
                                                            "variant": "standard",
                                                          }
                                                        }
                                                        onChange={[Function]}
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "fontSize": "0.8125rem",
                                                            "width": "120px",
                                                            "zIndex": 1,
                                                          }
                                                        }
                                                        value={false}
                                                      >
                                                        <ForwardRef(Input)
                                                          className=""
                                                          classes={
                                                            Object {
                                                              "colorSecondary": "MuiInput-colorSecondary",
                                                              "disabled": "Mui-disabled",
                                                              "error": "Mui-error",
                                                              "focused": "Mui-focused",
                                                              "formControl": "MuiInput-formControl",
                                                              "fullWidth": "MuiInput-fullWidth",
                                                              "input": "MuiInput-input",
                                                              "inputMarginDense": "MuiInput-inputMarginDense",
                                                              "inputMultiline": "MuiInput-inputMultiline",
                                                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                              "marginDense": "MuiInput-marginDense",
                                                              "multiline": "MuiInput-multiline",
                                                              "root": "MuiInput-root",
                                                              "underline": "MuiInput-underline",
                                                            }
                                                          }
                                                          disabled={false}
                                                          inputComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "propTypes": Object {
                                                                "IconComponent": [Function],
                                                                "MenuProps": [Function],
                                                                "SelectDisplayProps": [Function],
                                                                "aria-label": [Function],
                                                                "autoFocus": [Function],
                                                                "autoWidth": [Function],
                                                                "children": [Function],
                                                                "className": [Function],
                                                                "classes": [Function],
                                                                "defaultValue": [Function],
                                                                "disabled": [Function],
                                                                "displayEmpty": [Function],
                                                                "inputRef": [Function],
                                                                "labelId": [Function],
                                                                "multiple": [Function],
                                                                "name": [Function],
                                                                "onBlur": [Function],
                                                                "onChange": [Function],
                                                                "onClose": [Function],
                                                                "onFocus": [Function],
                                                                "onOpen": [Function],
                                                                "open": [Function],
                                                                "readOnly": [Function],
                                                                "renderValue": [Function],
                                                                "tabIndex": [Function],
                                                                "type": [Function],
                                                                "value": [Function],
                                                                "variant": [Function],
                                                              },
                                                              "render": [Function],
                                                            }
                                                          }
                                                          inputProps={
                                                            Object {
                                                              "IconComponent": Object {
                                                                "$$typeof": Symbol(react.memo),
                                                                "compare": null,
                                                                "type": Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "render": [Function],
                                                                },
                                                              },
                                                              "MenuProps": undefined,
                                                              "SelectDisplayProps": Object {
                                                                "id": undefined,
                                                              },
                                                              "autoWidth": false,
                                                              "children": Array [
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  disabled={true}
                                                                  style={
                                                                    Object {
                                                                      "display": "none",
                                                                    }
                                                                  }
                                                                  value="_default"
                                                                >
                                                                  
                                                                </WithStyles(ForwardRef(MenuItem))>,
                                                                Array [
                                                                  <WithStyles(ForwardRef(MenuItem))
                                                                    value={true}
                                                                  >
                                                                    On
                                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                                  <WithStyles(ForwardRef(MenuItem))
                                                                    value={false}
                                                                  >
                                                                    Off
                                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                                ],
                                                              ],
                                                              "classes": Object {
                                                                "disabled": "Mui-disabled",
                                                                "filled": "MuiSelect-filled",
                                                                "icon": "MuiSelect-icon",
                                                                "iconFilled": "MuiSelect-iconFilled",
                                                                "iconOpen": "MuiSelect-iconOpen",
                                                                "iconOutlined": "MuiSelect-iconOutlined",
                                                                "nativeInput": "MuiSelect-nativeInput",
                                                                "outlined": "MuiSelect-outlined",
                                                                "root": "MuiSelect-root",
                                                                "select": "MuiSelect-select",
                                                                "selectMenu": "MuiSelect-selectMenu",
                                                              },
                                                              "displayEmpty": false,
                                                              "labelId": undefined,
                                                              "multiple": false,
                                                              "onClose": undefined,
                                                              "onOpen": undefined,
                                                              "open": undefined,
                                                              "renderValue": undefined,
                                                              "type": undefined,
                                                              "variant": "standard",
                                                            }
                                                          }
                                                          onChange={[Function]}
                                                          onClick={[Function]}
                                                          style={
                                                            Object {
                                                              "fontSize": "0.8125rem",
                                                              "width": "120px",
                                                              "zIndex": 1,
                                                            }
                                                          }
                                                          value={false}
                                                        >
                                                          <WithStyles(ForwardRef(InputBase))
                                                            className=""
                                                            classes={
                                                              Object {
                                                                "colorSecondary": "MuiInput-colorSecondary",
                                                                "disabled": "Mui-disabled",
                                                                "error": "Mui-error",
                                                                "focused": "Mui-focused",
                                                                "formControl": "MuiInput-formControl",
                                                                "fullWidth": "MuiInput-fullWidth",
                                                                "input": "MuiInput-input",
                                                                "inputMarginDense": "MuiInput-inputMarginDense",
                                                                "inputMultiline": "MuiInput-inputMultiline",
                                                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                "marginDense": "MuiInput-marginDense",
                                                                "multiline": "MuiInput-multiline",
                                                                "root": "MuiInput-root MuiInput-underline",
                                                                "underline": null,
                                                              }
                                                            }
                                                            disabled={false}
                                                            fullWidth={false}
                                                            inputComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "propTypes": Object {
                                                                  "IconComponent": [Function],
                                                                  "MenuProps": [Function],
                                                                  "SelectDisplayProps": [Function],
                                                                  "aria-label": [Function],
                                                                  "autoFocus": [Function],
                                                                  "autoWidth": [Function],
                                                                  "children": [Function],
                                                                  "className": [Function],
                                                                  "classes": [Function],
                                                                  "defaultValue": [Function],
                                                                  "disabled": [Function],
                                                                  "displayEmpty": [Function],
                                                                  "inputRef": [Function],
                                                                  "labelId": [Function],
                                                                  "multiple": [Function],
                                                                  "name": [Function],
                                                                  "onBlur": [Function],
                                                                  "onChange": [Function],
                                                                  "onClose": [Function],
                                                                  "onFocus": [Function],
                                                                  "onOpen": [Function],
                                                                  "open": [Function],
                                                                  "readOnly": [Function],
                                                                  "renderValue": [Function],
                                                                  "tabIndex": [Function],
                                                                  "type": [Function],
                                                                  "value": [Function],
                                                                  "variant": [Function],
                                                                },
                                                                "render": [Function],
                                                              }
                                                            }
                                                            inputProps={
                                                              Object {
                                                                "IconComponent": Object {
                                                                  "$$typeof": Symbol(react.memo),
                                                                  "compare": null,
                                                                  "type": Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "render": [Function],
                                                                  },
                                                                },
                                                                "MenuProps": undefined,
                                                                "SelectDisplayProps": Object {
                                                                  "id": undefined,
                                                                },
                                                                "autoWidth": false,
                                                                "children": Array [
                                                                  <WithStyles(ForwardRef(MenuItem))
                                                                    disabled={true}
                                                                    style={
                                                                      Object {
                                                                        "display": "none",
                                                                      }
                                                                    }
                                                                    value="_default"
                                                                  >
                                                                    
                                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                                  Array [
                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                      value={true}
                                                                    >
                                                                      On
                                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                      value={false}
                                                                    >
                                                                      Off
                                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                                  ],
                                                                ],
                                                                "classes": Object {
                                                                  "disabled": "Mui-disabled",
                                                                  "filled": "MuiSelect-filled",
                                                                  "icon": "MuiSelect-icon",
                                                                  "iconFilled": "MuiSelect-iconFilled",
                                                                  "iconOpen": "MuiSelect-iconOpen",
                                                                  "iconOutlined": "MuiSelect-iconOutlined",
                                                                  "nativeInput": "MuiSelect-nativeInput",
                                                                  "outlined": "MuiSelect-outlined",
                                                                  "root": "MuiSelect-root",
                                                                  "select": "MuiSelect-select",
                                                                  "selectMenu": "MuiSelect-selectMenu",
                                                                },
                                                                "displayEmpty": false,
                                                                "labelId": undefined,
                                                                "multiple": false,
                                                                "onClose": undefined,
                                                                "onOpen": undefined,
                                                                "open": undefined,
                                                                "renderValue": undefined,
                                                                "type": undefined,
                                                                "variant": "standard",
                                                              }
                                                            }
                                                            multiline={false}
                                                            onChange={[Function]}
                                                            onClick={[Function]}
                                                            style={
                                                              Object {
                                                                "fontSize": "0.8125rem",
                                                                "width": "120px",
                                                                "zIndex": 1,
                                                              }
                                                            }
                                                            type="text"
                                                            value={false}
                                                          >
                                                            <ForwardRef(InputBase)
                                                              className=""
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiInputBase-adornedEnd",
                                                                  "adornedStart": "MuiInputBase-adornedStart",
                                                                  "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                  "disabled": "Mui-disabled Mui-disabled",
                                                                  "error": "Mui-error Mui-error",
                                                                  "focused": "Mui-focused Mui-focused",
                                                                  "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                  "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                  "input": "MuiInputBase-input MuiInput-input",
                                                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                  "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                  "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                  "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                  "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                }
                                                              }
                                                              disabled={false}
                                                              fullWidth={false}
                                                              inputComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "propTypes": Object {
                                                                    "IconComponent": [Function],
                                                                    "MenuProps": [Function],
                                                                    "SelectDisplayProps": [Function],
                                                                    "aria-label": [Function],
                                                                    "autoFocus": [Function],
                                                                    "autoWidth": [Function],
                                                                    "children": [Function],
                                                                    "className": [Function],
                                                                    "classes": [Function],
                                                                    "defaultValue": [Function],
                                                                    "disabled": [Function],
                                                                    "displayEmpty": [Function],
                                                                    "inputRef": [Function],
                                                                    "labelId": [Function],
                                                                    "multiple": [Function],
                                                                    "name": [Function],
                                                                    "onBlur": [Function],
                                                                    "onChange": [Function],
                                                                    "onClose": [Function],
                                                                    "onFocus": [Function],
                                                                    "onOpen": [Function],
                                                                    "open": [Function],
                                                                    "readOnly": [Function],
                                                                    "renderValue": [Function],
                                                                    "tabIndex": [Function],
                                                                    "type": [Function],
                                                                    "value": [Function],
                                                                    "variant": [Function],
                                                                  },
                                                                  "render": [Function],
                                                                }
                                                              }
                                                              inputProps={
                                                                Object {
                                                                  "IconComponent": Object {
                                                                    "$$typeof": Symbol(react.memo),
                                                                    "compare": null,
                                                                    "type": Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "render": [Function],
                                                                    },
                                                                  },
                                                                  "MenuProps": undefined,
                                                                  "SelectDisplayProps": Object {
                                                                    "id": undefined,
                                                                  },
                                                                  "autoWidth": false,
                                                                  "children": Array [
                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                      disabled={true}
                                                                      style={
                                                                        Object {
                                                                          "display": "none",
                                                                        }
                                                                      }
                                                                      value="_default"
                                                                    >
                                                                      
                                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                                    Array [
                                                                      <WithStyles(ForwardRef(MenuItem))
                                                                        value={true}
                                                                      >
                                                                        On
                                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                                      <WithStyles(ForwardRef(MenuItem))
                                                                        value={false}
                                                                      >
                                                                        Off
                                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                                    ],
                                                                  ],
                                                                  "classes": Object {
                                                                    "disabled": "Mui-disabled",
                                                                    "filled": "MuiSelect-filled",
                                                                    "icon": "MuiSelect-icon",
                                                                    "iconFilled": "MuiSelect-iconFilled",
                                                                    "iconOpen": "MuiSelect-iconOpen",
                                                                    "iconOutlined": "MuiSelect-iconOutlined",
                                                                    "nativeInput": "MuiSelect-nativeInput",
                                                                    "outlined": "MuiSelect-outlined",
                                                                    "root": "MuiSelect-root",
                                                                    "select": "MuiSelect-select",
                                                                    "selectMenu": "MuiSelect-selectMenu",
                                                                  },
                                                                  "displayEmpty": false,
                                                                  "labelId": undefined,
                                                                  "multiple": false,
                                                                  "onClose": undefined,
                                                                  "onOpen": undefined,
                                                                  "open": undefined,
                                                                  "renderValue": undefined,
                                                                  "type": undefined,
                                                                  "variant": "standard",
                                                                }
                                                              }
                                                              multiline={false}
                                                              onChange={[Function]}
                                                              onClick={[Function]}
                                                              style={
                                                                Object {
                                                                  "fontSize": "0.8125rem",
                                                                  "width": "120px",
                                                                  "zIndex": 1,
                                                                }
                                                              }
                                                              type="text"
                                                              value={false}
                                                            >
                                                              <div
                                                                className="MuiInputBase-root MuiInput-root MuiInput-underline"
                                                                onClick={[Function]}
                                                                style={
                                                                  Object {
                                                                    "fontSize": "0.8125rem",
                                                                    "width": "120px",
                                                                    "zIndex": 1,
                                                                  }
                                                                }
                                                              >
                                                                <ForwardRef(SelectInput)
                                                                  IconComponent={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.memo),
                                                                      "compare": null,
                                                                      "type": Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "render": [Function],
                                                                      },
                                                                    }
                                                                  }
                                                                  SelectDisplayProps={
                                                                    Object {
                                                                      "id": undefined,
                                                                    }
                                                                  }
                                                                  autoWidth={false}
                                                                  className="MuiInputBase-input MuiInput-input"
                                                                  classes={
                                                                    Object {
                                                                      "disabled": "Mui-disabled",
                                                                      "filled": "MuiSelect-filled",
                                                                      "icon": "MuiSelect-icon",
                                                                      "iconFilled": "MuiSelect-iconFilled",
                                                                      "iconOpen": "MuiSelect-iconOpen",
                                                                      "iconOutlined": "MuiSelect-iconOutlined",
                                                                      "nativeInput": "MuiSelect-nativeInput",
                                                                      "outlined": "MuiSelect-outlined",
                                                                      "root": "MuiSelect-root",
                                                                      "select": "MuiSelect-select",
                                                                      "selectMenu": "MuiSelect-selectMenu",
                                                                    }
                                                                  }
                                                                  disabled={false}
                                                                  displayEmpty={false}
                                                                  inputRef={[Function]}
                                                                  multiple={false}
                                                                  onAnimationStart={[Function]}
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  onFocus={[Function]}
                                                                  value={false}
                                                                  variant="standard"
                                                                >
                                                                  <div
                                                                    aria-haspopup="listbox"
                                                                    className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                    onBlur={[Function]}
                                                                    onFocus={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onMouseDown={[Function]}
                                                                    role="button"
                                                                    tabIndex={0}
                                                                  >
                                                                    Off
                                                                  </div>
                                                                  <input
                                                                    aria-hidden={true}
                                                                    className="MuiSelect-nativeInput"
                                                                    onAnimationStart={[Function]}
                                                                    onChange={[Function]}
                                                                    tabIndex={-1}
                                                                    value={false}
                                                                  />
                                                                  <ForwardRef(ArrowDropDownIcon)
                                                                    className="MuiSelect-icon"
                                                                  >
                                                                    <WithStyles(ForwardRef(SvgIcon))
                                                                      className="MuiSelect-icon"
                                                                    >
                                                                      <ForwardRef(SvgIcon)
                                                                        className="MuiSelect-icon"
                                                                        classes={
                                                                          Object {
                                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                            "colorError": "MuiSvgIcon-colorError",
                                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                            "root": "MuiSvgIcon-root",
                                                                          }
                                                                        }
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          className="MuiSvgIcon-root MuiSelect-icon"
                                                                          focusable="false"
                                                                          viewBox="0 0 24 24"
                                                                        >
                                                                          <path
                                                                            d="M7 10l5 5 5-5z"
                                                                          />
                                                                        </svg>
                                                                      </ForwardRef(SvgIcon)>
                                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                                  </ForwardRef(ArrowDropDownIcon)>
                                                                  <WithStyles(ForwardRef(Menu))
                                                                    MenuListProps={
                                                                      Object {
                                                                        "aria-labelledby": undefined,
                                                                        "disableListWrap": true,
                                                                        "role": "listbox",
                                                                      }
                                                                    }
                                                                    PaperProps={
                                                                      Object {
                                                                        "style": Object {
                                                                          "minWidth": undefined,
                                                                        },
                                                                      }
                                                                    }
                                                                    anchorEl={
                                                                      <div
                                                                        aria-haspopup="listbox"
                                                                        class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                        role="button"
                                                                        tabindex="0"
                                                                      >
                                                                        Off
                                                                      </div>
                                                                    }
                                                                    id="menu-"
                                                                    onClose={[Function]}
                                                                    open={false}
                                                                  >
                                                                    <ForwardRef(Menu)
                                                                      MenuListProps={
                                                                        Object {
                                                                          "aria-labelledby": undefined,
                                                                          "disableListWrap": true,
                                                                          "role": "listbox",
                                                                        }
                                                                      }
                                                                      PaperProps={
                                                                        Object {
                                                                          "style": Object {
                                                                            "minWidth": undefined,
                                                                          },
                                                                        }
                                                                      }
                                                                      anchorEl={
                                                                        <div
                                                                          aria-haspopup="listbox"
                                                                          class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                          role="button"
                                                                          tabindex="0"
                                                                        >
                                                                          Off
                                                                        </div>
                                                                      }
                                                                      classes={
                                                                        Object {
                                                                          "list": "MuiMenu-list",
                                                                          "paper": "MuiMenu-paper",
                                                                        }
                                                                      }
                                                                      id="menu-"
                                                                      onClose={[Function]}
                                                                      open={false}
                                                                    >
                                                                      <WithStyles(ForwardRef(Popover))
                                                                        PaperProps={
                                                                          Object {
                                                                            "classes": Object {
                                                                              "root": "MuiMenu-paper",
                                                                            },
                                                                            "style": Object {
                                                                              "minWidth": undefined,
                                                                            },
                                                                          }
                                                                        }
                                                                        anchorEl={
                                                                          <div
                                                                            aria-haspopup="listbox"
                                                                            class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                            role="button"
                                                                            tabindex="0"
                                                                          >
                                                                            Off
                                                                          </div>
                                                                        }
                                                                        anchorOrigin={
                                                                          Object {
                                                                            "horizontal": "left",
                                                                            "vertical": "top",
                                                                          }
                                                                        }
                                                                        getContentAnchorEl={[Function]}
                                                                        id="menu-"
                                                                        onClose={[Function]}
                                                                        onEntering={[Function]}
                                                                        open={false}
                                                                        transformOrigin={
                                                                          Object {
                                                                            "horizontal": "left",
                                                                            "vertical": "top",
                                                                          }
                                                                        }
                                                                        transitionDuration="auto"
                                                                      >
                                                                        <ForwardRef(Popover)
                                                                          PaperProps={
                                                                            Object {
                                                                              "classes": Object {
                                                                                "root": "MuiMenu-paper",
                                                                              },
                                                                              "style": Object {
                                                                                "minWidth": undefined,
                                                                              },
                                                                            }
                                                                          }
                                                                          anchorEl={
                                                                            <div
                                                                              aria-haspopup="listbox"
                                                                              class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                              role="button"
                                                                              tabindex="0"
                                                                            >
                                                                              Off
                                                                            </div>
                                                                          }
                                                                          anchorOrigin={
                                                                            Object {
                                                                              "horizontal": "left",
                                                                              "vertical": "top",
                                                                            }
                                                                          }
                                                                          classes={
                                                                            Object {
                                                                              "paper": "MuiPopover-paper",
                                                                              "root": "MuiPopover-root",
                                                                            }
                                                                          }
                                                                          getContentAnchorEl={[Function]}
                                                                          id="menu-"
                                                                          onClose={[Function]}
                                                                          onEntering={[Function]}
                                                                          open={false}
                                                                          transformOrigin={
                                                                            Object {
                                                                              "horizontal": "left",
                                                                              "vertical": "top",
                                                                            }
                                                                          }
                                                                          transitionDuration="auto"
                                                                        >
                                                                          <ForwardRef(Modal)
                                                                            BackdropProps={
                                                                              Object {
                                                                                "invisible": true,
                                                                              }
                                                                            }
                                                                            className="MuiPopover-root"
                                                                            container={<body />}
                                                                            id="menu-"
                                                                            onClose={[Function]}
                                                                            open={false}
                                                                          />
                                                                        </ForwardRef(Popover)>
                                                                      </WithStyles(ForwardRef(Popover))>
                                                                    </ForwardRef(Menu)>
                                                                  </WithStyles(ForwardRef(Menu))>
                                                                </ForwardRef(SelectInput)>
                                                              </div>
                                                            </ForwardRef(InputBase)>
                                                          </WithStyles(ForwardRef(InputBase))>
                                                        </ForwardRef(Input)>
                                                      </WithStyles(ForwardRef(Input))>
                                                    </ForwardRef(Select)>
                                                  </WithStyles(ForwardRef(Select))>
                                                   
                                                </span>
                                              </SelectInput>
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                        <WithStyles(ForwardRef(TableCell))
                                          key="settingsFrom"
                                          onClick={[Function]}
                                          style={Object {}}
                                        >
                                          <ForwardRef(TableCell)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            onClick={[Function]}
                                            style={Object {}}
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body"
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              <ColorHighlighter
                                                data={
                                                  Object {
                                                    "catagory": "OverSeas Cabin Contract",
                                                    "id": 4,
                                                    "isEdited": true,
                                                    "name": "Earily Duty",
                                                    "settingsFrom": "Widebody",
                                                    "state": false,
                                                    "type": "Cost RUle",
                                                  }
                                                }
                                                header="isEdited"
                                                highlighter={[Function]}
                                                style={
                                                  Object {
                                                    "color": "#FF650C",
                                                  }
                                                }
                                                value="Widebody"
                                              >
                                                <span
                                                  style={Object {}}
                                                >
                                                  Widebody
                                                </span>
                                              </ColorHighlighter>
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                        <WithStyles(ForwardRef(TableCell))
                                          key="catagory"
                                          onClick={[Function]}
                                          style={Object {}}
                                        >
                                          <ForwardRef(TableCell)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            onClick={[Function]}
                                            style={Object {}}
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body"
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              OverSeas Cabin Contract
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                        <WithStyles(ForwardRef(TableCell))
                                          key="type"
                                          onClick={[Function]}
                                          style={Object {}}
                                        >
                                          <ForwardRef(TableCell)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            onClick={[Function]}
                                            style={Object {}}
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body"
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              Cost RUle
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                      </tr>
                                    </ForwardRef(TableRow)>
                                  </WithStyles(ForwardRef(TableRow))>
                                  <WithStyles(ForwardRef(TableRow))>
                                    <ForwardRef(TableRow)
                                      classes={
                                        Object {
                                          "footer": "MuiTableRow-footer",
                                          "head": "MuiTableRow-head",
                                          "hover": "MuiTableRow-hover",
                                          "root": "MuiTableRow-root",
                                          "selected": "Mui-selected",
                                        }
                                      }
                                    >
                                      <tr
                                        className="MuiTableRow-root"
                                        role={null}
                                      >
                                        <WithStyles(ForwardRef(TableCell))
                                          className="no-border"
                                          colSpan={6}
                                          style={
                                            Object {
                                              "padding": 0,
                                            }
                                          }
                                        >
                                          <ForwardRef(TableCell)
                                            className="no-border"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            colSpan={6}
                                            style={
                                              Object {
                                                "padding": 0,
                                              }
                                            }
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body no-border"
                                              colSpan={6}
                                              style={
                                                Object {
                                                  "padding": 0,
                                                }
                                              }
                                            >
                                              <WithStyles(ForwardRef(Collapse))
                                                in={false}
                                                timeout="auto"
                                                unmountOnExit={true}
                                              >
                                                <ForwardRef(Collapse)
                                                  classes={
                                                    Object {
                                                      "container": "MuiCollapse-container",
                                                      "entered": "MuiCollapse-entered",
                                                      "hidden": "MuiCollapse-hidden",
                                                      "wrapper": "MuiCollapse-wrapper",
                                                      "wrapperInner": "MuiCollapse-wrapperInner",
                                                    }
                                                  }
                                                  in={false}
                                                  timeout="auto"
                                                  unmountOnExit={true}
                                                >
                                                  <Transition
                                                    addEndListener={[Function]}
                                                    appear={false}
                                                    enter={true}
                                                    exit={true}
                                                    in={false}
                                                    mountOnEnter={false}
                                                    onEnter={[Function]}
                                                    onEntered={[Function]}
                                                    onEntering={[Function]}
                                                    onExit={[Function]}
                                                    onExited={[Function]}
                                                    onExiting={[Function]}
                                                    timeout={null}
                                                    unmountOnExit={true}
                                                  />
                                                </ForwardRef(Collapse)>
                                              </WithStyles(ForwardRef(Collapse))>
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                      </tr>
                                    </ForwardRef(TableRow)>
                                  </WithStyles(ForwardRef(TableRow))>
                                  <WithStyles(ForwardRef(TableRow))
                                    classes={
                                      Object {
                                        "hover": "hover",
                                        "root": "MuiTableRow",
                                        "selected": "selected",
                                      }
                                    }
                                    hover={true}
                                    id="tablerow5"
                                    selected={false}
                                  >
                                    <ForwardRef(TableRow)
                                      classes={
                                        Object {
                                          "footer": "MuiTableRow-footer",
                                          "head": "MuiTableRow-head",
                                          "hover": "MuiTableRow-hover hover",
                                          "root": "MuiTableRow-root MuiTableRow",
                                          "selected": "Mui-selected selected",
                                        }
                                      }
                                      hover={true}
                                      id="tablerow5"
                                      selected={false}
                                    >
                                      <tr
                                        className="MuiTableRow-root MuiTableRow MuiTableRow-hover hover"
                                        id="tablerow5"
                                        role={null}
                                      >
                                        <WithStyles(ForwardRef(TableCell))
                                          style={
                                            Object {
                                              "height": 40,
                                              "paddingLeft": "18px",
                                              "paddingRight": "0px",
                                              "width": 40,
                                            }
                                          }
                                        >
                                          <ForwardRef(TableCell)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            style={
                                              Object {
                                                "height": 40,
                                                "paddingLeft": "18px",
                                                "paddingRight": "0px",
                                                "width": 40,
                                              }
                                            }
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body"
                                              style={
                                                Object {
                                                  "height": 40,
                                                  "paddingLeft": "18px",
                                                  "paddingRight": "0px",
                                                  "width": 40,
                                                }
                                              }
                                            >
                                              <WithStyles(ForwardRef(Checkbox))
                                                checked={false}
                                                color="primary"
                                                onClick={[Function]}
                                                style={
                                                  Object {
                                                    "height": 20,
                                                    "width": 20,
                                                  }
                                                }
                                              >
                                                <ForwardRef(Checkbox)
                                                  checked={false}
                                                  classes={
                                                    Object {
                                                      "checked": "Mui-checked",
                                                      "colorPrimary": "MuiCheckbox-colorPrimary",
                                                      "colorSecondary": "MuiCheckbox-colorSecondary",
                                                      "disabled": "Mui-disabled",
                                                      "indeterminate": "MuiCheckbox-indeterminate",
                                                      "root": "MuiCheckbox-root",
                                                    }
                                                  }
                                                  color="primary"
                                                  onClick={[Function]}
                                                  style={
                                                    Object {
                                                      "height": 20,
                                                      "width": 20,
                                                    }
                                                  }
                                                >
                                                  <WithStyles(ForwardRef(SwitchBase))
                                                    checked={false}
                                                    checkedIcon={<Memo />}
                                                    classes={
                                                      Object {
                                                        "checked": "Mui-checked",
                                                        "disabled": "Mui-disabled",
                                                        "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                                                      }
                                                    }
                                                    color="primary"
                                                    icon={<Memo />}
                                                    inputProps={
                                                      Object {
                                                        "data-indeterminate": false,
                                                      }
                                                    }
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "height": 20,
                                                        "width": 20,
                                                      }
                                                    }
                                                    type="checkbox"
                                                  >
                                                    <ForwardRef(SwitchBase)
                                                      checked={false}
                                                      checkedIcon={<Memo />}
                                                      classes={
                                                        Object {
                                                          "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                                                          "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                                                          "input": "PrivateSwitchBase-input-4",
                                                          "root": "PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary",
                                                        }
                                                      }
                                                      color="primary"
                                                      icon={<Memo />}
                                                      inputProps={
                                                        Object {
                                                          "data-indeterminate": false,
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                      style={
                                                        Object {
                                                          "height": 20,
                                                          "width": 20,
                                                        }
                                                      }
                                                      type="checkbox"
                                                    >
                                                      <WithStyles(ForwardRef(IconButton))
                                                        className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary"
                                                        color="primary"
                                                        component="span"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onFocus={[Function]}
                                                        style={
                                                          Object {
                                                            "height": 20,
                                                            "width": 20,
                                                          }
                                                        }
                                                        tabIndex={null}
                                                      >
                                                        <ForwardRef(IconButton)
                                                          className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary"
                                                          classes={
                                                            Object {
                                                              "colorInherit": "MuiIconButton-colorInherit",
                                                              "colorPrimary": "MuiIconButton-colorPrimary",
                                                              "colorSecondary": "MuiIconButton-colorSecondary",
                                                              "disabled": "Mui-disabled",
                                                              "edgeEnd": "MuiIconButton-edgeEnd",
                                                              "edgeStart": "MuiIconButton-edgeStart",
                                                              "label": "MuiIconButton-label",
                                                              "root": "MuiIconButton-root",
                                                              "sizeSmall": "MuiIconButton-sizeSmall",
                                                            }
                                                          }
                                                          color="primary"
                                                          component="span"
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onFocus={[Function]}
                                                          style={
                                                            Object {
                                                              "height": 20,
                                                              "width": 20,
                                                            }
                                                          }
                                                          tabIndex={null}
                                                        >
                                                          <WithStyles(ForwardRef(ButtonBase))
                                                            centerRipple={true}
                                                            className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                            component="span"
                                                            disabled={false}
                                                            focusRipple={true}
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onFocus={[Function]}
                                                            style={
                                                              Object {
                                                                "height": 20,
                                                                "width": 20,
                                                              }
                                                            }
                                                            tabIndex={null}
                                                          >
                                                            <ForwardRef(ButtonBase)
                                                              centerRipple={true}
                                                              className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                              classes={
                                                                Object {
                                                                  "disabled": "Mui-disabled",
                                                                  "focusVisible": "Mui-focusVisible",
                                                                  "root": "MuiButtonBase-root",
                                                                }
                                                              }
                                                              component="span"
                                                              disabled={false}
                                                              focusRipple={true}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onFocus={[Function]}
                                                              style={
                                                                Object {
                                                                  "height": 20,
                                                                  "width": 20,
                                                                }
                                                              }
                                                              tabIndex={null}
                                                            >
                                                              <span
                                                                aria-disabled={false}
                                                                className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                                onBlur={[Function]}
                                                                onClick={[Function]}
                                                                onDragLeave={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseDown={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                onTouchMove={[Function]}
                                                                onTouchStart={[Function]}
                                                                style={
                                                                  Object {
                                                                    "height": 20,
                                                                    "width": 20,
                                                                  }
                                                                }
                                                                tabIndex={null}
                                                              >
                                                                <span
                                                                  className="MuiIconButton-label"
                                                                >
                                                                  <input
                                                                    checked={false}
                                                                    className="PrivateSwitchBase-input-4"
                                                                    data-indeterminate={false}
                                                                    onChange={[Function]}
                                                                    type="checkbox"
                                                                  />
                                                                  <ForwardRef(CheckBoxOutlineBlankIcon)>
                                                                    <WithStyles(ForwardRef(SvgIcon))>
                                                                      <ForwardRef(SvgIcon)
                                                                        classes={
                                                                          Object {
                                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                            "colorError": "MuiSvgIcon-colorError",
                                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                            "root": "MuiSvgIcon-root",
                                                                          }
                                                                        }
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          className="MuiSvgIcon-root"
                                                                          focusable="false"
                                                                          viewBox="0 0 24 24"
                                                                        >
                                                                          <path
                                                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                                          />
                                                                        </svg>
                                                                      </ForwardRef(SvgIcon)>
                                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                                  </ForwardRef(CheckBoxOutlineBlankIcon)>
                                                                </span>
                                                                <WithStyles(memo)
                                                                  center={true}
                                                                >
                                                                  <ForwardRef(TouchRipple)
                                                                    center={true}
                                                                    classes={
                                                                      Object {
                                                                        "child": "MuiTouchRipple-child",
                                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                                        "ripple": "MuiTouchRipple-ripple",
                                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                        "root": "MuiTouchRipple-root",
                                                                      }
                                                                    }
                                                                  >
                                                                    <span
                                                                      className="MuiTouchRipple-root"
                                                                    >
                                                                      <TransitionGroup
                                                                        childFactory={[Function]}
                                                                        component={null}
                                                                        exit={true}
                                                                      />
                                                                    </span>
                                                                  </ForwardRef(TouchRipple)>
                                                                </WithStyles(memo)>
                                                              </span>
                                                            </ForwardRef(ButtonBase)>
                                                          </WithStyles(ForwardRef(ButtonBase))>
                                                        </ForwardRef(IconButton)>
                                                      </WithStyles(ForwardRef(IconButton))>
                                                    </ForwardRef(SwitchBase)>
                                                  </WithStyles(ForwardRef(SwitchBase))>
                                                </ForwardRef(Checkbox)>
                                              </WithStyles(ForwardRef(Checkbox))>
                                              <WithStyles(ForwardRef(IconButton))
                                                aria-label="expand row"
                                                onClick={[Function]}
                                                size="small"
                                                style={
                                                  Object {
                                                    "marginLeft": "10px",
                                                  }
                                                }
                                              >
                                                <ForwardRef(IconButton)
                                                  aria-label="expand row"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiIconButton-colorInherit",
                                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                                      "disabled": "Mui-disabled",
                                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                                      "edgeStart": "MuiIconButton-edgeStart",
                                                      "label": "MuiIconButton-label",
                                                      "root": "MuiIconButton-root",
                                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                                    }
                                                  }
                                                  onClick={[Function]}
                                                  size="small"
                                                  style={
                                                    Object {
                                                      "marginLeft": "10px",
                                                    }
                                                  }
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    aria-label="expand row"
                                                    centerRipple={true}
                                                    className="MuiIconButton-root MuiIconButton-sizeSmall"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "marginLeft": "10px",
                                                      }
                                                    }
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      aria-label="expand row"
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiIconButton-sizeSmall"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      disabled={false}
                                                      focusRipple={true}
                                                      onClick={[Function]}
                                                      style={
                                                        Object {
                                                          "marginLeft": "10px",
                                                        }
                                                      }
                                                    >
                                                      <button
                                                        aria-label="expand row"
                                                        className="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                                        disabled={false}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        style={
                                                          Object {
                                                            "marginLeft": "10px",
                                                          }
                                                        }
                                                        tabIndex={0}
                                                        type="button"
                                                      >
                                                        <span
                                                          className="MuiIconButton-label"
                                                        >
                                                          <ForwardRef(KeyboardArrowDownIcon)>
                                                            <WithStyles(ForwardRef(SvgIcon))>
                                                              <ForwardRef(SvgIcon)
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root"
                                                                  focusable="false"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef(KeyboardArrowDownIcon)>
                                                        </span>
                                                        <WithStyles(memo)
                                                          center={true}
                                                        >
                                                          <ForwardRef(TouchRipple)
                                                            center={true}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </ForwardRef(TouchRipple)>
                                                        </WithStyles(memo)>
                                                      </button>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(IconButton)>
                                              </WithStyles(ForwardRef(IconButton))>
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                        <WithStyles(ForwardRef(TableCell))
                                          key="name"
                                          onClick={[Function]}
                                          style={Object {}}
                                        >
                                          <ForwardRef(TableCell)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            onClick={[Function]}
                                            style={Object {}}
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body"
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              <OverflowTip
                                                content="Late Duty"
                                                maxWidth="200px"
                                                tooltipStyle={
                                                  Object {
                                                    "maxWidth": "235px",
                                                  }
                                                }
                                                value="Late Duty"
                                              >
                                                <SierraMuiTooltip
                                                  classes={
                                                    Object {
                                                      "popper": "ellipse-zoom-popper",
                                                    }
                                                  }
                                                  disableHoverListener={true}
                                                  interactive={true}
                                                  style={
                                                    Object {
                                                      "maxWidth": "235px",
                                                    }
                                                  }
                                                  title="Late Duty"
                                                >
                                                  <WithStyles(ForwardRef(Tooltip))
                                                    arrow={true}
                                                    classes={
                                                      Object {
                                                        "popper": "ellipse-zoom-popper",
                                                      }
                                                    }
                                                    disableHoverListener={true}
                                                    interactive={true}
                                                    style={
                                                      Object {
                                                        "maxWidth": "235px",
                                                      }
                                                    }
                                                    title="Late Duty"
                                                  >
                                                    <ForwardRef(Tooltip)
                                                      arrow={true}
                                                      classes={
                                                        Object {
                                                          "arrow": "MuiTooltip-arrow",
                                                          "popper": "MuiTooltip-popper ellipse-zoom-popper",
                                                          "popperArrow": "MuiTooltip-popperArrow",
                                                          "popperInteractive": "MuiTooltip-popperInteractive",
                                                          "tooltip": "MuiTooltip-tooltip",
                                                          "tooltipArrow": "MuiTooltip-tooltipArrow",
                                                          "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                                          "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                                          "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                                          "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                                          "touch": "MuiTooltip-touch",
                                                        }
                                                      }
                                                      disableHoverListener={true}
                                                      interactive={true}
                                                      style={
                                                        Object {
                                                          "maxWidth": "235px",
                                                        }
                                                      }
                                                      title="Late Duty"
                                                    >
                                                      <div
                                                        aria-describedby={null}
                                                        className=""
                                                        onBlur={[Function]}
                                                        onFocus={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchStart={[Function]}
                                                        style={
                                                          Object {
                                                            "maxWidth": "200px",
                                                            "overflow": "hidden",
                                                            "textOverflow": "ellipsis",
                                                            "whiteSpace": "nowrap",
                                                          }
                                                        }
                                                        title={null}
                                                      >
                                                        Late Duty
                                                      </div>
                                                      <ForwardRef(Popper)
                                                        anchorEl={
                                                          <div
                                                            class=""
                                                            style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 200px;"
                                                          >
                                                            Late Duty
                                                          </div>
                                                        }
                                                        className="MuiTooltip-popper ellipse-zoom-popper MuiTooltip-popperInteractive MuiTooltip-popperArrow"
                                                        id={null}
                                                        onBlur={[Function]}
                                                        onFocus={[Function]}
                                                        open={false}
                                                        placement="bottom"
                                                        popperOptions={
                                                          Object {
                                                            "modifiers": Object {
                                                              "arrow": Object {
                                                                "element": null,
                                                                "enabled": false,
                                                              },
                                                            },
                                                          }
                                                        }
                                                        transition={true}
                                                      />
                                                    </ForwardRef(Tooltip)>
                                                  </WithStyles(ForwardRef(Tooltip))>
                                                </SierraMuiTooltip>
                                              </OverflowTip>
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                        <WithStyles(ForwardRef(TableCell))
                                          key="state"
                                          onClick={[Function]}
                                          style={
                                            Object {
                                              "width": "120px",
                                            }
                                          }
                                        >
                                          <ForwardRef(TableCell)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "width": "120px",
                                              }
                                            }
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body"
                                              onClick={[Function]}
                                              style={
                                                Object {
                                                  "width": "120px",
                                                }
                                              }
                                            >
                                              <SelectInput
                                                data={
                                                  Object {
                                                    "catagory": "Basic Pairing Rules",
                                                    "id": 5,
                                                    "name": "Late Duty",
                                                    "settingsFrom": "Baseline Rules",
                                                    "state": true,
                                                    "type": "Soft Rule",
                                                  }
                                                }
                                                defaultValue="_default"
                                                enableReset={false}
                                                error={false}
                                                getTooltipContent={[Function]}
                                                handleDisable={[Function]}
                                                handleReset={[Function]}
                                                handleTooltipDisable={[Function]}
                                                items={
                                                  Array [
                                                    Object {
                                                      "display": "On",
                                                      "value": true,
                                                    },
                                                    Object {
                                                      "display": "Off",
                                                      "value": false,
                                                    },
                                                  ]
                                                }
                                                onChange={[Function]}
                                                placeholder=""
                                                removeOverlay={[Function]}
                                                style={
                                                  Object {
                                                    "fontSize": "0.8125rem",
                                                    "width": "120px",
                                                  }
                                                }
                                                value={true}
                                              >
                                                <span
                                                  className=""
                                                >
                                                   
                                                  <WithStyles(ForwardRef(Select))
                                                    className=""
                                                    disabled={false}
                                                    onChange={[Function]}
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "fontSize": "0.8125rem",
                                                        "width": "120px",
                                                        "zIndex": 1,
                                                      }
                                                    }
                                                    value={true}
                                                  >
                                                    <ForwardRef(Select)
                                                      className=""
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "filled": "MuiSelect-filled",
                                                          "icon": "MuiSelect-icon",
                                                          "iconFilled": "MuiSelect-iconFilled",
                                                          "iconOpen": "MuiSelect-iconOpen",
                                                          "iconOutlined": "MuiSelect-iconOutlined",
                                                          "nativeInput": "MuiSelect-nativeInput",
                                                          "outlined": "MuiSelect-outlined",
                                                          "root": "MuiSelect-root",
                                                          "select": "MuiSelect-select",
                                                          "selectMenu": "MuiSelect-selectMenu",
                                                        }
                                                      }
                                                      disabled={false}
                                                      onChange={[Function]}
                                                      onClick={[Function]}
                                                      style={
                                                        Object {
                                                          "fontSize": "0.8125rem",
                                                          "width": "120px",
                                                          "zIndex": 1,
                                                        }
                                                      }
                                                      value={true}
                                                    >
                                                      <WithStyles(ForwardRef(Input))
                                                        className=""
                                                        disabled={false}
                                                        inputComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "propTypes": Object {
                                                              "IconComponent": [Function],
                                                              "MenuProps": [Function],
                                                              "SelectDisplayProps": [Function],
                                                              "aria-label": [Function],
                                                              "autoFocus": [Function],
                                                              "autoWidth": [Function],
                                                              "children": [Function],
                                                              "className": [Function],
                                                              "classes": [Function],
                                                              "defaultValue": [Function],
                                                              "disabled": [Function],
                                                              "displayEmpty": [Function],
                                                              "inputRef": [Function],
                                                              "labelId": [Function],
                                                              "multiple": [Function],
                                                              "name": [Function],
                                                              "onBlur": [Function],
                                                              "onChange": [Function],
                                                              "onClose": [Function],
                                                              "onFocus": [Function],
                                                              "onOpen": [Function],
                                                              "open": [Function],
                                                              "readOnly": [Function],
                                                              "renderValue": [Function],
                                                              "tabIndex": [Function],
                                                              "type": [Function],
                                                              "value": [Function],
                                                              "variant": [Function],
                                                            },
                                                            "render": [Function],
                                                          }
                                                        }
                                                        inputProps={
                                                          Object {
                                                            "IconComponent": Object {
                                                              "$$typeof": Symbol(react.memo),
                                                              "compare": null,
                                                              "type": Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "render": [Function],
                                                              },
                                                            },
                                                            "MenuProps": undefined,
                                                            "SelectDisplayProps": Object {
                                                              "id": undefined,
                                                            },
                                                            "autoWidth": false,
                                                            "children": Array [
                                                              <WithStyles(ForwardRef(MenuItem))
                                                                disabled={true}
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                                value="_default"
                                                              >
                                                                
                                                              </WithStyles(ForwardRef(MenuItem))>,
                                                              Array [
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  value={true}
                                                                >
                                                                  On
                                                                </WithStyles(ForwardRef(MenuItem))>,
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  value={false}
                                                                >
                                                                  Off
                                                                </WithStyles(ForwardRef(MenuItem))>,
                                                              ],
                                                            ],
                                                            "classes": Object {
                                                              "disabled": "Mui-disabled",
                                                              "filled": "MuiSelect-filled",
                                                              "icon": "MuiSelect-icon",
                                                              "iconFilled": "MuiSelect-iconFilled",
                                                              "iconOpen": "MuiSelect-iconOpen",
                                                              "iconOutlined": "MuiSelect-iconOutlined",
                                                              "nativeInput": "MuiSelect-nativeInput",
                                                              "outlined": "MuiSelect-outlined",
                                                              "root": "MuiSelect-root",
                                                              "select": "MuiSelect-select",
                                                              "selectMenu": "MuiSelect-selectMenu",
                                                            },
                                                            "displayEmpty": false,
                                                            "labelId": undefined,
                                                            "multiple": false,
                                                            "onClose": undefined,
                                                            "onOpen": undefined,
                                                            "open": undefined,
                                                            "renderValue": undefined,
                                                            "type": undefined,
                                                            "variant": "standard",
                                                          }
                                                        }
                                                        onChange={[Function]}
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "fontSize": "0.8125rem",
                                                            "width": "120px",
                                                            "zIndex": 1,
                                                          }
                                                        }
                                                        value={true}
                                                      >
                                                        <ForwardRef(Input)
                                                          className=""
                                                          classes={
                                                            Object {
                                                              "colorSecondary": "MuiInput-colorSecondary",
                                                              "disabled": "Mui-disabled",
                                                              "error": "Mui-error",
                                                              "focused": "Mui-focused",
                                                              "formControl": "MuiInput-formControl",
                                                              "fullWidth": "MuiInput-fullWidth",
                                                              "input": "MuiInput-input",
                                                              "inputMarginDense": "MuiInput-inputMarginDense",
                                                              "inputMultiline": "MuiInput-inputMultiline",
                                                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                              "marginDense": "MuiInput-marginDense",
                                                              "multiline": "MuiInput-multiline",
                                                              "root": "MuiInput-root",
                                                              "underline": "MuiInput-underline",
                                                            }
                                                          }
                                                          disabled={false}
                                                          inputComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "propTypes": Object {
                                                                "IconComponent": [Function],
                                                                "MenuProps": [Function],
                                                                "SelectDisplayProps": [Function],
                                                                "aria-label": [Function],
                                                                "autoFocus": [Function],
                                                                "autoWidth": [Function],
                                                                "children": [Function],
                                                                "className": [Function],
                                                                "classes": [Function],
                                                                "defaultValue": [Function],
                                                                "disabled": [Function],
                                                                "displayEmpty": [Function],
                                                                "inputRef": [Function],
                                                                "labelId": [Function],
                                                                "multiple": [Function],
                                                                "name": [Function],
                                                                "onBlur": [Function],
                                                                "onChange": [Function],
                                                                "onClose": [Function],
                                                                "onFocus": [Function],
                                                                "onOpen": [Function],
                                                                "open": [Function],
                                                                "readOnly": [Function],
                                                                "renderValue": [Function],
                                                                "tabIndex": [Function],
                                                                "type": [Function],
                                                                "value": [Function],
                                                                "variant": [Function],
                                                              },
                                                              "render": [Function],
                                                            }
                                                          }
                                                          inputProps={
                                                            Object {
                                                              "IconComponent": Object {
                                                                "$$typeof": Symbol(react.memo),
                                                                "compare": null,
                                                                "type": Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "render": [Function],
                                                                },
                                                              },
                                                              "MenuProps": undefined,
                                                              "SelectDisplayProps": Object {
                                                                "id": undefined,
                                                              },
                                                              "autoWidth": false,
                                                              "children": Array [
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  disabled={true}
                                                                  style={
                                                                    Object {
                                                                      "display": "none",
                                                                    }
                                                                  }
                                                                  value="_default"
                                                                >
                                                                  
                                                                </WithStyles(ForwardRef(MenuItem))>,
                                                                Array [
                                                                  <WithStyles(ForwardRef(MenuItem))
                                                                    value={true}
                                                                  >
                                                                    On
                                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                                  <WithStyles(ForwardRef(MenuItem))
                                                                    value={false}
                                                                  >
                                                                    Off
                                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                                ],
                                                              ],
                                                              "classes": Object {
                                                                "disabled": "Mui-disabled",
                                                                "filled": "MuiSelect-filled",
                                                                "icon": "MuiSelect-icon",
                                                                "iconFilled": "MuiSelect-iconFilled",
                                                                "iconOpen": "MuiSelect-iconOpen",
                                                                "iconOutlined": "MuiSelect-iconOutlined",
                                                                "nativeInput": "MuiSelect-nativeInput",
                                                                "outlined": "MuiSelect-outlined",
                                                                "root": "MuiSelect-root",
                                                                "select": "MuiSelect-select",
                                                                "selectMenu": "MuiSelect-selectMenu",
                                                              },
                                                              "displayEmpty": false,
                                                              "labelId": undefined,
                                                              "multiple": false,
                                                              "onClose": undefined,
                                                              "onOpen": undefined,
                                                              "open": undefined,
                                                              "renderValue": undefined,
                                                              "type": undefined,
                                                              "variant": "standard",
                                                            }
                                                          }
                                                          onChange={[Function]}
                                                          onClick={[Function]}
                                                          style={
                                                            Object {
                                                              "fontSize": "0.8125rem",
                                                              "width": "120px",
                                                              "zIndex": 1,
                                                            }
                                                          }
                                                          value={true}
                                                        >
                                                          <WithStyles(ForwardRef(InputBase))
                                                            className=""
                                                            classes={
                                                              Object {
                                                                "colorSecondary": "MuiInput-colorSecondary",
                                                                "disabled": "Mui-disabled",
                                                                "error": "Mui-error",
                                                                "focused": "Mui-focused",
                                                                "formControl": "MuiInput-formControl",
                                                                "fullWidth": "MuiInput-fullWidth",
                                                                "input": "MuiInput-input",
                                                                "inputMarginDense": "MuiInput-inputMarginDense",
                                                                "inputMultiline": "MuiInput-inputMultiline",
                                                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                "marginDense": "MuiInput-marginDense",
                                                                "multiline": "MuiInput-multiline",
                                                                "root": "MuiInput-root MuiInput-underline",
                                                                "underline": null,
                                                              }
                                                            }
                                                            disabled={false}
                                                            fullWidth={false}
                                                            inputComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "propTypes": Object {
                                                                  "IconComponent": [Function],
                                                                  "MenuProps": [Function],
                                                                  "SelectDisplayProps": [Function],
                                                                  "aria-label": [Function],
                                                                  "autoFocus": [Function],
                                                                  "autoWidth": [Function],
                                                                  "children": [Function],
                                                                  "className": [Function],
                                                                  "classes": [Function],
                                                                  "defaultValue": [Function],
                                                                  "disabled": [Function],
                                                                  "displayEmpty": [Function],
                                                                  "inputRef": [Function],
                                                                  "labelId": [Function],
                                                                  "multiple": [Function],
                                                                  "name": [Function],
                                                                  "onBlur": [Function],
                                                                  "onChange": [Function],
                                                                  "onClose": [Function],
                                                                  "onFocus": [Function],
                                                                  "onOpen": [Function],
                                                                  "open": [Function],
                                                                  "readOnly": [Function],
                                                                  "renderValue": [Function],
                                                                  "tabIndex": [Function],
                                                                  "type": [Function],
                                                                  "value": [Function],
                                                                  "variant": [Function],
                                                                },
                                                                "render": [Function],
                                                              }
                                                            }
                                                            inputProps={
                                                              Object {
                                                                "IconComponent": Object {
                                                                  "$$typeof": Symbol(react.memo),
                                                                  "compare": null,
                                                                  "type": Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "render": [Function],
                                                                  },
                                                                },
                                                                "MenuProps": undefined,
                                                                "SelectDisplayProps": Object {
                                                                  "id": undefined,
                                                                },
                                                                "autoWidth": false,
                                                                "children": Array [
                                                                  <WithStyles(ForwardRef(MenuItem))
                                                                    disabled={true}
                                                                    style={
                                                                      Object {
                                                                        "display": "none",
                                                                      }
                                                                    }
                                                                    value="_default"
                                                                  >
                                                                    
                                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                                  Array [
                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                      value={true}
                                                                    >
                                                                      On
                                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                      value={false}
                                                                    >
                                                                      Off
                                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                                  ],
                                                                ],
                                                                "classes": Object {
                                                                  "disabled": "Mui-disabled",
                                                                  "filled": "MuiSelect-filled",
                                                                  "icon": "MuiSelect-icon",
                                                                  "iconFilled": "MuiSelect-iconFilled",
                                                                  "iconOpen": "MuiSelect-iconOpen",
                                                                  "iconOutlined": "MuiSelect-iconOutlined",
                                                                  "nativeInput": "MuiSelect-nativeInput",
                                                                  "outlined": "MuiSelect-outlined",
                                                                  "root": "MuiSelect-root",
                                                                  "select": "MuiSelect-select",
                                                                  "selectMenu": "MuiSelect-selectMenu",
                                                                },
                                                                "displayEmpty": false,
                                                                "labelId": undefined,
                                                                "multiple": false,
                                                                "onClose": undefined,
                                                                "onOpen": undefined,
                                                                "open": undefined,
                                                                "renderValue": undefined,
                                                                "type": undefined,
                                                                "variant": "standard",
                                                              }
                                                            }
                                                            multiline={false}
                                                            onChange={[Function]}
                                                            onClick={[Function]}
                                                            style={
                                                              Object {
                                                                "fontSize": "0.8125rem",
                                                                "width": "120px",
                                                                "zIndex": 1,
                                                              }
                                                            }
                                                            type="text"
                                                            value={true}
                                                          >
                                                            <ForwardRef(InputBase)
                                                              className=""
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiInputBase-adornedEnd",
                                                                  "adornedStart": "MuiInputBase-adornedStart",
                                                                  "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                  "disabled": "Mui-disabled Mui-disabled",
                                                                  "error": "Mui-error Mui-error",
                                                                  "focused": "Mui-focused Mui-focused",
                                                                  "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                  "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                  "input": "MuiInputBase-input MuiInput-input",
                                                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                  "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                  "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                  "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                  "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                }
                                                              }
                                                              disabled={false}
                                                              fullWidth={false}
                                                              inputComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "propTypes": Object {
                                                                    "IconComponent": [Function],
                                                                    "MenuProps": [Function],
                                                                    "SelectDisplayProps": [Function],
                                                                    "aria-label": [Function],
                                                                    "autoFocus": [Function],
                                                                    "autoWidth": [Function],
                                                                    "children": [Function],
                                                                    "className": [Function],
                                                                    "classes": [Function],
                                                                    "defaultValue": [Function],
                                                                    "disabled": [Function],
                                                                    "displayEmpty": [Function],
                                                                    "inputRef": [Function],
                                                                    "labelId": [Function],
                                                                    "multiple": [Function],
                                                                    "name": [Function],
                                                                    "onBlur": [Function],
                                                                    "onChange": [Function],
                                                                    "onClose": [Function],
                                                                    "onFocus": [Function],
                                                                    "onOpen": [Function],
                                                                    "open": [Function],
                                                                    "readOnly": [Function],
                                                                    "renderValue": [Function],
                                                                    "tabIndex": [Function],
                                                                    "type": [Function],
                                                                    "value": [Function],
                                                                    "variant": [Function],
                                                                  },
                                                                  "render": [Function],
                                                                }
                                                              }
                                                              inputProps={
                                                                Object {
                                                                  "IconComponent": Object {
                                                                    "$$typeof": Symbol(react.memo),
                                                                    "compare": null,
                                                                    "type": Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "render": [Function],
                                                                    },
                                                                  },
                                                                  "MenuProps": undefined,
                                                                  "SelectDisplayProps": Object {
                                                                    "id": undefined,
                                                                  },
                                                                  "autoWidth": false,
                                                                  "children": Array [
                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                      disabled={true}
                                                                      style={
                                                                        Object {
                                                                          "display": "none",
                                                                        }
                                                                      }
                                                                      value="_default"
                                                                    >
                                                                      
                                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                                    Array [
                                                                      <WithStyles(ForwardRef(MenuItem))
                                                                        value={true}
                                                                      >
                                                                        On
                                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                                      <WithStyles(ForwardRef(MenuItem))
                                                                        value={false}
                                                                      >
                                                                        Off
                                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                                    ],
                                                                  ],
                                                                  "classes": Object {
                                                                    "disabled": "Mui-disabled",
                                                                    "filled": "MuiSelect-filled",
                                                                    "icon": "MuiSelect-icon",
                                                                    "iconFilled": "MuiSelect-iconFilled",
                                                                    "iconOpen": "MuiSelect-iconOpen",
                                                                    "iconOutlined": "MuiSelect-iconOutlined",
                                                                    "nativeInput": "MuiSelect-nativeInput",
                                                                    "outlined": "MuiSelect-outlined",
                                                                    "root": "MuiSelect-root",
                                                                    "select": "MuiSelect-select",
                                                                    "selectMenu": "MuiSelect-selectMenu",
                                                                  },
                                                                  "displayEmpty": false,
                                                                  "labelId": undefined,
                                                                  "multiple": false,
                                                                  "onClose": undefined,
                                                                  "onOpen": undefined,
                                                                  "open": undefined,
                                                                  "renderValue": undefined,
                                                                  "type": undefined,
                                                                  "variant": "standard",
                                                                }
                                                              }
                                                              multiline={false}
                                                              onChange={[Function]}
                                                              onClick={[Function]}
                                                              style={
                                                                Object {
                                                                  "fontSize": "0.8125rem",
                                                                  "width": "120px",
                                                                  "zIndex": 1,
                                                                }
                                                              }
                                                              type="text"
                                                              value={true}
                                                            >
                                                              <div
                                                                className="MuiInputBase-root MuiInput-root MuiInput-underline"
                                                                onClick={[Function]}
                                                                style={
                                                                  Object {
                                                                    "fontSize": "0.8125rem",
                                                                    "width": "120px",
                                                                    "zIndex": 1,
                                                                  }
                                                                }
                                                              >
                                                                <ForwardRef(SelectInput)
                                                                  IconComponent={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.memo),
                                                                      "compare": null,
                                                                      "type": Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "render": [Function],
                                                                      },
                                                                    }
                                                                  }
                                                                  SelectDisplayProps={
                                                                    Object {
                                                                      "id": undefined,
                                                                    }
                                                                  }
                                                                  autoWidth={false}
                                                                  className="MuiInputBase-input MuiInput-input"
                                                                  classes={
                                                                    Object {
                                                                      "disabled": "Mui-disabled",
                                                                      "filled": "MuiSelect-filled",
                                                                      "icon": "MuiSelect-icon",
                                                                      "iconFilled": "MuiSelect-iconFilled",
                                                                      "iconOpen": "MuiSelect-iconOpen",
                                                                      "iconOutlined": "MuiSelect-iconOutlined",
                                                                      "nativeInput": "MuiSelect-nativeInput",
                                                                      "outlined": "MuiSelect-outlined",
                                                                      "root": "MuiSelect-root",
                                                                      "select": "MuiSelect-select",
                                                                      "selectMenu": "MuiSelect-selectMenu",
                                                                    }
                                                                  }
                                                                  disabled={false}
                                                                  displayEmpty={false}
                                                                  inputRef={[Function]}
                                                                  multiple={false}
                                                                  onAnimationStart={[Function]}
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  onFocus={[Function]}
                                                                  value={true}
                                                                  variant="standard"
                                                                >
                                                                  <div
                                                                    aria-haspopup="listbox"
                                                                    className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                    onBlur={[Function]}
                                                                    onFocus={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onMouseDown={[Function]}
                                                                    role="button"
                                                                    tabIndex={0}
                                                                  >
                                                                    On
                                                                  </div>
                                                                  <input
                                                                    aria-hidden={true}
                                                                    className="MuiSelect-nativeInput"
                                                                    onAnimationStart={[Function]}
                                                                    onChange={[Function]}
                                                                    tabIndex={-1}
                                                                    value={true}
                                                                  />
                                                                  <ForwardRef(ArrowDropDownIcon)
                                                                    className="MuiSelect-icon"
                                                                  >
                                                                    <WithStyles(ForwardRef(SvgIcon))
                                                                      className="MuiSelect-icon"
                                                                    >
                                                                      <ForwardRef(SvgIcon)
                                                                        className="MuiSelect-icon"
                                                                        classes={
                                                                          Object {
                                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                            "colorError": "MuiSvgIcon-colorError",
                                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                            "root": "MuiSvgIcon-root",
                                                                          }
                                                                        }
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          className="MuiSvgIcon-root MuiSelect-icon"
                                                                          focusable="false"
                                                                          viewBox="0 0 24 24"
                                                                        >
                                                                          <path
                                                                            d="M7 10l5 5 5-5z"
                                                                          />
                                                                        </svg>
                                                                      </ForwardRef(SvgIcon)>
                                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                                  </ForwardRef(ArrowDropDownIcon)>
                                                                  <WithStyles(ForwardRef(Menu))
                                                                    MenuListProps={
                                                                      Object {
                                                                        "aria-labelledby": undefined,
                                                                        "disableListWrap": true,
                                                                        "role": "listbox",
                                                                      }
                                                                    }
                                                                    PaperProps={
                                                                      Object {
                                                                        "style": Object {
                                                                          "minWidth": undefined,
                                                                        },
                                                                      }
                                                                    }
                                                                    anchorEl={
                                                                      <div
                                                                        aria-haspopup="listbox"
                                                                        class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                        role="button"
                                                                        tabindex="0"
                                                                      >
                                                                        On
                                                                      </div>
                                                                    }
                                                                    id="menu-"
                                                                    onClose={[Function]}
                                                                    open={false}
                                                                  >
                                                                    <ForwardRef(Menu)
                                                                      MenuListProps={
                                                                        Object {
                                                                          "aria-labelledby": undefined,
                                                                          "disableListWrap": true,
                                                                          "role": "listbox",
                                                                        }
                                                                      }
                                                                      PaperProps={
                                                                        Object {
                                                                          "style": Object {
                                                                            "minWidth": undefined,
                                                                          },
                                                                        }
                                                                      }
                                                                      anchorEl={
                                                                        <div
                                                                          aria-haspopup="listbox"
                                                                          class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                          role="button"
                                                                          tabindex="0"
                                                                        >
                                                                          On
                                                                        </div>
                                                                      }
                                                                      classes={
                                                                        Object {
                                                                          "list": "MuiMenu-list",
                                                                          "paper": "MuiMenu-paper",
                                                                        }
                                                                      }
                                                                      id="menu-"
                                                                      onClose={[Function]}
                                                                      open={false}
                                                                    >
                                                                      <WithStyles(ForwardRef(Popover))
                                                                        PaperProps={
                                                                          Object {
                                                                            "classes": Object {
                                                                              "root": "MuiMenu-paper",
                                                                            },
                                                                            "style": Object {
                                                                              "minWidth": undefined,
                                                                            },
                                                                          }
                                                                        }
                                                                        anchorEl={
                                                                          <div
                                                                            aria-haspopup="listbox"
                                                                            class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                            role="button"
                                                                            tabindex="0"
                                                                          >
                                                                            On
                                                                          </div>
                                                                        }
                                                                        anchorOrigin={
                                                                          Object {
                                                                            "horizontal": "left",
                                                                            "vertical": "top",
                                                                          }
                                                                        }
                                                                        getContentAnchorEl={[Function]}
                                                                        id="menu-"
                                                                        onClose={[Function]}
                                                                        onEntering={[Function]}
                                                                        open={false}
                                                                        transformOrigin={
                                                                          Object {
                                                                            "horizontal": "left",
                                                                            "vertical": "top",
                                                                          }
                                                                        }
                                                                        transitionDuration="auto"
                                                                      >
                                                                        <ForwardRef(Popover)
                                                                          PaperProps={
                                                                            Object {
                                                                              "classes": Object {
                                                                                "root": "MuiMenu-paper",
                                                                              },
                                                                              "style": Object {
                                                                                "minWidth": undefined,
                                                                              },
                                                                            }
                                                                          }
                                                                          anchorEl={
                                                                            <div
                                                                              aria-haspopup="listbox"
                                                                              class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                              role="button"
                                                                              tabindex="0"
                                                                            >
                                                                              On
                                                                            </div>
                                                                          }
                                                                          anchorOrigin={
                                                                            Object {
                                                                              "horizontal": "left",
                                                                              "vertical": "top",
                                                                            }
                                                                          }
                                                                          classes={
                                                                            Object {
                                                                              "paper": "MuiPopover-paper",
                                                                              "root": "MuiPopover-root",
                                                                            }
                                                                          }
                                                                          getContentAnchorEl={[Function]}
                                                                          id="menu-"
                                                                          onClose={[Function]}
                                                                          onEntering={[Function]}
                                                                          open={false}
                                                                          transformOrigin={
                                                                            Object {
                                                                              "horizontal": "left",
                                                                              "vertical": "top",
                                                                            }
                                                                          }
                                                                          transitionDuration="auto"
                                                                        >
                                                                          <ForwardRef(Modal)
                                                                            BackdropProps={
                                                                              Object {
                                                                                "invisible": true,
                                                                              }
                                                                            }
                                                                            className="MuiPopover-root"
                                                                            container={<body />}
                                                                            id="menu-"
                                                                            onClose={[Function]}
                                                                            open={false}
                                                                          />
                                                                        </ForwardRef(Popover)>
                                                                      </WithStyles(ForwardRef(Popover))>
                                                                    </ForwardRef(Menu)>
                                                                  </WithStyles(ForwardRef(Menu))>
                                                                </ForwardRef(SelectInput)>
                                                              </div>
                                                            </ForwardRef(InputBase)>
                                                          </WithStyles(ForwardRef(InputBase))>
                                                        </ForwardRef(Input)>
                                                      </WithStyles(ForwardRef(Input))>
                                                    </ForwardRef(Select)>
                                                  </WithStyles(ForwardRef(Select))>
                                                   
                                                </span>
                                              </SelectInput>
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                        <WithStyles(ForwardRef(TableCell))
                                          key="settingsFrom"
                                          onClick={[Function]}
                                          style={Object {}}
                                        >
                                          <ForwardRef(TableCell)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            onClick={[Function]}
                                            style={Object {}}
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body"
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              <ColorHighlighter
                                                data={
                                                  Object {
                                                    "catagory": "Basic Pairing Rules",
                                                    "id": 5,
                                                    "name": "Late Duty",
                                                    "settingsFrom": "Baseline Rules",
                                                    "state": true,
                                                    "type": "Soft Rule",
                                                  }
                                                }
                                                header="isEdited"
                                                highlighter={[Function]}
                                                style={
                                                  Object {
                                                    "color": "#FF650C",
                                                  }
                                                }
                                                value="Baseline Rules"
                                              >
                                                <span
                                                  style={Object {}}
                                                >
                                                  Baseline Rules
                                                </span>
                                              </ColorHighlighter>
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                        <WithStyles(ForwardRef(TableCell))
                                          key="catagory"
                                          onClick={[Function]}
                                          style={Object {}}
                                        >
                                          <ForwardRef(TableCell)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            onClick={[Function]}
                                            style={Object {}}
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body"
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              Basic Pairing Rules
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                        <WithStyles(ForwardRef(TableCell))
                                          key="type"
                                          onClick={[Function]}
                                          style={Object {}}
                                        >
                                          <ForwardRef(TableCell)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            onClick={[Function]}
                                            style={Object {}}
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body"
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              Soft Rule
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                      </tr>
                                    </ForwardRef(TableRow)>
                                  </WithStyles(ForwardRef(TableRow))>
                                  <WithStyles(ForwardRef(TableRow))>
                                    <ForwardRef(TableRow)
                                      classes={
                                        Object {
                                          "footer": "MuiTableRow-footer",
                                          "head": "MuiTableRow-head",
                                          "hover": "MuiTableRow-hover",
                                          "root": "MuiTableRow-root",
                                          "selected": "Mui-selected",
                                        }
                                      }
                                    >
                                      <tr
                                        className="MuiTableRow-root"
                                        role={null}
                                      >
                                        <WithStyles(ForwardRef(TableCell))
                                          className="no-border"
                                          colSpan={6}
                                          style={
                                            Object {
                                              "padding": 0,
                                            }
                                          }
                                        >
                                          <ForwardRef(TableCell)
                                            className="no-border"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTableCell-alignCenter",
                                                "alignJustify": "MuiTableCell-alignJustify",
                                                "alignLeft": "MuiTableCell-alignLeft",
                                                "alignRight": "MuiTableCell-alignRight",
                                                "body": "MuiTableCell-body",
                                                "footer": "MuiTableCell-footer",
                                                "head": "MuiTableCell-head",
                                                "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                "paddingNone": "MuiTableCell-paddingNone",
                                                "root": "MuiTableCell-root",
                                                "sizeSmall": "MuiTableCell-sizeSmall",
                                                "stickyHeader": "MuiTableCell-stickyHeader",
                                              }
                                            }
                                            colSpan={6}
                                            style={
                                              Object {
                                                "padding": 0,
                                              }
                                            }
                                          >
                                            <td
                                              aria-sort={null}
                                              className="MuiTableCell-root MuiTableCell-body no-border"
                                              colSpan={6}
                                              style={
                                                Object {
                                                  "padding": 0,
                                                }
                                              }
                                            >
                                              <WithStyles(ForwardRef(Collapse))
                                                in={false}
                                                timeout="auto"
                                                unmountOnExit={true}
                                              >
                                                <ForwardRef(Collapse)
                                                  classes={
                                                    Object {
                                                      "container": "MuiCollapse-container",
                                                      "entered": "MuiCollapse-entered",
                                                      "hidden": "MuiCollapse-hidden",
                                                      "wrapper": "MuiCollapse-wrapper",
                                                      "wrapperInner": "MuiCollapse-wrapperInner",
                                                    }
                                                  }
                                                  in={false}
                                                  timeout="auto"
                                                  unmountOnExit={true}
                                                >
                                                  <Transition
                                                    addEndListener={[Function]}
                                                    appear={false}
                                                    enter={true}
                                                    exit={true}
                                                    in={false}
                                                    mountOnEnter={false}
                                                    onEnter={[Function]}
                                                    onEntered={[Function]}
                                                    onEntering={[Function]}
                                                    onExit={[Function]}
                                                    onExited={[Function]}
                                                    onExiting={[Function]}
                                                    timeout={null}
                                                    unmountOnExit={true}
                                                  />
                                                </ForwardRef(Collapse)>
                                              </WithStyles(ForwardRef(Collapse))>
                                            </td>
                                          </ForwardRef(TableCell)>
                                        </WithStyles(ForwardRef(TableCell))>
                                      </tr>
                                    </ForwardRef(TableRow)>
                                  </WithStyles(ForwardRef(TableRow))>
                                </tbody>
                              </ForwardRef(TableBody)>
                            </WithStyles(ForwardRef(TableBody))>
                          </RootRef>
                        </div>
                      </ScrollBar>
                    </GenericTableBody>
                  </table>
                </ForwardRef(Table)>
              </WithStyles(ForwardRef(Table))>
            </div>
          </ScrollBar>
        </div>
      </GenericCollapsibleTable__TableContainer>
    </div>
  </GenericCollapsibleTable__BoxShadow>
  <TableFooter
    current={5}
    isFilter={false}
    name="Rules"
    total={5}
    totalDataSize={1}
  >
    <TableFooter__FooterText>
      <p
        className="c7"
      >
        1 rules
      </p>
    </TableFooter__FooterText>
  </TableFooter>
</GenericCollapsibleTable>
`;
