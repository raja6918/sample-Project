// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test Collapsible Table Body Component Toolbar Component renders 1`] = `
<WithStyles(ForwardRef(Table))>
  <ForwardRef(Table)
    classes={
      Object {
        "root": "MuiTable-root",
        "stickyHeader": "MuiTable-stickyHeader",
      }
    }
  >
    <table
      className="MuiTable-root"
      role={null}
    >
      <GenericTableBody
        collapsibleComponent={[Function]}
        collapsibleComponentProps={Object {}}
        data={
          Array [
            Object {
              "catagory": "CAR Government Regulation",
              "id": 1,
              "name": "Night Duty",
              "settingsFrom": "Baseline Rules",
              "state": true,
              "type": "Definition",
            },
            Object {
              "catagory": "CAR Government Regulation",
              "id": 2,
              "name": "Split Duty Extension to Maximum FDP (Split Duty Extension to Maximum FDP)",
              "settingsFrom": "Flight Desk",
              "state": false,
              "type": "Duty Time Limitation",
            },
            Object {
              "catagory": "CAR Government Regulation",
              "id": 3,
              "name": "Minimum Rest at Home Base (Minimum Rest at Home Base)",
              "settingsFrom": "Baseline Rules",
              "state": true,
              "type": "Rest RUle",
            },
            Object {
              "catagory": "OverSeas Cabin Contract",
              "id": 4,
              "isEdited": true,
              "name": "Earily Duty",
              "settingsFrom": "Widebody",
              "state": false,
              "type": "Cost RUle",
            },
            Object {
              "catagory": "Basic Pairing Rules",
              "id": 5,
              "name": "Late Duty",
              "settingsFrom": "Baseline Rules",
              "state": true,
              "type": "Soft Rule",
            },
          ]
        }
        disableRowStyle={
          [MockFunction] {
            "calls": Array [
              Array [
                Object {
                  "catagory": "CAR Government Regulation",
                  "id": 1,
                  "name": "Night Duty",
                  "settingsFrom": "Baseline Rules",
                  "state": true,
                  "type": "Definition",
                },
                Object {
                  "displayName": "DATA.rules.headers.name",
                  "field": "name",
                  "transformer": [Function],
                  "transformerStyle": Object {
                    "maxWidth": "235px",
                  },
                },
              ],
              Array [
                Object {
                  "catagory": "CAR Government Regulation",
                  "id": 1,
                  "name": "Night Duty",
                  "settingsFrom": "Baseline Rules",
                  "state": true,
                  "type": "Definition",
                },
                Object {
                  "cellStyle": Object {
                    "width": "120px",
                  },
                  "component": [Function],
                  "componentStyle": Object {
                    "fontSize": "0.8125rem",
                    "width": "120px",
                  },
                  "disableFilter": true,
                  "displayName": "DATA.rules.headers.state",
                  "field": "state",
                  "props": Object {
                    "items": Array [
                      Object {
                        "display": "On",
                        "value": true,
                      },
                      Object {
                        "display": "Off",
                        "value": false,
                      },
                    ],
                    "onChange": [Function],
                  },
                },
              ],
              Array [
                Object {
                  "catagory": "CAR Government Regulation",
                  "id": 1,
                  "name": "Night Duty",
                  "settingsFrom": "Baseline Rules",
                  "state": true,
                  "type": "Definition",
                },
                Object {
                  "component": [Function],
                  "componentStyle": Object {
                    "color": "#FF650C",
                  },
                  "displayName": "DATA.rules.headers.settingsFrom",
                  "field": "settingsFrom",
                  "props": Object {
                    "header": "isEdited",
                  },
                },
              ],
              Array [
                Object {
                  "catagory": "CAR Government Regulation",
                  "id": 1,
                  "name": "Night Duty",
                  "settingsFrom": "Baseline Rules",
                  "state": true,
                  "type": "Definition",
                },
                Object {
                  "displayName": "DATA.rules.headers.catagory",
                  "field": "catagory",
                },
              ],
              Array [
                Object {
                  "catagory": "CAR Government Regulation",
                  "id": 1,
                  "name": "Night Duty",
                  "settingsFrom": "Baseline Rules",
                  "state": true,
                  "type": "Definition",
                },
                Object {
                  "displayName": "DATA.rules.headers.type",
                  "field": "type",
                },
              ],
              Array [
                Object {
                  "catagory": "CAR Government Regulation",
                  "id": 2,
                  "name": "Split Duty Extension to Maximum FDP (Split Duty Extension to Maximum FDP)",
                  "settingsFrom": "Flight Desk",
                  "state": false,
                  "type": "Duty Time Limitation",
                },
                Object {
                  "displayName": "DATA.rules.headers.name",
                  "field": "name",
                  "transformer": [Function],
                  "transformerStyle": Object {
                    "maxWidth": "235px",
                  },
                },
              ],
              Array [
                Object {
                  "catagory": "CAR Government Regulation",
                  "id": 2,
                  "name": "Split Duty Extension to Maximum FDP (Split Duty Extension to Maximum FDP)",
                  "settingsFrom": "Flight Desk",
                  "state": false,
                  "type": "Duty Time Limitation",
                },
                Object {
                  "cellStyle": Object {
                    "width": "120px",
                  },
                  "component": [Function],
                  "componentStyle": Object {
                    "fontSize": "0.8125rem",
                    "width": "120px",
                  },
                  "disableFilter": true,
                  "displayName": "DATA.rules.headers.state",
                  "field": "state",
                  "props": Object {
                    "items": Array [
                      Object {
                        "display": "On",
                        "value": true,
                      },
                      Object {
                        "display": "Off",
                        "value": false,
                      },
                    ],
                    "onChange": [Function],
                  },
                },
              ],
              Array [
                Object {
                  "catagory": "CAR Government Regulation",
                  "id": 2,
                  "name": "Split Duty Extension to Maximum FDP (Split Duty Extension to Maximum FDP)",
                  "settingsFrom": "Flight Desk",
                  "state": false,
                  "type": "Duty Time Limitation",
                },
                Object {
                  "component": [Function],
                  "componentStyle": Object {
                    "color": "#FF650C",
                  },
                  "displayName": "DATA.rules.headers.settingsFrom",
                  "field": "settingsFrom",
                  "props": Object {
                    "header": "isEdited",
                  },
                },
              ],
              Array [
                Object {
                  "catagory": "CAR Government Regulation",
                  "id": 2,
                  "name": "Split Duty Extension to Maximum FDP (Split Duty Extension to Maximum FDP)",
                  "settingsFrom": "Flight Desk",
                  "state": false,
                  "type": "Duty Time Limitation",
                },
                Object {
                  "displayName": "DATA.rules.headers.catagory",
                  "field": "catagory",
                },
              ],
              Array [
                Object {
                  "catagory": "CAR Government Regulation",
                  "id": 2,
                  "name": "Split Duty Extension to Maximum FDP (Split Duty Extension to Maximum FDP)",
                  "settingsFrom": "Flight Desk",
                  "state": false,
                  "type": "Duty Time Limitation",
                },
                Object {
                  "displayName": "DATA.rules.headers.type",
                  "field": "type",
                },
              ],
              Array [
                Object {
                  "catagory": "CAR Government Regulation",
                  "id": 3,
                  "name": "Minimum Rest at Home Base (Minimum Rest at Home Base)",
                  "settingsFrom": "Baseline Rules",
                  "state": true,
                  "type": "Rest RUle",
                },
                Object {
                  "displayName": "DATA.rules.headers.name",
                  "field": "name",
                  "transformer": [Function],
                  "transformerStyle": Object {
                    "maxWidth": "235px",
                  },
                },
              ],
              Array [
                Object {
                  "catagory": "CAR Government Regulation",
                  "id": 3,
                  "name": "Minimum Rest at Home Base (Minimum Rest at Home Base)",
                  "settingsFrom": "Baseline Rules",
                  "state": true,
                  "type": "Rest RUle",
                },
                Object {
                  "cellStyle": Object {
                    "width": "120px",
                  },
                  "component": [Function],
                  "componentStyle": Object {
                    "fontSize": "0.8125rem",
                    "width": "120px",
                  },
                  "disableFilter": true,
                  "displayName": "DATA.rules.headers.state",
                  "field": "state",
                  "props": Object {
                    "items": Array [
                      Object {
                        "display": "On",
                        "value": true,
                      },
                      Object {
                        "display": "Off",
                        "value": false,
                      },
                    ],
                    "onChange": [Function],
                  },
                },
              ],
              Array [
                Object {
                  "catagory": "CAR Government Regulation",
                  "id": 3,
                  "name": "Minimum Rest at Home Base (Minimum Rest at Home Base)",
                  "settingsFrom": "Baseline Rules",
                  "state": true,
                  "type": "Rest RUle",
                },
                Object {
                  "component": [Function],
                  "componentStyle": Object {
                    "color": "#FF650C",
                  },
                  "displayName": "DATA.rules.headers.settingsFrom",
                  "field": "settingsFrom",
                  "props": Object {
                    "header": "isEdited",
                  },
                },
              ],
              Array [
                Object {
                  "catagory": "CAR Government Regulation",
                  "id": 3,
                  "name": "Minimum Rest at Home Base (Minimum Rest at Home Base)",
                  "settingsFrom": "Baseline Rules",
                  "state": true,
                  "type": "Rest RUle",
                },
                Object {
                  "displayName": "DATA.rules.headers.catagory",
                  "field": "catagory",
                },
              ],
              Array [
                Object {
                  "catagory": "CAR Government Regulation",
                  "id": 3,
                  "name": "Minimum Rest at Home Base (Minimum Rest at Home Base)",
                  "settingsFrom": "Baseline Rules",
                  "state": true,
                  "type": "Rest RUle",
                },
                Object {
                  "displayName": "DATA.rules.headers.type",
                  "field": "type",
                },
              ],
              Array [
                Object {
                  "catagory": "OverSeas Cabin Contract",
                  "id": 4,
                  "isEdited": true,
                  "name": "Earily Duty",
                  "settingsFrom": "Widebody",
                  "state": false,
                  "type": "Cost RUle",
                },
                Object {
                  "displayName": "DATA.rules.headers.name",
                  "field": "name",
                  "transformer": [Function],
                  "transformerStyle": Object {
                    "maxWidth": "235px",
                  },
                },
              ],
              Array [
                Object {
                  "catagory": "OverSeas Cabin Contract",
                  "id": 4,
                  "isEdited": true,
                  "name": "Earily Duty",
                  "settingsFrom": "Widebody",
                  "state": false,
                  "type": "Cost RUle",
                },
                Object {
                  "cellStyle": Object {
                    "width": "120px",
                  },
                  "component": [Function],
                  "componentStyle": Object {
                    "fontSize": "0.8125rem",
                    "width": "120px",
                  },
                  "disableFilter": true,
                  "displayName": "DATA.rules.headers.state",
                  "field": "state",
                  "props": Object {
                    "items": Array [
                      Object {
                        "display": "On",
                        "value": true,
                      },
                      Object {
                        "display": "Off",
                        "value": false,
                      },
                    ],
                    "onChange": [Function],
                  },
                },
              ],
              Array [
                Object {
                  "catagory": "OverSeas Cabin Contract",
                  "id": 4,
                  "isEdited": true,
                  "name": "Earily Duty",
                  "settingsFrom": "Widebody",
                  "state": false,
                  "type": "Cost RUle",
                },
                Object {
                  "component": [Function],
                  "componentStyle": Object {
                    "color": "#FF650C",
                  },
                  "displayName": "DATA.rules.headers.settingsFrom",
                  "field": "settingsFrom",
                  "props": Object {
                    "header": "isEdited",
                  },
                },
              ],
              Array [
                Object {
                  "catagory": "OverSeas Cabin Contract",
                  "id": 4,
                  "isEdited": true,
                  "name": "Earily Duty",
                  "settingsFrom": "Widebody",
                  "state": false,
                  "type": "Cost RUle",
                },
                Object {
                  "displayName": "DATA.rules.headers.catagory",
                  "field": "catagory",
                },
              ],
              Array [
                Object {
                  "catagory": "OverSeas Cabin Contract",
                  "id": 4,
                  "isEdited": true,
                  "name": "Earily Duty",
                  "settingsFrom": "Widebody",
                  "state": false,
                  "type": "Cost RUle",
                },
                Object {
                  "displayName": "DATA.rules.headers.type",
                  "field": "type",
                },
              ],
              Array [
                Object {
                  "catagory": "Basic Pairing Rules",
                  "id": 5,
                  "name": "Late Duty",
                  "settingsFrom": "Baseline Rules",
                  "state": true,
                  "type": "Soft Rule",
                },
                Object {
                  "displayName": "DATA.rules.headers.name",
                  "field": "name",
                  "transformer": [Function],
                  "transformerStyle": Object {
                    "maxWidth": "235px",
                  },
                },
              ],
              Array [
                Object {
                  "catagory": "Basic Pairing Rules",
                  "id": 5,
                  "name": "Late Duty",
                  "settingsFrom": "Baseline Rules",
                  "state": true,
                  "type": "Soft Rule",
                },
                Object {
                  "cellStyle": Object {
                    "width": "120px",
                  },
                  "component": [Function],
                  "componentStyle": Object {
                    "fontSize": "0.8125rem",
                    "width": "120px",
                  },
                  "disableFilter": true,
                  "displayName": "DATA.rules.headers.state",
                  "field": "state",
                  "props": Object {
                    "items": Array [
                      Object {
                        "display": "On",
                        "value": true,
                      },
                      Object {
                        "display": "Off",
                        "value": false,
                      },
                    ],
                    "onChange": [Function],
                  },
                },
              ],
              Array [
                Object {
                  "catagory": "Basic Pairing Rules",
                  "id": 5,
                  "name": "Late Duty",
                  "settingsFrom": "Baseline Rules",
                  "state": true,
                  "type": "Soft Rule",
                },
                Object {
                  "component": [Function],
                  "componentStyle": Object {
                    "color": "#FF650C",
                  },
                  "displayName": "DATA.rules.headers.settingsFrom",
                  "field": "settingsFrom",
                  "props": Object {
                    "header": "isEdited",
                  },
                },
              ],
              Array [
                Object {
                  "catagory": "Basic Pairing Rules",
                  "id": 5,
                  "name": "Late Duty",
                  "settingsFrom": "Baseline Rules",
                  "state": true,
                  "type": "Soft Rule",
                },
                Object {
                  "displayName": "DATA.rules.headers.catagory",
                  "field": "catagory",
                },
              ],
              Array [
                Object {
                  "catagory": "Basic Pairing Rules",
                  "id": 5,
                  "name": "Late Duty",
                  "settingsFrom": "Baseline Rules",
                  "state": true,
                  "type": "Soft Rule",
                },
                Object {
                  "displayName": "DATA.rules.headers.type",
                  "field": "type",
                },
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": Object {},
              },
              Object {
                "type": "return",
                "value": Object {},
              },
              Object {
                "type": "return",
                "value": Object {},
              },
              Object {
                "type": "return",
                "value": Object {},
              },
              Object {
                "type": "return",
                "value": Object {},
              },
              Object {
                "type": "return",
                "value": Object {},
              },
              Object {
                "type": "return",
                "value": Object {},
              },
              Object {
                "type": "return",
                "value": Object {},
              },
              Object {
                "type": "return",
                "value": Object {},
              },
              Object {
                "type": "return",
                "value": Object {},
              },
              Object {
                "type": "return",
                "value": Object {},
              },
              Object {
                "type": "return",
                "value": Object {},
              },
              Object {
                "type": "return",
                "value": Object {},
              },
              Object {
                "type": "return",
                "value": Object {},
              },
              Object {
                "type": "return",
                "value": Object {},
              },
              Object {
                "type": "return",
                "value": Object {},
              },
              Object {
                "type": "return",
                "value": Object {},
              },
              Object {
                "type": "return",
                "value": Object {},
              },
              Object {
                "type": "return",
                "value": Object {},
              },
              Object {
                "type": "return",
                "value": Object {},
              },
              Object {
                "type": "return",
                "value": Object {},
              },
              Object {
                "type": "return",
                "value": Object {},
              },
              Object {
                "type": "return",
                "value": Object {},
              },
              Object {
                "type": "return",
                "value": Object {},
              },
              Object {
                "type": "return",
                "value": Object {},
              },
            ],
          }
        }
        enableEdits={false}
        handleClick={[MockFunction]}
        handleDeleteItem={[MockFunction]}
        handleEditItem={[MockFunction]}
        handleFetchData={[Function]}
        headers={
          Array [
            Object {
              "displayName": "DATA.rules.headers.name",
              "field": "name",
              "transformer": [Function],
              "transformerStyle": Object {
                "maxWidth": "235px",
              },
            },
            Object {
              "cellStyle": Object {
                "width": "120px",
              },
              "component": [Function],
              "componentStyle": Object {
                "fontSize": "0.8125rem",
                "width": "120px",
              },
              "disableFilter": true,
              "displayName": "DATA.rules.headers.state",
              "field": "state",
              "props": Object {
                "items": Array [
                  Object {
                    "display": "On",
                    "value": true,
                  },
                  Object {
                    "display": "Off",
                    "value": false,
                  },
                ],
                "onChange": [Function],
              },
            },
            Object {
              "component": [Function],
              "componentStyle": Object {
                "color": "#FF650C",
              },
              "displayName": "DATA.rules.headers.settingsFrom",
              "field": "settingsFrom",
              "props": Object {
                "header": "isEdited",
              },
            },
            Object {
              "displayName": "DATA.rules.headers.catagory",
              "field": "catagory",
            },
            Object {
              "displayName": "DATA.rules.headers.type",
              "field": "type",
            },
          ]
        }
        isSelected={
          [MockFunction] {
            "calls": Array [
              Array [
                1,
              ],
              Array [
                1,
              ],
              Array [
                2,
              ],
              Array [
                2,
              ],
              Array [
                3,
              ],
              Array [
                3,
              ],
              Array [
                4,
              ],
              Array [
                4,
              ],
              Array [
                5,
              ],
              Array [
                5,
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": false,
              },
              Object {
                "type": "return",
                "value": false,
              },
              Object {
                "type": "return",
                "value": false,
              },
              Object {
                "type": "return",
                "value": false,
              },
              Object {
                "type": "return",
                "value": false,
              },
              Object {
                "type": "return",
                "value": false,
              },
              Object {
                "type": "return",
                "value": false,
              },
              Object {
                "type": "return",
                "value": false,
              },
              Object {
                "type": "return",
                "value": false,
              },
              Object {
                "type": "return",
                "value": false,
              },
            ],
          }
        }
        keyField="code"
        selectedItems={Array []}
        triggerResize={[MockFunction]}
      >
        <ScrollBar
          className=""
          component="div"
          containerRef={[Function]}
          onScrollY={[Function]}
          option={
            Object {
              "swipeEasing": true,
              "wheelSpeed": 0.4,
            }
          }
        >
          <div
            className="scrollbar-container "
          >
            <RootRef>
              <WithStyles(ForwardRef(TableBody))
                onScroll={[Function]}
              >
                <ForwardRef(TableBody)
                  classes={
                    Object {
                      "root": "MuiTableBody-root",
                    }
                  }
                  onScroll={[Function]}
                >
                  <tbody
                    className="MuiTableBody-root"
                    onScroll={[Function]}
                    role={null}
                  >
                    <WithStyles(ForwardRef(TableRow))
                      classes={
                        Object {
                          "hover": "hover",
                          "root": "MuiTableRow",
                          "selected": "selected",
                        }
                      }
                      hover={true}
                      id="tablerow1"
                      selected={false}
                    >
                      <ForwardRef(TableRow)
                        classes={
                          Object {
                            "footer": "MuiTableRow-footer",
                            "head": "MuiTableRow-head",
                            "hover": "MuiTableRow-hover hover",
                            "root": "MuiTableRow-root MuiTableRow",
                            "selected": "Mui-selected selected",
                          }
                        }
                        hover={true}
                        id="tablerow1"
                        selected={false}
                      >
                        <tr
                          className="MuiTableRow-root MuiTableRow MuiTableRow-hover hover"
                          id="tablerow1"
                          role={null}
                        >
                          <WithStyles(ForwardRef(TableCell))
                            style={
                              Object {
                                "height": 40,
                                "paddingLeft": "18px",
                                "paddingRight": "0px",
                                "width": 40,
                              }
                            }
                          >
                            <ForwardRef(TableCell)
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              style={
                                Object {
                                  "height": 40,
                                  "paddingLeft": "18px",
                                  "paddingRight": "0px",
                                  "width": 40,
                                }
                              }
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body"
                                style={
                                  Object {
                                    "height": 40,
                                    "paddingLeft": "18px",
                                    "paddingRight": "0px",
                                    "width": 40,
                                  }
                                }
                              >
                                <WithStyles(ForwardRef(Checkbox))
                                  checked={false}
                                  color="primary"
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "height": 20,
                                      "width": 20,
                                    }
                                  }
                                >
                                  <ForwardRef(Checkbox)
                                    checked={false}
                                    classes={
                                      Object {
                                        "checked": "Mui-checked",
                                        "colorPrimary": "MuiCheckbox-colorPrimary",
                                        "colorSecondary": "MuiCheckbox-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "indeterminate": "MuiCheckbox-indeterminate",
                                        "root": "MuiCheckbox-root",
                                      }
                                    }
                                    color="primary"
                                    onClick={[Function]}
                                    style={
                                      Object {
                                        "height": 20,
                                        "width": 20,
                                      }
                                    }
                                  >
                                    <WithStyles(ForwardRef(SwitchBase))
                                      checked={false}
                                      checkedIcon={<Memo />}
                                      classes={
                                        Object {
                                          "checked": "Mui-checked",
                                          "disabled": "Mui-disabled",
                                          "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                                        }
                                      }
                                      color="primary"
                                      icon={<Memo />}
                                      inputProps={
                                        Object {
                                          "data-indeterminate": false,
                                        }
                                      }
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "height": 20,
                                          "width": 20,
                                        }
                                      }
                                      type="checkbox"
                                    >
                                      <ForwardRef(SwitchBase)
                                        checked={false}
                                        checkedIcon={<Memo />}
                                        classes={
                                          Object {
                                            "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                                            "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                                            "input": "PrivateSwitchBase-input-4",
                                            "root": "PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary",
                                          }
                                        }
                                        color="primary"
                                        icon={<Memo />}
                                        inputProps={
                                          Object {
                                            "data-indeterminate": false,
                                          }
                                        }
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "height": 20,
                                            "width": 20,
                                          }
                                        }
                                        type="checkbox"
                                      >
                                        <WithStyles(ForwardRef(IconButton))
                                          className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary"
                                          color="primary"
                                          component="span"
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          style={
                                            Object {
                                              "height": 20,
                                              "width": 20,
                                            }
                                          }
                                          tabIndex={null}
                                        >
                                          <ForwardRef(IconButton)
                                            className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary"
                                            classes={
                                              Object {
                                                "colorInherit": "MuiIconButton-colorInherit",
                                                "colorPrimary": "MuiIconButton-colorPrimary",
                                                "colorSecondary": "MuiIconButton-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "edgeEnd": "MuiIconButton-edgeEnd",
                                                "edgeStart": "MuiIconButton-edgeStart",
                                                "label": "MuiIconButton-label",
                                                "root": "MuiIconButton-root",
                                                "sizeSmall": "MuiIconButton-sizeSmall",
                                              }
                                            }
                                            color="primary"
                                            component="span"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            style={
                                              Object {
                                                "height": 20,
                                                "width": 20,
                                              }
                                            }
                                            tabIndex={null}
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              centerRipple={true}
                                              className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                              component="span"
                                              disabled={false}
                                              focusRipple={true}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              style={
                                                Object {
                                                  "height": 20,
                                                  "width": 20,
                                                }
                                              }
                                              tabIndex={null}
                                            >
                                              <ForwardRef(ButtonBase)
                                                centerRipple={true}
                                                className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="span"
                                                disabled={false}
                                                focusRipple={true}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                style={
                                                  Object {
                                                    "height": 20,
                                                    "width": 20,
                                                  }
                                                }
                                                tabIndex={null}
                                              >
                                                <span
                                                  aria-disabled={false}
                                                  className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  style={
                                                    Object {
                                                      "height": 20,
                                                      "width": 20,
                                                    }
                                                  }
                                                  tabIndex={null}
                                                >
                                                  <span
                                                    className="MuiIconButton-label"
                                                  >
                                                    <input
                                                      checked={false}
                                                      className="PrivateSwitchBase-input-4"
                                                      data-indeterminate={false}
                                                      onChange={[Function]}
                                                      type="checkbox"
                                                    />
                                                    <ForwardRef(CheckBoxOutlineBlankIcon)>
                                                      <WithStyles(ForwardRef(SvgIcon))>
                                                        <ForwardRef(SvgIcon)
                                                          classes={
                                                            Object {
                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                              "colorError": "MuiSvgIcon-colorError",
                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                              "root": "MuiSvgIcon-root",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            className="MuiSvgIcon-root"
                                                            focusable="false"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <path
                                                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                            />
                                                          </svg>
                                                        </ForwardRef(SvgIcon)>
                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                    </ForwardRef(CheckBoxOutlineBlankIcon)>
                                                  </span>
                                                  <WithStyles(memo)
                                                    center={true}
                                                  >
                                                    <ForwardRef(TouchRipple)
                                                      center={true}
                                                      classes={
                                                        Object {
                                                          "child": "MuiTouchRipple-child",
                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                          "ripple": "MuiTouchRipple-ripple",
                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                          "root": "MuiTouchRipple-root",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        className="MuiTouchRipple-root"
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          component={null}
                                                          exit={true}
                                                        />
                                                      </span>
                                                    </ForwardRef(TouchRipple)>
                                                  </WithStyles(memo)>
                                                </span>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(IconButton)>
                                        </WithStyles(ForwardRef(IconButton))>
                                      </ForwardRef(SwitchBase)>
                                    </WithStyles(ForwardRef(SwitchBase))>
                                  </ForwardRef(Checkbox)>
                                </WithStyles(ForwardRef(Checkbox))>
                                <WithStyles(ForwardRef(IconButton))
                                  aria-label="expand row"
                                  onClick={[Function]}
                                  size="small"
                                  style={
                                    Object {
                                      "marginLeft": "10px",
                                    }
                                  }
                                >
                                  <ForwardRef(IconButton)
                                    aria-label="expand row"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit",
                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                        "edgeStart": "MuiIconButton-edgeStart",
                                        "label": "MuiIconButton-label",
                                        "root": "MuiIconButton-root",
                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                      }
                                    }
                                    onClick={[Function]}
                                    size="small"
                                    style={
                                      Object {
                                        "marginLeft": "10px",
                                      }
                                    }
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      aria-label="expand row"
                                      centerRipple={true}
                                      className="MuiIconButton-root MuiIconButton-sizeSmall"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "marginLeft": "10px",
                                        }
                                      }
                                    >
                                      <ForwardRef(ButtonBase)
                                        aria-label="expand row"
                                        centerRipple={true}
                                        className="MuiIconButton-root MuiIconButton-sizeSmall"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "marginLeft": "10px",
                                          }
                                        }
                                      >
                                        <button
                                          aria-label="expand row"
                                          className="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          style={
                                            Object {
                                              "marginLeft": "10px",
                                            }
                                          }
                                          tabIndex={0}
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <ForwardRef(KeyboardArrowDownIcon)>
                                              <WithStyles(ForwardRef(SvgIcon))>
                                                <ForwardRef(SvgIcon)
                                                  classes={
                                                    Object {
                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                      "colorError": "MuiSvgIcon-colorError",
                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                      "root": "MuiSvgIcon-root",
                                                    }
                                                  }
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="MuiSvgIcon-root"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SvgIcon)>
                                              </WithStyles(ForwardRef(SvgIcon))>
                                            </ForwardRef(KeyboardArrowDownIcon)>
                                          </span>
                                          <WithStyles(memo)
                                            center={true}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={true}
                                              classes={
                                                Object {
                                                  "child": "MuiTouchRipple-child",
                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                  "ripple": "MuiTouchRipple-ripple",
                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                  "root": "MuiTouchRipple-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="MuiTouchRipple-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(memo)>
                                        </button>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(IconButton)>
                                </WithStyles(ForwardRef(IconButton))>
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                          <WithStyles(ForwardRef(TableCell))
                            key="name"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <ForwardRef(TableCell)
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              onClick={[Function]}
                              style={Object {}}
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body"
                                onClick={[Function]}
                                style={Object {}}
                              >
                                <OverflowTip
                                  content="Night Duty"
                                  maxWidth="200px"
                                  tooltipStyle={
                                    Object {
                                      "maxWidth": "235px",
                                    }
                                  }
                                  value="Night Duty"
                                >
                                  <SierraMuiTooltip
                                    classes={
                                      Object {
                                        "popper": "ellipse-zoom-popper",
                                      }
                                    }
                                    disableHoverListener={true}
                                    interactive={true}
                                    style={
                                      Object {
                                        "maxWidth": "235px",
                                      }
                                    }
                                    title="Night Duty"
                                  >
                                    <WithStyles(ForwardRef(Tooltip))
                                      arrow={true}
                                      classes={
                                        Object {
                                          "popper": "ellipse-zoom-popper",
                                        }
                                      }
                                      disableHoverListener={true}
                                      interactive={true}
                                      style={
                                        Object {
                                          "maxWidth": "235px",
                                        }
                                      }
                                      title="Night Duty"
                                    >
                                      <ForwardRef(Tooltip)
                                        arrow={true}
                                        classes={
                                          Object {
                                            "arrow": "MuiTooltip-arrow",
                                            "popper": "MuiTooltip-popper ellipse-zoom-popper",
                                            "popperArrow": "MuiTooltip-popperArrow",
                                            "popperInteractive": "MuiTooltip-popperInteractive",
                                            "tooltip": "MuiTooltip-tooltip",
                                            "tooltipArrow": "MuiTooltip-tooltipArrow",
                                            "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                            "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                            "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                            "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                            "touch": "MuiTooltip-touch",
                                          }
                                        }
                                        disableHoverListener={true}
                                        interactive={true}
                                        style={
                                          Object {
                                            "maxWidth": "235px",
                                          }
                                        }
                                        title="Night Duty"
                                      >
                                        <div
                                          aria-describedby={null}
                                          className=""
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchStart={[Function]}
                                          style={
                                            Object {
                                              "maxWidth": "200px",
                                              "overflow": "hidden",
                                              "textOverflow": "ellipsis",
                                              "whiteSpace": "nowrap",
                                            }
                                          }
                                          title={null}
                                        >
                                          Night Duty
                                        </div>
                                        <ForwardRef(Popper)
                                          anchorEl={
                                            <div
                                              class=""
                                              style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 200px;"
                                            >
                                              Night Duty
                                            </div>
                                          }
                                          className="MuiTooltip-popper ellipse-zoom-popper MuiTooltip-popperInteractive MuiTooltip-popperArrow"
                                          id={null}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          open={false}
                                          placement="bottom"
                                          popperOptions={
                                            Object {
                                              "modifiers": Object {
                                                "arrow": Object {
                                                  "element": null,
                                                  "enabled": false,
                                                },
                                              },
                                            }
                                          }
                                          transition={true}
                                        />
                                      </ForwardRef(Tooltip)>
                                    </WithStyles(ForwardRef(Tooltip))>
                                  </SierraMuiTooltip>
                                </OverflowTip>
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                          <WithStyles(ForwardRef(TableCell))
                            key="state"
                            onClick={[Function]}
                            style={
                              Object {
                                "width": "120px",
                              }
                            }
                          >
                            <ForwardRef(TableCell)
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              onClick={[Function]}
                              style={
                                Object {
                                  "width": "120px",
                                }
                              }
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "width": "120px",
                                  }
                                }
                              >
                                <SelectInput
                                  data={
                                    Object {
                                      "catagory": "CAR Government Regulation",
                                      "id": 1,
                                      "name": "Night Duty",
                                      "settingsFrom": "Baseline Rules",
                                      "state": true,
                                      "type": "Definition",
                                    }
                                  }
                                  defaultValue="_default"
                                  enableReset={false}
                                  error={false}
                                  getTooltipContent={[Function]}
                                  handleDisable={[Function]}
                                  handleReset={[Function]}
                                  handleTooltipDisable={[Function]}
                                  items={
                                    Array [
                                      Object {
                                        "display": "On",
                                        "value": true,
                                      },
                                      Object {
                                        "display": "Off",
                                        "value": false,
                                      },
                                    ]
                                  }
                                  onChange={[Function]}
                                  placeholder=""
                                  removeOverlay={[Function]}
                                  style={
                                    Object {
                                      "fontSize": "0.8125rem",
                                      "width": "120px",
                                    }
                                  }
                                  value={true}
                                >
                                  <span
                                    className=""
                                  >
                                     
                                    <WithStyles(ForwardRef(Select))
                                      className=""
                                      disabled={false}
                                      onChange={[Function]}
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "fontSize": "0.8125rem",
                                          "width": "120px",
                                          "zIndex": 1,
                                        }
                                      }
                                      value={true}
                                    >
                                      <ForwardRef(Select)
                                        className=""
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "filled": "MuiSelect-filled",
                                            "icon": "MuiSelect-icon",
                                            "iconFilled": "MuiSelect-iconFilled",
                                            "iconOpen": "MuiSelect-iconOpen",
                                            "iconOutlined": "MuiSelect-iconOutlined",
                                            "nativeInput": "MuiSelect-nativeInput",
                                            "outlined": "MuiSelect-outlined",
                                            "root": "MuiSelect-root",
                                            "select": "MuiSelect-select",
                                            "selectMenu": "MuiSelect-selectMenu",
                                          }
                                        }
                                        disabled={false}
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "fontSize": "0.8125rem",
                                            "width": "120px",
                                            "zIndex": 1,
                                          }
                                        }
                                        value={true}
                                      >
                                        <WithStyles(ForwardRef(Input))
                                          className=""
                                          disabled={false}
                                          inputComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "propTypes": Object {
                                                "IconComponent": [Function],
                                                "MenuProps": [Function],
                                                "SelectDisplayProps": [Function],
                                                "aria-label": [Function],
                                                "autoFocus": [Function],
                                                "autoWidth": [Function],
                                                "children": [Function],
                                                "className": [Function],
                                                "classes": [Function],
                                                "defaultValue": [Function],
                                                "disabled": [Function],
                                                "displayEmpty": [Function],
                                                "inputRef": [Function],
                                                "labelId": [Function],
                                                "multiple": [Function],
                                                "name": [Function],
                                                "onBlur": [Function],
                                                "onChange": [Function],
                                                "onClose": [Function],
                                                "onFocus": [Function],
                                                "onOpen": [Function],
                                                "open": [Function],
                                                "readOnly": [Function],
                                                "renderValue": [Function],
                                                "tabIndex": [Function],
                                                "type": [Function],
                                                "value": [Function],
                                                "variant": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          inputProps={
                                            Object {
                                              "IconComponent": Object {
                                                "$$typeof": Symbol(react.memo),
                                                "compare": null,
                                                "type": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "render": [Function],
                                                },
                                              },
                                              "MenuProps": undefined,
                                              "SelectDisplayProps": Object {
                                                "id": undefined,
                                              },
                                              "autoWidth": false,
                                              "children": Array [
                                                <WithStyles(ForwardRef(MenuItem))
                                                  disabled={true}
                                                  style={
                                                    Object {
                                                      "display": "none",
                                                    }
                                                  }
                                                  value="_default"
                                                >
                                                  
                                                </WithStyles(ForwardRef(MenuItem))>,
                                                Array [
                                                  <WithStyles(ForwardRef(MenuItem))
                                                    value={true}
                                                  >
                                                    On
                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                  <WithStyles(ForwardRef(MenuItem))
                                                    value={false}
                                                  >
                                                    Off
                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                ],
                                              ],
                                              "classes": Object {
                                                "disabled": "Mui-disabled",
                                                "filled": "MuiSelect-filled",
                                                "icon": "MuiSelect-icon",
                                                "iconFilled": "MuiSelect-iconFilled",
                                                "iconOpen": "MuiSelect-iconOpen",
                                                "iconOutlined": "MuiSelect-iconOutlined",
                                                "nativeInput": "MuiSelect-nativeInput",
                                                "outlined": "MuiSelect-outlined",
                                                "root": "MuiSelect-root",
                                                "select": "MuiSelect-select",
                                                "selectMenu": "MuiSelect-selectMenu",
                                              },
                                              "displayEmpty": false,
                                              "labelId": undefined,
                                              "multiple": false,
                                              "onClose": undefined,
                                              "onOpen": undefined,
                                              "open": undefined,
                                              "renderValue": undefined,
                                              "type": undefined,
                                              "variant": "standard",
                                            }
                                          }
                                          onChange={[Function]}
                                          onClick={[Function]}
                                          style={
                                            Object {
                                              "fontSize": "0.8125rem",
                                              "width": "120px",
                                              "zIndex": 1,
                                            }
                                          }
                                          value={true}
                                        >
                                          <ForwardRef(Input)
                                            className=""
                                            classes={
                                              Object {
                                                "colorSecondary": "MuiInput-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "focused": "Mui-focused",
                                                "formControl": "MuiInput-formControl",
                                                "fullWidth": "MuiInput-fullWidth",
                                                "input": "MuiInput-input",
                                                "inputMarginDense": "MuiInput-inputMarginDense",
                                                "inputMultiline": "MuiInput-inputMultiline",
                                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                "marginDense": "MuiInput-marginDense",
                                                "multiline": "MuiInput-multiline",
                                                "root": "MuiInput-root",
                                                "underline": "MuiInput-underline",
                                              }
                                            }
                                            disabled={false}
                                            inputComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "propTypes": Object {
                                                  "IconComponent": [Function],
                                                  "MenuProps": [Function],
                                                  "SelectDisplayProps": [Function],
                                                  "aria-label": [Function],
                                                  "autoFocus": [Function],
                                                  "autoWidth": [Function],
                                                  "children": [Function],
                                                  "className": [Function],
                                                  "classes": [Function],
                                                  "defaultValue": [Function],
                                                  "disabled": [Function],
                                                  "displayEmpty": [Function],
                                                  "inputRef": [Function],
                                                  "labelId": [Function],
                                                  "multiple": [Function],
                                                  "name": [Function],
                                                  "onBlur": [Function],
                                                  "onChange": [Function],
                                                  "onClose": [Function],
                                                  "onFocus": [Function],
                                                  "onOpen": [Function],
                                                  "open": [Function],
                                                  "readOnly": [Function],
                                                  "renderValue": [Function],
                                                  "tabIndex": [Function],
                                                  "type": [Function],
                                                  "value": [Function],
                                                  "variant": [Function],
                                                },
                                                "render": [Function],
                                              }
                                            }
                                            inputProps={
                                              Object {
                                                "IconComponent": Object {
                                                  "$$typeof": Symbol(react.memo),
                                                  "compare": null,
                                                  "type": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "render": [Function],
                                                  },
                                                },
                                                "MenuProps": undefined,
                                                "SelectDisplayProps": Object {
                                                  "id": undefined,
                                                },
                                                "autoWidth": false,
                                                "children": Array [
                                                  <WithStyles(ForwardRef(MenuItem))
                                                    disabled={true}
                                                    style={
                                                      Object {
                                                        "display": "none",
                                                      }
                                                    }
                                                    value="_default"
                                                  >
                                                    
                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                  Array [
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      value={true}
                                                    >
                                                      On
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      value={false}
                                                    >
                                                      Off
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                  ],
                                                ],
                                                "classes": Object {
                                                  "disabled": "Mui-disabled",
                                                  "filled": "MuiSelect-filled",
                                                  "icon": "MuiSelect-icon",
                                                  "iconFilled": "MuiSelect-iconFilled",
                                                  "iconOpen": "MuiSelect-iconOpen",
                                                  "iconOutlined": "MuiSelect-iconOutlined",
                                                  "nativeInput": "MuiSelect-nativeInput",
                                                  "outlined": "MuiSelect-outlined",
                                                  "root": "MuiSelect-root",
                                                  "select": "MuiSelect-select",
                                                  "selectMenu": "MuiSelect-selectMenu",
                                                },
                                                "displayEmpty": false,
                                                "labelId": undefined,
                                                "multiple": false,
                                                "onClose": undefined,
                                                "onOpen": undefined,
                                                "open": undefined,
                                                "renderValue": undefined,
                                                "type": undefined,
                                                "variant": "standard",
                                              }
                                            }
                                            onChange={[Function]}
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "fontSize": "0.8125rem",
                                                "width": "120px",
                                                "zIndex": 1,
                                              }
                                            }
                                            value={true}
                                          >
                                            <WithStyles(ForwardRef(InputBase))
                                              className=""
                                              classes={
                                                Object {
                                                  "colorSecondary": "MuiInput-colorSecondary",
                                                  "disabled": "Mui-disabled",
                                                  "error": "Mui-error",
                                                  "focused": "Mui-focused",
                                                  "formControl": "MuiInput-formControl",
                                                  "fullWidth": "MuiInput-fullWidth",
                                                  "input": "MuiInput-input",
                                                  "inputMarginDense": "MuiInput-inputMarginDense",
                                                  "inputMultiline": "MuiInput-inputMultiline",
                                                  "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                  "marginDense": "MuiInput-marginDense",
                                                  "multiline": "MuiInput-multiline",
                                                  "root": "MuiInput-root MuiInput-underline",
                                                  "underline": null,
                                                }
                                              }
                                              disabled={false}
                                              fullWidth={false}
                                              inputComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "propTypes": Object {
                                                    "IconComponent": [Function],
                                                    "MenuProps": [Function],
                                                    "SelectDisplayProps": [Function],
                                                    "aria-label": [Function],
                                                    "autoFocus": [Function],
                                                    "autoWidth": [Function],
                                                    "children": [Function],
                                                    "className": [Function],
                                                    "classes": [Function],
                                                    "defaultValue": [Function],
                                                    "disabled": [Function],
                                                    "displayEmpty": [Function],
                                                    "inputRef": [Function],
                                                    "labelId": [Function],
                                                    "multiple": [Function],
                                                    "name": [Function],
                                                    "onBlur": [Function],
                                                    "onChange": [Function],
                                                    "onClose": [Function],
                                                    "onFocus": [Function],
                                                    "onOpen": [Function],
                                                    "open": [Function],
                                                    "readOnly": [Function],
                                                    "renderValue": [Function],
                                                    "tabIndex": [Function],
                                                    "type": [Function],
                                                    "value": [Function],
                                                    "variant": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              inputProps={
                                                Object {
                                                  "IconComponent": Object {
                                                    "$$typeof": Symbol(react.memo),
                                                    "compare": null,
                                                    "type": Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "render": [Function],
                                                    },
                                                  },
                                                  "MenuProps": undefined,
                                                  "SelectDisplayProps": Object {
                                                    "id": undefined,
                                                  },
                                                  "autoWidth": false,
                                                  "children": Array [
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      disabled={true}
                                                      style={
                                                        Object {
                                                          "display": "none",
                                                        }
                                                      }
                                                      value="_default"
                                                    >
                                                      
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                    Array [
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        value={true}
                                                      >
                                                        On
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        value={false}
                                                      >
                                                        Off
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                    ],
                                                  ],
                                                  "classes": Object {
                                                    "disabled": "Mui-disabled",
                                                    "filled": "MuiSelect-filled",
                                                    "icon": "MuiSelect-icon",
                                                    "iconFilled": "MuiSelect-iconFilled",
                                                    "iconOpen": "MuiSelect-iconOpen",
                                                    "iconOutlined": "MuiSelect-iconOutlined",
                                                    "nativeInput": "MuiSelect-nativeInput",
                                                    "outlined": "MuiSelect-outlined",
                                                    "root": "MuiSelect-root",
                                                    "select": "MuiSelect-select",
                                                    "selectMenu": "MuiSelect-selectMenu",
                                                  },
                                                  "displayEmpty": false,
                                                  "labelId": undefined,
                                                  "multiple": false,
                                                  "onClose": undefined,
                                                  "onOpen": undefined,
                                                  "open": undefined,
                                                  "renderValue": undefined,
                                                  "type": undefined,
                                                  "variant": "standard",
                                                }
                                              }
                                              multiline={false}
                                              onChange={[Function]}
                                              onClick={[Function]}
                                              style={
                                                Object {
                                                  "fontSize": "0.8125rem",
                                                  "width": "120px",
                                                  "zIndex": 1,
                                                }
                                              }
                                              type="text"
                                              value={true}
                                            >
                                              <ForwardRef(InputBase)
                                                className=""
                                                classes={
                                                  Object {
                                                    "adornedEnd": "MuiInputBase-adornedEnd",
                                                    "adornedStart": "MuiInputBase-adornedStart",
                                                    "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                    "disabled": "Mui-disabled Mui-disabled",
                                                    "error": "Mui-error Mui-error",
                                                    "focused": "Mui-focused Mui-focused",
                                                    "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                    "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                    "input": "MuiInputBase-input MuiInput-input",
                                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                    "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                    "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                    "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                    "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                  }
                                                }
                                                disabled={false}
                                                fullWidth={false}
                                                inputComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "propTypes": Object {
                                                      "IconComponent": [Function],
                                                      "MenuProps": [Function],
                                                      "SelectDisplayProps": [Function],
                                                      "aria-label": [Function],
                                                      "autoFocus": [Function],
                                                      "autoWidth": [Function],
                                                      "children": [Function],
                                                      "className": [Function],
                                                      "classes": [Function],
                                                      "defaultValue": [Function],
                                                      "disabled": [Function],
                                                      "displayEmpty": [Function],
                                                      "inputRef": [Function],
                                                      "labelId": [Function],
                                                      "multiple": [Function],
                                                      "name": [Function],
                                                      "onBlur": [Function],
                                                      "onChange": [Function],
                                                      "onClose": [Function],
                                                      "onFocus": [Function],
                                                      "onOpen": [Function],
                                                      "open": [Function],
                                                      "readOnly": [Function],
                                                      "renderValue": [Function],
                                                      "tabIndex": [Function],
                                                      "type": [Function],
                                                      "value": [Function],
                                                      "variant": [Function],
                                                    },
                                                    "render": [Function],
                                                  }
                                                }
                                                inputProps={
                                                  Object {
                                                    "IconComponent": Object {
                                                      "$$typeof": Symbol(react.memo),
                                                      "compare": null,
                                                      "type": Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "render": [Function],
                                                      },
                                                    },
                                                    "MenuProps": undefined,
                                                    "SelectDisplayProps": Object {
                                                      "id": undefined,
                                                    },
                                                    "autoWidth": false,
                                                    "children": Array [
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        disabled={true}
                                                        style={
                                                          Object {
                                                            "display": "none",
                                                          }
                                                        }
                                                        value="_default"
                                                      >
                                                        
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      Array [
                                                        <WithStyles(ForwardRef(MenuItem))
                                                          value={true}
                                                        >
                                                          On
                                                        </WithStyles(ForwardRef(MenuItem))>,
                                                        <WithStyles(ForwardRef(MenuItem))
                                                          value={false}
                                                        >
                                                          Off
                                                        </WithStyles(ForwardRef(MenuItem))>,
                                                      ],
                                                    ],
                                                    "classes": Object {
                                                      "disabled": "Mui-disabled",
                                                      "filled": "MuiSelect-filled",
                                                      "icon": "MuiSelect-icon",
                                                      "iconFilled": "MuiSelect-iconFilled",
                                                      "iconOpen": "MuiSelect-iconOpen",
                                                      "iconOutlined": "MuiSelect-iconOutlined",
                                                      "nativeInput": "MuiSelect-nativeInput",
                                                      "outlined": "MuiSelect-outlined",
                                                      "root": "MuiSelect-root",
                                                      "select": "MuiSelect-select",
                                                      "selectMenu": "MuiSelect-selectMenu",
                                                    },
                                                    "displayEmpty": false,
                                                    "labelId": undefined,
                                                    "multiple": false,
                                                    "onClose": undefined,
                                                    "onOpen": undefined,
                                                    "open": undefined,
                                                    "renderValue": undefined,
                                                    "type": undefined,
                                                    "variant": "standard",
                                                  }
                                                }
                                                multiline={false}
                                                onChange={[Function]}
                                                onClick={[Function]}
                                                style={
                                                  Object {
                                                    "fontSize": "0.8125rem",
                                                    "width": "120px",
                                                    "zIndex": 1,
                                                  }
                                                }
                                                type="text"
                                                value={true}
                                              >
                                                <div
                                                  className="MuiInputBase-root MuiInput-root MuiInput-underline"
                                                  onClick={[Function]}
                                                  style={
                                                    Object {
                                                      "fontSize": "0.8125rem",
                                                      "width": "120px",
                                                      "zIndex": 1,
                                                    }
                                                  }
                                                >
                                                  <ForwardRef(SelectInput)
                                                    IconComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.memo),
                                                        "compare": null,
                                                        "type": Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "render": [Function],
                                                        },
                                                      }
                                                    }
                                                    SelectDisplayProps={
                                                      Object {
                                                        "id": undefined,
                                                      }
                                                    }
                                                    autoWidth={false}
                                                    className="MuiInputBase-input MuiInput-input"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "filled": "MuiSelect-filled",
                                                        "icon": "MuiSelect-icon",
                                                        "iconFilled": "MuiSelect-iconFilled",
                                                        "iconOpen": "MuiSelect-iconOpen",
                                                        "iconOutlined": "MuiSelect-iconOutlined",
                                                        "nativeInput": "MuiSelect-nativeInput",
                                                        "outlined": "MuiSelect-outlined",
                                                        "root": "MuiSelect-root",
                                                        "select": "MuiSelect-select",
                                                        "selectMenu": "MuiSelect-selectMenu",
                                                      }
                                                    }
                                                    disabled={false}
                                                    displayEmpty={false}
                                                    inputRef={[Function]}
                                                    multiple={false}
                                                    onAnimationStart={[Function]}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    value={true}
                                                    variant="standard"
                                                  >
                                                    <div
                                                      aria-haspopup="listbox"
                                                      className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onMouseDown={[Function]}
                                                      role="button"
                                                      tabIndex={0}
                                                    >
                                                      On
                                                    </div>
                                                    <input
                                                      aria-hidden={true}
                                                      className="MuiSelect-nativeInput"
                                                      onAnimationStart={[Function]}
                                                      onChange={[Function]}
                                                      tabIndex={-1}
                                                      value={true}
                                                    />
                                                    <ForwardRef(ArrowDropDownIcon)
                                                      className="MuiSelect-icon"
                                                    >
                                                      <WithStyles(ForwardRef(SvgIcon))
                                                        className="MuiSelect-icon"
                                                      >
                                                        <ForwardRef(SvgIcon)
                                                          className="MuiSelect-icon"
                                                          classes={
                                                            Object {
                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                              "colorError": "MuiSvgIcon-colorError",
                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                              "root": "MuiSvgIcon-root",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            className="MuiSvgIcon-root MuiSelect-icon"
                                                            focusable="false"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <path
                                                              d="M7 10l5 5 5-5z"
                                                            />
                                                          </svg>
                                                        </ForwardRef(SvgIcon)>
                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                    </ForwardRef(ArrowDropDownIcon)>
                                                    <WithStyles(ForwardRef(Menu))
                                                      MenuListProps={
                                                        Object {
                                                          "aria-labelledby": undefined,
                                                          "disableListWrap": true,
                                                          "role": "listbox",
                                                        }
                                                      }
                                                      PaperProps={
                                                        Object {
                                                          "style": Object {
                                                            "minWidth": undefined,
                                                          },
                                                        }
                                                      }
                                                      anchorEl={
                                                        <div
                                                          aria-haspopup="listbox"
                                                          class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                          role="button"
                                                          tabindex="0"
                                                        >
                                                          On
                                                        </div>
                                                      }
                                                      id="menu-"
                                                      onClose={[Function]}
                                                      open={false}
                                                    >
                                                      <ForwardRef(Menu)
                                                        MenuListProps={
                                                          Object {
                                                            "aria-labelledby": undefined,
                                                            "disableListWrap": true,
                                                            "role": "listbox",
                                                          }
                                                        }
                                                        PaperProps={
                                                          Object {
                                                            "style": Object {
                                                              "minWidth": undefined,
                                                            },
                                                          }
                                                        }
                                                        anchorEl={
                                                          <div
                                                            aria-haspopup="listbox"
                                                            class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                            role="button"
                                                            tabindex="0"
                                                          >
                                                            On
                                                          </div>
                                                        }
                                                        classes={
                                                          Object {
                                                            "list": "MuiMenu-list",
                                                            "paper": "MuiMenu-paper",
                                                          }
                                                        }
                                                        id="menu-"
                                                        onClose={[Function]}
                                                        open={false}
                                                      >
                                                        <WithStyles(ForwardRef(Popover))
                                                          PaperProps={
                                                            Object {
                                                              "classes": Object {
                                                                "root": "MuiMenu-paper",
                                                              },
                                                              "style": Object {
                                                                "minWidth": undefined,
                                                              },
                                                            }
                                                          }
                                                          anchorEl={
                                                            <div
                                                              aria-haspopup="listbox"
                                                              class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                              role="button"
                                                              tabindex="0"
                                                            >
                                                              On
                                                            </div>
                                                          }
                                                          anchorOrigin={
                                                            Object {
                                                              "horizontal": "left",
                                                              "vertical": "top",
                                                            }
                                                          }
                                                          getContentAnchorEl={[Function]}
                                                          id="menu-"
                                                          onClose={[Function]}
                                                          onEntering={[Function]}
                                                          open={false}
                                                          transformOrigin={
                                                            Object {
                                                              "horizontal": "left",
                                                              "vertical": "top",
                                                            }
                                                          }
                                                          transitionDuration="auto"
                                                        >
                                                          <ForwardRef(Popover)
                                                            PaperProps={
                                                              Object {
                                                                "classes": Object {
                                                                  "root": "MuiMenu-paper",
                                                                },
                                                                "style": Object {
                                                                  "minWidth": undefined,
                                                                },
                                                              }
                                                            }
                                                            anchorEl={
                                                              <div
                                                                aria-haspopup="listbox"
                                                                class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                role="button"
                                                                tabindex="0"
                                                              >
                                                                On
                                                              </div>
                                                            }
                                                            anchorOrigin={
                                                              Object {
                                                                "horizontal": "left",
                                                                "vertical": "top",
                                                              }
                                                            }
                                                            classes={
                                                              Object {
                                                                "paper": "MuiPopover-paper",
                                                                "root": "MuiPopover-root",
                                                              }
                                                            }
                                                            getContentAnchorEl={[Function]}
                                                            id="menu-"
                                                            onClose={[Function]}
                                                            onEntering={[Function]}
                                                            open={false}
                                                            transformOrigin={
                                                              Object {
                                                                "horizontal": "left",
                                                                "vertical": "top",
                                                              }
                                                            }
                                                            transitionDuration="auto"
                                                          >
                                                            <ForwardRef(Modal)
                                                              BackdropProps={
                                                                Object {
                                                                  "invisible": true,
                                                                }
                                                              }
                                                              className="MuiPopover-root"
                                                              container={<body />}
                                                              id="menu-"
                                                              onClose={[Function]}
                                                              open={false}
                                                            />
                                                          </ForwardRef(Popover)>
                                                        </WithStyles(ForwardRef(Popover))>
                                                      </ForwardRef(Menu)>
                                                    </WithStyles(ForwardRef(Menu))>
                                                  </ForwardRef(SelectInput)>
                                                </div>
                                              </ForwardRef(InputBase)>
                                            </WithStyles(ForwardRef(InputBase))>
                                          </ForwardRef(Input)>
                                        </WithStyles(ForwardRef(Input))>
                                      </ForwardRef(Select)>
                                    </WithStyles(ForwardRef(Select))>
                                     
                                  </span>
                                </SelectInput>
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                          <WithStyles(ForwardRef(TableCell))
                            key="settingsFrom"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <ForwardRef(TableCell)
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              onClick={[Function]}
                              style={Object {}}
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body"
                                onClick={[Function]}
                                style={Object {}}
                              >
                                <ColorHighlighter
                                  data={
                                    Object {
                                      "catagory": "CAR Government Regulation",
                                      "id": 1,
                                      "name": "Night Duty",
                                      "settingsFrom": "Baseline Rules",
                                      "state": true,
                                      "type": "Definition",
                                    }
                                  }
                                  header="isEdited"
                                  highlighter={[Function]}
                                  style={
                                    Object {
                                      "color": "#FF650C",
                                    }
                                  }
                                  value="Baseline Rules"
                                >
                                  <span
                                    style={Object {}}
                                  >
                                    Baseline Rules
                                  </span>
                                </ColorHighlighter>
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                          <WithStyles(ForwardRef(TableCell))
                            key="catagory"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <ForwardRef(TableCell)
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              onClick={[Function]}
                              style={Object {}}
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body"
                                onClick={[Function]}
                                style={Object {}}
                              >
                                CAR Government Regulation
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                          <WithStyles(ForwardRef(TableCell))
                            key="type"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <ForwardRef(TableCell)
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              onClick={[Function]}
                              style={Object {}}
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body"
                                onClick={[Function]}
                                style={Object {}}
                              >
                                Definition
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                        </tr>
                      </ForwardRef(TableRow)>
                    </WithStyles(ForwardRef(TableRow))>
                    <WithStyles(ForwardRef(TableRow))>
                      <ForwardRef(TableRow)
                        classes={
                          Object {
                            "footer": "MuiTableRow-footer",
                            "head": "MuiTableRow-head",
                            "hover": "MuiTableRow-hover",
                            "root": "MuiTableRow-root",
                            "selected": "Mui-selected",
                          }
                        }
                      >
                        <tr
                          className="MuiTableRow-root"
                          role={null}
                        >
                          <WithStyles(ForwardRef(TableCell))
                            className="no-border"
                            colSpan={6}
                            style={
                              Object {
                                "padding": 0,
                              }
                            }
                          >
                            <ForwardRef(TableCell)
                              className="no-border"
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              colSpan={6}
                              style={
                                Object {
                                  "padding": 0,
                                }
                              }
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body no-border"
                                colSpan={6}
                                style={
                                  Object {
                                    "padding": 0,
                                  }
                                }
                              >
                                <WithStyles(ForwardRef(Collapse))
                                  in={false}
                                  timeout="auto"
                                  unmountOnExit={true}
                                >
                                  <ForwardRef(Collapse)
                                    classes={
                                      Object {
                                        "container": "MuiCollapse-container",
                                        "entered": "MuiCollapse-entered",
                                        "hidden": "MuiCollapse-hidden",
                                        "wrapper": "MuiCollapse-wrapper",
                                        "wrapperInner": "MuiCollapse-wrapperInner",
                                      }
                                    }
                                    in={false}
                                    timeout="auto"
                                    unmountOnExit={true}
                                  >
                                    <Transition
                                      addEndListener={[Function]}
                                      appear={false}
                                      enter={true}
                                      exit={true}
                                      in={false}
                                      mountOnEnter={false}
                                      onEnter={[Function]}
                                      onEntered={[Function]}
                                      onEntering={[Function]}
                                      onExit={[Function]}
                                      onExited={[Function]}
                                      onExiting={[Function]}
                                      timeout={null}
                                      unmountOnExit={true}
                                    />
                                  </ForwardRef(Collapse)>
                                </WithStyles(ForwardRef(Collapse))>
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                        </tr>
                      </ForwardRef(TableRow)>
                    </WithStyles(ForwardRef(TableRow))>
                    <WithStyles(ForwardRef(TableRow))
                      classes={
                        Object {
                          "hover": "hover",
                          "root": "MuiTableRow",
                          "selected": "selected",
                        }
                      }
                      hover={true}
                      id="tablerow2"
                      selected={false}
                    >
                      <ForwardRef(TableRow)
                        classes={
                          Object {
                            "footer": "MuiTableRow-footer",
                            "head": "MuiTableRow-head",
                            "hover": "MuiTableRow-hover hover",
                            "root": "MuiTableRow-root MuiTableRow",
                            "selected": "Mui-selected selected",
                          }
                        }
                        hover={true}
                        id="tablerow2"
                        selected={false}
                      >
                        <tr
                          className="MuiTableRow-root MuiTableRow MuiTableRow-hover hover"
                          id="tablerow2"
                          role={null}
                        >
                          <WithStyles(ForwardRef(TableCell))
                            style={
                              Object {
                                "height": 40,
                                "paddingLeft": "18px",
                                "paddingRight": "0px",
                                "width": 40,
                              }
                            }
                          >
                            <ForwardRef(TableCell)
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              style={
                                Object {
                                  "height": 40,
                                  "paddingLeft": "18px",
                                  "paddingRight": "0px",
                                  "width": 40,
                                }
                              }
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body"
                                style={
                                  Object {
                                    "height": 40,
                                    "paddingLeft": "18px",
                                    "paddingRight": "0px",
                                    "width": 40,
                                  }
                                }
                              >
                                <WithStyles(ForwardRef(Checkbox))
                                  checked={false}
                                  color="primary"
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "height": 20,
                                      "width": 20,
                                    }
                                  }
                                >
                                  <ForwardRef(Checkbox)
                                    checked={false}
                                    classes={
                                      Object {
                                        "checked": "Mui-checked",
                                        "colorPrimary": "MuiCheckbox-colorPrimary",
                                        "colorSecondary": "MuiCheckbox-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "indeterminate": "MuiCheckbox-indeterminate",
                                        "root": "MuiCheckbox-root",
                                      }
                                    }
                                    color="primary"
                                    onClick={[Function]}
                                    style={
                                      Object {
                                        "height": 20,
                                        "width": 20,
                                      }
                                    }
                                  >
                                    <WithStyles(ForwardRef(SwitchBase))
                                      checked={false}
                                      checkedIcon={<Memo />}
                                      classes={
                                        Object {
                                          "checked": "Mui-checked",
                                          "disabled": "Mui-disabled",
                                          "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                                        }
                                      }
                                      color="primary"
                                      icon={<Memo />}
                                      inputProps={
                                        Object {
                                          "data-indeterminate": false,
                                        }
                                      }
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "height": 20,
                                          "width": 20,
                                        }
                                      }
                                      type="checkbox"
                                    >
                                      <ForwardRef(SwitchBase)
                                        checked={false}
                                        checkedIcon={<Memo />}
                                        classes={
                                          Object {
                                            "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                                            "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                                            "input": "PrivateSwitchBase-input-4",
                                            "root": "PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary",
                                          }
                                        }
                                        color="primary"
                                        icon={<Memo />}
                                        inputProps={
                                          Object {
                                            "data-indeterminate": false,
                                          }
                                        }
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "height": 20,
                                            "width": 20,
                                          }
                                        }
                                        type="checkbox"
                                      >
                                        <WithStyles(ForwardRef(IconButton))
                                          className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary"
                                          color="primary"
                                          component="span"
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          style={
                                            Object {
                                              "height": 20,
                                              "width": 20,
                                            }
                                          }
                                          tabIndex={null}
                                        >
                                          <ForwardRef(IconButton)
                                            className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary"
                                            classes={
                                              Object {
                                                "colorInherit": "MuiIconButton-colorInherit",
                                                "colorPrimary": "MuiIconButton-colorPrimary",
                                                "colorSecondary": "MuiIconButton-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "edgeEnd": "MuiIconButton-edgeEnd",
                                                "edgeStart": "MuiIconButton-edgeStart",
                                                "label": "MuiIconButton-label",
                                                "root": "MuiIconButton-root",
                                                "sizeSmall": "MuiIconButton-sizeSmall",
                                              }
                                            }
                                            color="primary"
                                            component="span"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            style={
                                              Object {
                                                "height": 20,
                                                "width": 20,
                                              }
                                            }
                                            tabIndex={null}
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              centerRipple={true}
                                              className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                              component="span"
                                              disabled={false}
                                              focusRipple={true}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              style={
                                                Object {
                                                  "height": 20,
                                                  "width": 20,
                                                }
                                              }
                                              tabIndex={null}
                                            >
                                              <ForwardRef(ButtonBase)
                                                centerRipple={true}
                                                className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="span"
                                                disabled={false}
                                                focusRipple={true}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                style={
                                                  Object {
                                                    "height": 20,
                                                    "width": 20,
                                                  }
                                                }
                                                tabIndex={null}
                                              >
                                                <span
                                                  aria-disabled={false}
                                                  className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  style={
                                                    Object {
                                                      "height": 20,
                                                      "width": 20,
                                                    }
                                                  }
                                                  tabIndex={null}
                                                >
                                                  <span
                                                    className="MuiIconButton-label"
                                                  >
                                                    <input
                                                      checked={false}
                                                      className="PrivateSwitchBase-input-4"
                                                      data-indeterminate={false}
                                                      onChange={[Function]}
                                                      type="checkbox"
                                                    />
                                                    <ForwardRef(CheckBoxOutlineBlankIcon)>
                                                      <WithStyles(ForwardRef(SvgIcon))>
                                                        <ForwardRef(SvgIcon)
                                                          classes={
                                                            Object {
                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                              "colorError": "MuiSvgIcon-colorError",
                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                              "root": "MuiSvgIcon-root",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            className="MuiSvgIcon-root"
                                                            focusable="false"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <path
                                                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                            />
                                                          </svg>
                                                        </ForwardRef(SvgIcon)>
                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                    </ForwardRef(CheckBoxOutlineBlankIcon)>
                                                  </span>
                                                  <WithStyles(memo)
                                                    center={true}
                                                  >
                                                    <ForwardRef(TouchRipple)
                                                      center={true}
                                                      classes={
                                                        Object {
                                                          "child": "MuiTouchRipple-child",
                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                          "ripple": "MuiTouchRipple-ripple",
                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                          "root": "MuiTouchRipple-root",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        className="MuiTouchRipple-root"
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          component={null}
                                                          exit={true}
                                                        />
                                                      </span>
                                                    </ForwardRef(TouchRipple)>
                                                  </WithStyles(memo)>
                                                </span>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(IconButton)>
                                        </WithStyles(ForwardRef(IconButton))>
                                      </ForwardRef(SwitchBase)>
                                    </WithStyles(ForwardRef(SwitchBase))>
                                  </ForwardRef(Checkbox)>
                                </WithStyles(ForwardRef(Checkbox))>
                                <WithStyles(ForwardRef(IconButton))
                                  aria-label="expand row"
                                  onClick={[Function]}
                                  size="small"
                                  style={
                                    Object {
                                      "marginLeft": "10px",
                                    }
                                  }
                                >
                                  <ForwardRef(IconButton)
                                    aria-label="expand row"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit",
                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                        "edgeStart": "MuiIconButton-edgeStart",
                                        "label": "MuiIconButton-label",
                                        "root": "MuiIconButton-root",
                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                      }
                                    }
                                    onClick={[Function]}
                                    size="small"
                                    style={
                                      Object {
                                        "marginLeft": "10px",
                                      }
                                    }
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      aria-label="expand row"
                                      centerRipple={true}
                                      className="MuiIconButton-root MuiIconButton-sizeSmall"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "marginLeft": "10px",
                                        }
                                      }
                                    >
                                      <ForwardRef(ButtonBase)
                                        aria-label="expand row"
                                        centerRipple={true}
                                        className="MuiIconButton-root MuiIconButton-sizeSmall"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "marginLeft": "10px",
                                          }
                                        }
                                      >
                                        <button
                                          aria-label="expand row"
                                          className="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          style={
                                            Object {
                                              "marginLeft": "10px",
                                            }
                                          }
                                          tabIndex={0}
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <ForwardRef(KeyboardArrowDownIcon)>
                                              <WithStyles(ForwardRef(SvgIcon))>
                                                <ForwardRef(SvgIcon)
                                                  classes={
                                                    Object {
                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                      "colorError": "MuiSvgIcon-colorError",
                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                      "root": "MuiSvgIcon-root",
                                                    }
                                                  }
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="MuiSvgIcon-root"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SvgIcon)>
                                              </WithStyles(ForwardRef(SvgIcon))>
                                            </ForwardRef(KeyboardArrowDownIcon)>
                                          </span>
                                          <WithStyles(memo)
                                            center={true}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={true}
                                              classes={
                                                Object {
                                                  "child": "MuiTouchRipple-child",
                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                  "ripple": "MuiTouchRipple-ripple",
                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                  "root": "MuiTouchRipple-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="MuiTouchRipple-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(memo)>
                                        </button>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(IconButton)>
                                </WithStyles(ForwardRef(IconButton))>
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                          <WithStyles(ForwardRef(TableCell))
                            key="name"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <ForwardRef(TableCell)
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              onClick={[Function]}
                              style={Object {}}
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body"
                                onClick={[Function]}
                                style={Object {}}
                              >
                                <OverflowTip
                                  content="Split Duty Extension to Maximum FDP (Split Duty Extension to Maximum FDP)"
                                  maxWidth="200px"
                                  tooltipStyle={
                                    Object {
                                      "maxWidth": "235px",
                                    }
                                  }
                                  value="Split Duty Extension to Maximum FDP (Split Duty Extension to Maximum FDP)"
                                >
                                  <SierraMuiTooltip
                                    classes={
                                      Object {
                                        "popper": "ellipse-zoom-popper",
                                      }
                                    }
                                    disableHoverListener={true}
                                    interactive={true}
                                    style={
                                      Object {
                                        "maxWidth": "235px",
                                      }
                                    }
                                    title="Split Duty Extension to Maximum FDP (Split Duty Extension to Maximum FDP)"
                                  >
                                    <WithStyles(ForwardRef(Tooltip))
                                      arrow={true}
                                      classes={
                                        Object {
                                          "popper": "ellipse-zoom-popper",
                                        }
                                      }
                                      disableHoverListener={true}
                                      interactive={true}
                                      style={
                                        Object {
                                          "maxWidth": "235px",
                                        }
                                      }
                                      title="Split Duty Extension to Maximum FDP (Split Duty Extension to Maximum FDP)"
                                    >
                                      <ForwardRef(Tooltip)
                                        arrow={true}
                                        classes={
                                          Object {
                                            "arrow": "MuiTooltip-arrow",
                                            "popper": "MuiTooltip-popper ellipse-zoom-popper",
                                            "popperArrow": "MuiTooltip-popperArrow",
                                            "popperInteractive": "MuiTooltip-popperInteractive",
                                            "tooltip": "MuiTooltip-tooltip",
                                            "tooltipArrow": "MuiTooltip-tooltipArrow",
                                            "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                            "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                            "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                            "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                            "touch": "MuiTooltip-touch",
                                          }
                                        }
                                        disableHoverListener={true}
                                        interactive={true}
                                        style={
                                          Object {
                                            "maxWidth": "235px",
                                          }
                                        }
                                        title="Split Duty Extension to Maximum FDP (Split Duty Extension to Maximum FDP)"
                                      >
                                        <div
                                          aria-describedby={null}
                                          className=""
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchStart={[Function]}
                                          style={
                                            Object {
                                              "maxWidth": "200px",
                                              "overflow": "hidden",
                                              "textOverflow": "ellipsis",
                                              "whiteSpace": "nowrap",
                                            }
                                          }
                                          title={null}
                                        >
                                          Split Duty Extension to Maximum FDP (Split Duty Extension to Maximum FDP)
                                        </div>
                                        <ForwardRef(Popper)
                                          anchorEl={
                                            <div
                                              class=""
                                              style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 200px;"
                                            >
                                              Split Duty Extension to Maximum FDP (Split Duty Extension to Maximum FDP)
                                            </div>
                                          }
                                          className="MuiTooltip-popper ellipse-zoom-popper MuiTooltip-popperInteractive MuiTooltip-popperArrow"
                                          id={null}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          open={false}
                                          placement="bottom"
                                          popperOptions={
                                            Object {
                                              "modifiers": Object {
                                                "arrow": Object {
                                                  "element": null,
                                                  "enabled": false,
                                                },
                                              },
                                            }
                                          }
                                          transition={true}
                                        />
                                      </ForwardRef(Tooltip)>
                                    </WithStyles(ForwardRef(Tooltip))>
                                  </SierraMuiTooltip>
                                </OverflowTip>
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                          <WithStyles(ForwardRef(TableCell))
                            key="state"
                            onClick={[Function]}
                            style={
                              Object {
                                "width": "120px",
                              }
                            }
                          >
                            <ForwardRef(TableCell)
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              onClick={[Function]}
                              style={
                                Object {
                                  "width": "120px",
                                }
                              }
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "width": "120px",
                                  }
                                }
                              >
                                <SelectInput
                                  data={
                                    Object {
                                      "catagory": "CAR Government Regulation",
                                      "id": 2,
                                      "name": "Split Duty Extension to Maximum FDP (Split Duty Extension to Maximum FDP)",
                                      "settingsFrom": "Flight Desk",
                                      "state": false,
                                      "type": "Duty Time Limitation",
                                    }
                                  }
                                  defaultValue="_default"
                                  enableReset={false}
                                  error={false}
                                  getTooltipContent={[Function]}
                                  handleDisable={[Function]}
                                  handleReset={[Function]}
                                  handleTooltipDisable={[Function]}
                                  items={
                                    Array [
                                      Object {
                                        "display": "On",
                                        "value": true,
                                      },
                                      Object {
                                        "display": "Off",
                                        "value": false,
                                      },
                                    ]
                                  }
                                  onChange={[Function]}
                                  placeholder=""
                                  removeOverlay={[Function]}
                                  style={
                                    Object {
                                      "fontSize": "0.8125rem",
                                      "width": "120px",
                                    }
                                  }
                                  value={false}
                                >
                                  <span
                                    className=""
                                  >
                                     
                                    <WithStyles(ForwardRef(Select))
                                      className=""
                                      disabled={false}
                                      onChange={[Function]}
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "fontSize": "0.8125rem",
                                          "width": "120px",
                                          "zIndex": 1,
                                        }
                                      }
                                      value={false}
                                    >
                                      <ForwardRef(Select)
                                        className=""
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "filled": "MuiSelect-filled",
                                            "icon": "MuiSelect-icon",
                                            "iconFilled": "MuiSelect-iconFilled",
                                            "iconOpen": "MuiSelect-iconOpen",
                                            "iconOutlined": "MuiSelect-iconOutlined",
                                            "nativeInput": "MuiSelect-nativeInput",
                                            "outlined": "MuiSelect-outlined",
                                            "root": "MuiSelect-root",
                                            "select": "MuiSelect-select",
                                            "selectMenu": "MuiSelect-selectMenu",
                                          }
                                        }
                                        disabled={false}
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "fontSize": "0.8125rem",
                                            "width": "120px",
                                            "zIndex": 1,
                                          }
                                        }
                                        value={false}
                                      >
                                        <WithStyles(ForwardRef(Input))
                                          className=""
                                          disabled={false}
                                          inputComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "propTypes": Object {
                                                "IconComponent": [Function],
                                                "MenuProps": [Function],
                                                "SelectDisplayProps": [Function],
                                                "aria-label": [Function],
                                                "autoFocus": [Function],
                                                "autoWidth": [Function],
                                                "children": [Function],
                                                "className": [Function],
                                                "classes": [Function],
                                                "defaultValue": [Function],
                                                "disabled": [Function],
                                                "displayEmpty": [Function],
                                                "inputRef": [Function],
                                                "labelId": [Function],
                                                "multiple": [Function],
                                                "name": [Function],
                                                "onBlur": [Function],
                                                "onChange": [Function],
                                                "onClose": [Function],
                                                "onFocus": [Function],
                                                "onOpen": [Function],
                                                "open": [Function],
                                                "readOnly": [Function],
                                                "renderValue": [Function],
                                                "tabIndex": [Function],
                                                "type": [Function],
                                                "value": [Function],
                                                "variant": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          inputProps={
                                            Object {
                                              "IconComponent": Object {
                                                "$$typeof": Symbol(react.memo),
                                                "compare": null,
                                                "type": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "render": [Function],
                                                },
                                              },
                                              "MenuProps": undefined,
                                              "SelectDisplayProps": Object {
                                                "id": undefined,
                                              },
                                              "autoWidth": false,
                                              "children": Array [
                                                <WithStyles(ForwardRef(MenuItem))
                                                  disabled={true}
                                                  style={
                                                    Object {
                                                      "display": "none",
                                                    }
                                                  }
                                                  value="_default"
                                                >
                                                  
                                                </WithStyles(ForwardRef(MenuItem))>,
                                                Array [
                                                  <WithStyles(ForwardRef(MenuItem))
                                                    value={true}
                                                  >
                                                    On
                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                  <WithStyles(ForwardRef(MenuItem))
                                                    value={false}
                                                  >
                                                    Off
                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                ],
                                              ],
                                              "classes": Object {
                                                "disabled": "Mui-disabled",
                                                "filled": "MuiSelect-filled",
                                                "icon": "MuiSelect-icon",
                                                "iconFilled": "MuiSelect-iconFilled",
                                                "iconOpen": "MuiSelect-iconOpen",
                                                "iconOutlined": "MuiSelect-iconOutlined",
                                                "nativeInput": "MuiSelect-nativeInput",
                                                "outlined": "MuiSelect-outlined",
                                                "root": "MuiSelect-root",
                                                "select": "MuiSelect-select",
                                                "selectMenu": "MuiSelect-selectMenu",
                                              },
                                              "displayEmpty": false,
                                              "labelId": undefined,
                                              "multiple": false,
                                              "onClose": undefined,
                                              "onOpen": undefined,
                                              "open": undefined,
                                              "renderValue": undefined,
                                              "type": undefined,
                                              "variant": "standard",
                                            }
                                          }
                                          onChange={[Function]}
                                          onClick={[Function]}
                                          style={
                                            Object {
                                              "fontSize": "0.8125rem",
                                              "width": "120px",
                                              "zIndex": 1,
                                            }
                                          }
                                          value={false}
                                        >
                                          <ForwardRef(Input)
                                            className=""
                                            classes={
                                              Object {
                                                "colorSecondary": "MuiInput-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "focused": "Mui-focused",
                                                "formControl": "MuiInput-formControl",
                                                "fullWidth": "MuiInput-fullWidth",
                                                "input": "MuiInput-input",
                                                "inputMarginDense": "MuiInput-inputMarginDense",
                                                "inputMultiline": "MuiInput-inputMultiline",
                                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                "marginDense": "MuiInput-marginDense",
                                                "multiline": "MuiInput-multiline",
                                                "root": "MuiInput-root",
                                                "underline": "MuiInput-underline",
                                              }
                                            }
                                            disabled={false}
                                            inputComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "propTypes": Object {
                                                  "IconComponent": [Function],
                                                  "MenuProps": [Function],
                                                  "SelectDisplayProps": [Function],
                                                  "aria-label": [Function],
                                                  "autoFocus": [Function],
                                                  "autoWidth": [Function],
                                                  "children": [Function],
                                                  "className": [Function],
                                                  "classes": [Function],
                                                  "defaultValue": [Function],
                                                  "disabled": [Function],
                                                  "displayEmpty": [Function],
                                                  "inputRef": [Function],
                                                  "labelId": [Function],
                                                  "multiple": [Function],
                                                  "name": [Function],
                                                  "onBlur": [Function],
                                                  "onChange": [Function],
                                                  "onClose": [Function],
                                                  "onFocus": [Function],
                                                  "onOpen": [Function],
                                                  "open": [Function],
                                                  "readOnly": [Function],
                                                  "renderValue": [Function],
                                                  "tabIndex": [Function],
                                                  "type": [Function],
                                                  "value": [Function],
                                                  "variant": [Function],
                                                },
                                                "render": [Function],
                                              }
                                            }
                                            inputProps={
                                              Object {
                                                "IconComponent": Object {
                                                  "$$typeof": Symbol(react.memo),
                                                  "compare": null,
                                                  "type": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "render": [Function],
                                                  },
                                                },
                                                "MenuProps": undefined,
                                                "SelectDisplayProps": Object {
                                                  "id": undefined,
                                                },
                                                "autoWidth": false,
                                                "children": Array [
                                                  <WithStyles(ForwardRef(MenuItem))
                                                    disabled={true}
                                                    style={
                                                      Object {
                                                        "display": "none",
                                                      }
                                                    }
                                                    value="_default"
                                                  >
                                                    
                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                  Array [
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      value={true}
                                                    >
                                                      On
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      value={false}
                                                    >
                                                      Off
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                  ],
                                                ],
                                                "classes": Object {
                                                  "disabled": "Mui-disabled",
                                                  "filled": "MuiSelect-filled",
                                                  "icon": "MuiSelect-icon",
                                                  "iconFilled": "MuiSelect-iconFilled",
                                                  "iconOpen": "MuiSelect-iconOpen",
                                                  "iconOutlined": "MuiSelect-iconOutlined",
                                                  "nativeInput": "MuiSelect-nativeInput",
                                                  "outlined": "MuiSelect-outlined",
                                                  "root": "MuiSelect-root",
                                                  "select": "MuiSelect-select",
                                                  "selectMenu": "MuiSelect-selectMenu",
                                                },
                                                "displayEmpty": false,
                                                "labelId": undefined,
                                                "multiple": false,
                                                "onClose": undefined,
                                                "onOpen": undefined,
                                                "open": undefined,
                                                "renderValue": undefined,
                                                "type": undefined,
                                                "variant": "standard",
                                              }
                                            }
                                            onChange={[Function]}
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "fontSize": "0.8125rem",
                                                "width": "120px",
                                                "zIndex": 1,
                                              }
                                            }
                                            value={false}
                                          >
                                            <WithStyles(ForwardRef(InputBase))
                                              className=""
                                              classes={
                                                Object {
                                                  "colorSecondary": "MuiInput-colorSecondary",
                                                  "disabled": "Mui-disabled",
                                                  "error": "Mui-error",
                                                  "focused": "Mui-focused",
                                                  "formControl": "MuiInput-formControl",
                                                  "fullWidth": "MuiInput-fullWidth",
                                                  "input": "MuiInput-input",
                                                  "inputMarginDense": "MuiInput-inputMarginDense",
                                                  "inputMultiline": "MuiInput-inputMultiline",
                                                  "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                  "marginDense": "MuiInput-marginDense",
                                                  "multiline": "MuiInput-multiline",
                                                  "root": "MuiInput-root MuiInput-underline",
                                                  "underline": null,
                                                }
                                              }
                                              disabled={false}
                                              fullWidth={false}
                                              inputComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "propTypes": Object {
                                                    "IconComponent": [Function],
                                                    "MenuProps": [Function],
                                                    "SelectDisplayProps": [Function],
                                                    "aria-label": [Function],
                                                    "autoFocus": [Function],
                                                    "autoWidth": [Function],
                                                    "children": [Function],
                                                    "className": [Function],
                                                    "classes": [Function],
                                                    "defaultValue": [Function],
                                                    "disabled": [Function],
                                                    "displayEmpty": [Function],
                                                    "inputRef": [Function],
                                                    "labelId": [Function],
                                                    "multiple": [Function],
                                                    "name": [Function],
                                                    "onBlur": [Function],
                                                    "onChange": [Function],
                                                    "onClose": [Function],
                                                    "onFocus": [Function],
                                                    "onOpen": [Function],
                                                    "open": [Function],
                                                    "readOnly": [Function],
                                                    "renderValue": [Function],
                                                    "tabIndex": [Function],
                                                    "type": [Function],
                                                    "value": [Function],
                                                    "variant": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              inputProps={
                                                Object {
                                                  "IconComponent": Object {
                                                    "$$typeof": Symbol(react.memo),
                                                    "compare": null,
                                                    "type": Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "render": [Function],
                                                    },
                                                  },
                                                  "MenuProps": undefined,
                                                  "SelectDisplayProps": Object {
                                                    "id": undefined,
                                                  },
                                                  "autoWidth": false,
                                                  "children": Array [
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      disabled={true}
                                                      style={
                                                        Object {
                                                          "display": "none",
                                                        }
                                                      }
                                                      value="_default"
                                                    >
                                                      
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                    Array [
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        value={true}
                                                      >
                                                        On
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        value={false}
                                                      >
                                                        Off
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                    ],
                                                  ],
                                                  "classes": Object {
                                                    "disabled": "Mui-disabled",
                                                    "filled": "MuiSelect-filled",
                                                    "icon": "MuiSelect-icon",
                                                    "iconFilled": "MuiSelect-iconFilled",
                                                    "iconOpen": "MuiSelect-iconOpen",
                                                    "iconOutlined": "MuiSelect-iconOutlined",
                                                    "nativeInput": "MuiSelect-nativeInput",
                                                    "outlined": "MuiSelect-outlined",
                                                    "root": "MuiSelect-root",
                                                    "select": "MuiSelect-select",
                                                    "selectMenu": "MuiSelect-selectMenu",
                                                  },
                                                  "displayEmpty": false,
                                                  "labelId": undefined,
                                                  "multiple": false,
                                                  "onClose": undefined,
                                                  "onOpen": undefined,
                                                  "open": undefined,
                                                  "renderValue": undefined,
                                                  "type": undefined,
                                                  "variant": "standard",
                                                }
                                              }
                                              multiline={false}
                                              onChange={[Function]}
                                              onClick={[Function]}
                                              style={
                                                Object {
                                                  "fontSize": "0.8125rem",
                                                  "width": "120px",
                                                  "zIndex": 1,
                                                }
                                              }
                                              type="text"
                                              value={false}
                                            >
                                              <ForwardRef(InputBase)
                                                className=""
                                                classes={
                                                  Object {
                                                    "adornedEnd": "MuiInputBase-adornedEnd",
                                                    "adornedStart": "MuiInputBase-adornedStart",
                                                    "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                    "disabled": "Mui-disabled Mui-disabled",
                                                    "error": "Mui-error Mui-error",
                                                    "focused": "Mui-focused Mui-focused",
                                                    "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                    "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                    "input": "MuiInputBase-input MuiInput-input",
                                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                    "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                    "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                    "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                    "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                  }
                                                }
                                                disabled={false}
                                                fullWidth={false}
                                                inputComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "propTypes": Object {
                                                      "IconComponent": [Function],
                                                      "MenuProps": [Function],
                                                      "SelectDisplayProps": [Function],
                                                      "aria-label": [Function],
                                                      "autoFocus": [Function],
                                                      "autoWidth": [Function],
                                                      "children": [Function],
                                                      "className": [Function],
                                                      "classes": [Function],
                                                      "defaultValue": [Function],
                                                      "disabled": [Function],
                                                      "displayEmpty": [Function],
                                                      "inputRef": [Function],
                                                      "labelId": [Function],
                                                      "multiple": [Function],
                                                      "name": [Function],
                                                      "onBlur": [Function],
                                                      "onChange": [Function],
                                                      "onClose": [Function],
                                                      "onFocus": [Function],
                                                      "onOpen": [Function],
                                                      "open": [Function],
                                                      "readOnly": [Function],
                                                      "renderValue": [Function],
                                                      "tabIndex": [Function],
                                                      "type": [Function],
                                                      "value": [Function],
                                                      "variant": [Function],
                                                    },
                                                    "render": [Function],
                                                  }
                                                }
                                                inputProps={
                                                  Object {
                                                    "IconComponent": Object {
                                                      "$$typeof": Symbol(react.memo),
                                                      "compare": null,
                                                      "type": Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "render": [Function],
                                                      },
                                                    },
                                                    "MenuProps": undefined,
                                                    "SelectDisplayProps": Object {
                                                      "id": undefined,
                                                    },
                                                    "autoWidth": false,
                                                    "children": Array [
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        disabled={true}
                                                        style={
                                                          Object {
                                                            "display": "none",
                                                          }
                                                        }
                                                        value="_default"
                                                      >
                                                        
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      Array [
                                                        <WithStyles(ForwardRef(MenuItem))
                                                          value={true}
                                                        >
                                                          On
                                                        </WithStyles(ForwardRef(MenuItem))>,
                                                        <WithStyles(ForwardRef(MenuItem))
                                                          value={false}
                                                        >
                                                          Off
                                                        </WithStyles(ForwardRef(MenuItem))>,
                                                      ],
                                                    ],
                                                    "classes": Object {
                                                      "disabled": "Mui-disabled",
                                                      "filled": "MuiSelect-filled",
                                                      "icon": "MuiSelect-icon",
                                                      "iconFilled": "MuiSelect-iconFilled",
                                                      "iconOpen": "MuiSelect-iconOpen",
                                                      "iconOutlined": "MuiSelect-iconOutlined",
                                                      "nativeInput": "MuiSelect-nativeInput",
                                                      "outlined": "MuiSelect-outlined",
                                                      "root": "MuiSelect-root",
                                                      "select": "MuiSelect-select",
                                                      "selectMenu": "MuiSelect-selectMenu",
                                                    },
                                                    "displayEmpty": false,
                                                    "labelId": undefined,
                                                    "multiple": false,
                                                    "onClose": undefined,
                                                    "onOpen": undefined,
                                                    "open": undefined,
                                                    "renderValue": undefined,
                                                    "type": undefined,
                                                    "variant": "standard",
                                                  }
                                                }
                                                multiline={false}
                                                onChange={[Function]}
                                                onClick={[Function]}
                                                style={
                                                  Object {
                                                    "fontSize": "0.8125rem",
                                                    "width": "120px",
                                                    "zIndex": 1,
                                                  }
                                                }
                                                type="text"
                                                value={false}
                                              >
                                                <div
                                                  className="MuiInputBase-root MuiInput-root MuiInput-underline"
                                                  onClick={[Function]}
                                                  style={
                                                    Object {
                                                      "fontSize": "0.8125rem",
                                                      "width": "120px",
                                                      "zIndex": 1,
                                                    }
                                                  }
                                                >
                                                  <ForwardRef(SelectInput)
                                                    IconComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.memo),
                                                        "compare": null,
                                                        "type": Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "render": [Function],
                                                        },
                                                      }
                                                    }
                                                    SelectDisplayProps={
                                                      Object {
                                                        "id": undefined,
                                                      }
                                                    }
                                                    autoWidth={false}
                                                    className="MuiInputBase-input MuiInput-input"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "filled": "MuiSelect-filled",
                                                        "icon": "MuiSelect-icon",
                                                        "iconFilled": "MuiSelect-iconFilled",
                                                        "iconOpen": "MuiSelect-iconOpen",
                                                        "iconOutlined": "MuiSelect-iconOutlined",
                                                        "nativeInput": "MuiSelect-nativeInput",
                                                        "outlined": "MuiSelect-outlined",
                                                        "root": "MuiSelect-root",
                                                        "select": "MuiSelect-select",
                                                        "selectMenu": "MuiSelect-selectMenu",
                                                      }
                                                    }
                                                    disabled={false}
                                                    displayEmpty={false}
                                                    inputRef={[Function]}
                                                    multiple={false}
                                                    onAnimationStart={[Function]}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    value={false}
                                                    variant="standard"
                                                  >
                                                    <div
                                                      aria-haspopup="listbox"
                                                      className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onMouseDown={[Function]}
                                                      role="button"
                                                      tabIndex={0}
                                                    >
                                                      Off
                                                    </div>
                                                    <input
                                                      aria-hidden={true}
                                                      className="MuiSelect-nativeInput"
                                                      onAnimationStart={[Function]}
                                                      onChange={[Function]}
                                                      tabIndex={-1}
                                                      value={false}
                                                    />
                                                    <ForwardRef(ArrowDropDownIcon)
                                                      className="MuiSelect-icon"
                                                    >
                                                      <WithStyles(ForwardRef(SvgIcon))
                                                        className="MuiSelect-icon"
                                                      >
                                                        <ForwardRef(SvgIcon)
                                                          className="MuiSelect-icon"
                                                          classes={
                                                            Object {
                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                              "colorError": "MuiSvgIcon-colorError",
                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                              "root": "MuiSvgIcon-root",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            className="MuiSvgIcon-root MuiSelect-icon"
                                                            focusable="false"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <path
                                                              d="M7 10l5 5 5-5z"
                                                            />
                                                          </svg>
                                                        </ForwardRef(SvgIcon)>
                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                    </ForwardRef(ArrowDropDownIcon)>
                                                    <WithStyles(ForwardRef(Menu))
                                                      MenuListProps={
                                                        Object {
                                                          "aria-labelledby": undefined,
                                                          "disableListWrap": true,
                                                          "role": "listbox",
                                                        }
                                                      }
                                                      PaperProps={
                                                        Object {
                                                          "style": Object {
                                                            "minWidth": undefined,
                                                          },
                                                        }
                                                      }
                                                      anchorEl={
                                                        <div
                                                          aria-haspopup="listbox"
                                                          class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                          role="button"
                                                          tabindex="0"
                                                        >
                                                          Off
                                                        </div>
                                                      }
                                                      id="menu-"
                                                      onClose={[Function]}
                                                      open={false}
                                                    >
                                                      <ForwardRef(Menu)
                                                        MenuListProps={
                                                          Object {
                                                            "aria-labelledby": undefined,
                                                            "disableListWrap": true,
                                                            "role": "listbox",
                                                          }
                                                        }
                                                        PaperProps={
                                                          Object {
                                                            "style": Object {
                                                              "minWidth": undefined,
                                                            },
                                                          }
                                                        }
                                                        anchorEl={
                                                          <div
                                                            aria-haspopup="listbox"
                                                            class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                            role="button"
                                                            tabindex="0"
                                                          >
                                                            Off
                                                          </div>
                                                        }
                                                        classes={
                                                          Object {
                                                            "list": "MuiMenu-list",
                                                            "paper": "MuiMenu-paper",
                                                          }
                                                        }
                                                        id="menu-"
                                                        onClose={[Function]}
                                                        open={false}
                                                      >
                                                        <WithStyles(ForwardRef(Popover))
                                                          PaperProps={
                                                            Object {
                                                              "classes": Object {
                                                                "root": "MuiMenu-paper",
                                                              },
                                                              "style": Object {
                                                                "minWidth": undefined,
                                                              },
                                                            }
                                                          }
                                                          anchorEl={
                                                            <div
                                                              aria-haspopup="listbox"
                                                              class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                              role="button"
                                                              tabindex="0"
                                                            >
                                                              Off
                                                            </div>
                                                          }
                                                          anchorOrigin={
                                                            Object {
                                                              "horizontal": "left",
                                                              "vertical": "top",
                                                            }
                                                          }
                                                          getContentAnchorEl={[Function]}
                                                          id="menu-"
                                                          onClose={[Function]}
                                                          onEntering={[Function]}
                                                          open={false}
                                                          transformOrigin={
                                                            Object {
                                                              "horizontal": "left",
                                                              "vertical": "top",
                                                            }
                                                          }
                                                          transitionDuration="auto"
                                                        >
                                                          <ForwardRef(Popover)
                                                            PaperProps={
                                                              Object {
                                                                "classes": Object {
                                                                  "root": "MuiMenu-paper",
                                                                },
                                                                "style": Object {
                                                                  "minWidth": undefined,
                                                                },
                                                              }
                                                            }
                                                            anchorEl={
                                                              <div
                                                                aria-haspopup="listbox"
                                                                class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                role="button"
                                                                tabindex="0"
                                                              >
                                                                Off
                                                              </div>
                                                            }
                                                            anchorOrigin={
                                                              Object {
                                                                "horizontal": "left",
                                                                "vertical": "top",
                                                              }
                                                            }
                                                            classes={
                                                              Object {
                                                                "paper": "MuiPopover-paper",
                                                                "root": "MuiPopover-root",
                                                              }
                                                            }
                                                            getContentAnchorEl={[Function]}
                                                            id="menu-"
                                                            onClose={[Function]}
                                                            onEntering={[Function]}
                                                            open={false}
                                                            transformOrigin={
                                                              Object {
                                                                "horizontal": "left",
                                                                "vertical": "top",
                                                              }
                                                            }
                                                            transitionDuration="auto"
                                                          >
                                                            <ForwardRef(Modal)
                                                              BackdropProps={
                                                                Object {
                                                                  "invisible": true,
                                                                }
                                                              }
                                                              className="MuiPopover-root"
                                                              container={<body />}
                                                              id="menu-"
                                                              onClose={[Function]}
                                                              open={false}
                                                            />
                                                          </ForwardRef(Popover)>
                                                        </WithStyles(ForwardRef(Popover))>
                                                      </ForwardRef(Menu)>
                                                    </WithStyles(ForwardRef(Menu))>
                                                  </ForwardRef(SelectInput)>
                                                </div>
                                              </ForwardRef(InputBase)>
                                            </WithStyles(ForwardRef(InputBase))>
                                          </ForwardRef(Input)>
                                        </WithStyles(ForwardRef(Input))>
                                      </ForwardRef(Select)>
                                    </WithStyles(ForwardRef(Select))>
                                     
                                  </span>
                                </SelectInput>
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                          <WithStyles(ForwardRef(TableCell))
                            key="settingsFrom"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <ForwardRef(TableCell)
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              onClick={[Function]}
                              style={Object {}}
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body"
                                onClick={[Function]}
                                style={Object {}}
                              >
                                <ColorHighlighter
                                  data={
                                    Object {
                                      "catagory": "CAR Government Regulation",
                                      "id": 2,
                                      "name": "Split Duty Extension to Maximum FDP (Split Duty Extension to Maximum FDP)",
                                      "settingsFrom": "Flight Desk",
                                      "state": false,
                                      "type": "Duty Time Limitation",
                                    }
                                  }
                                  header="isEdited"
                                  highlighter={[Function]}
                                  style={
                                    Object {
                                      "color": "#FF650C",
                                    }
                                  }
                                  value="Flight Desk"
                                >
                                  <span
                                    style={Object {}}
                                  >
                                    Flight Desk
                                  </span>
                                </ColorHighlighter>
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                          <WithStyles(ForwardRef(TableCell))
                            key="catagory"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <ForwardRef(TableCell)
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              onClick={[Function]}
                              style={Object {}}
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body"
                                onClick={[Function]}
                                style={Object {}}
                              >
                                CAR Government Regulation
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                          <WithStyles(ForwardRef(TableCell))
                            key="type"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <ForwardRef(TableCell)
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              onClick={[Function]}
                              style={Object {}}
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body"
                                onClick={[Function]}
                                style={Object {}}
                              >
                                Duty Time Limitation
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                        </tr>
                      </ForwardRef(TableRow)>
                    </WithStyles(ForwardRef(TableRow))>
                    <WithStyles(ForwardRef(TableRow))>
                      <ForwardRef(TableRow)
                        classes={
                          Object {
                            "footer": "MuiTableRow-footer",
                            "head": "MuiTableRow-head",
                            "hover": "MuiTableRow-hover",
                            "root": "MuiTableRow-root",
                            "selected": "Mui-selected",
                          }
                        }
                      >
                        <tr
                          className="MuiTableRow-root"
                          role={null}
                        >
                          <WithStyles(ForwardRef(TableCell))
                            className="no-border"
                            colSpan={6}
                            style={
                              Object {
                                "padding": 0,
                              }
                            }
                          >
                            <ForwardRef(TableCell)
                              className="no-border"
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              colSpan={6}
                              style={
                                Object {
                                  "padding": 0,
                                }
                              }
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body no-border"
                                colSpan={6}
                                style={
                                  Object {
                                    "padding": 0,
                                  }
                                }
                              >
                                <WithStyles(ForwardRef(Collapse))
                                  in={false}
                                  timeout="auto"
                                  unmountOnExit={true}
                                >
                                  <ForwardRef(Collapse)
                                    classes={
                                      Object {
                                        "container": "MuiCollapse-container",
                                        "entered": "MuiCollapse-entered",
                                        "hidden": "MuiCollapse-hidden",
                                        "wrapper": "MuiCollapse-wrapper",
                                        "wrapperInner": "MuiCollapse-wrapperInner",
                                      }
                                    }
                                    in={false}
                                    timeout="auto"
                                    unmountOnExit={true}
                                  >
                                    <Transition
                                      addEndListener={[Function]}
                                      appear={false}
                                      enter={true}
                                      exit={true}
                                      in={false}
                                      mountOnEnter={false}
                                      onEnter={[Function]}
                                      onEntered={[Function]}
                                      onEntering={[Function]}
                                      onExit={[Function]}
                                      onExited={[Function]}
                                      onExiting={[Function]}
                                      timeout={null}
                                      unmountOnExit={true}
                                    />
                                  </ForwardRef(Collapse)>
                                </WithStyles(ForwardRef(Collapse))>
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                        </tr>
                      </ForwardRef(TableRow)>
                    </WithStyles(ForwardRef(TableRow))>
                    <WithStyles(ForwardRef(TableRow))
                      classes={
                        Object {
                          "hover": "hover",
                          "root": "MuiTableRow",
                          "selected": "selected",
                        }
                      }
                      hover={true}
                      id="tablerow3"
                      selected={false}
                    >
                      <ForwardRef(TableRow)
                        classes={
                          Object {
                            "footer": "MuiTableRow-footer",
                            "head": "MuiTableRow-head",
                            "hover": "MuiTableRow-hover hover",
                            "root": "MuiTableRow-root MuiTableRow",
                            "selected": "Mui-selected selected",
                          }
                        }
                        hover={true}
                        id="tablerow3"
                        selected={false}
                      >
                        <tr
                          className="MuiTableRow-root MuiTableRow MuiTableRow-hover hover"
                          id="tablerow3"
                          role={null}
                        >
                          <WithStyles(ForwardRef(TableCell))
                            style={
                              Object {
                                "height": 40,
                                "paddingLeft": "18px",
                                "paddingRight": "0px",
                                "width": 40,
                              }
                            }
                          >
                            <ForwardRef(TableCell)
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              style={
                                Object {
                                  "height": 40,
                                  "paddingLeft": "18px",
                                  "paddingRight": "0px",
                                  "width": 40,
                                }
                              }
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body"
                                style={
                                  Object {
                                    "height": 40,
                                    "paddingLeft": "18px",
                                    "paddingRight": "0px",
                                    "width": 40,
                                  }
                                }
                              >
                                <WithStyles(ForwardRef(Checkbox))
                                  checked={false}
                                  color="primary"
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "height": 20,
                                      "width": 20,
                                    }
                                  }
                                >
                                  <ForwardRef(Checkbox)
                                    checked={false}
                                    classes={
                                      Object {
                                        "checked": "Mui-checked",
                                        "colorPrimary": "MuiCheckbox-colorPrimary",
                                        "colorSecondary": "MuiCheckbox-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "indeterminate": "MuiCheckbox-indeterminate",
                                        "root": "MuiCheckbox-root",
                                      }
                                    }
                                    color="primary"
                                    onClick={[Function]}
                                    style={
                                      Object {
                                        "height": 20,
                                        "width": 20,
                                      }
                                    }
                                  >
                                    <WithStyles(ForwardRef(SwitchBase))
                                      checked={false}
                                      checkedIcon={<Memo />}
                                      classes={
                                        Object {
                                          "checked": "Mui-checked",
                                          "disabled": "Mui-disabled",
                                          "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                                        }
                                      }
                                      color="primary"
                                      icon={<Memo />}
                                      inputProps={
                                        Object {
                                          "data-indeterminate": false,
                                        }
                                      }
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "height": 20,
                                          "width": 20,
                                        }
                                      }
                                      type="checkbox"
                                    >
                                      <ForwardRef(SwitchBase)
                                        checked={false}
                                        checkedIcon={<Memo />}
                                        classes={
                                          Object {
                                            "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                                            "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                                            "input": "PrivateSwitchBase-input-4",
                                            "root": "PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary",
                                          }
                                        }
                                        color="primary"
                                        icon={<Memo />}
                                        inputProps={
                                          Object {
                                            "data-indeterminate": false,
                                          }
                                        }
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "height": 20,
                                            "width": 20,
                                          }
                                        }
                                        type="checkbox"
                                      >
                                        <WithStyles(ForwardRef(IconButton))
                                          className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary"
                                          color="primary"
                                          component="span"
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          style={
                                            Object {
                                              "height": 20,
                                              "width": 20,
                                            }
                                          }
                                          tabIndex={null}
                                        >
                                          <ForwardRef(IconButton)
                                            className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary"
                                            classes={
                                              Object {
                                                "colorInherit": "MuiIconButton-colorInherit",
                                                "colorPrimary": "MuiIconButton-colorPrimary",
                                                "colorSecondary": "MuiIconButton-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "edgeEnd": "MuiIconButton-edgeEnd",
                                                "edgeStart": "MuiIconButton-edgeStart",
                                                "label": "MuiIconButton-label",
                                                "root": "MuiIconButton-root",
                                                "sizeSmall": "MuiIconButton-sizeSmall",
                                              }
                                            }
                                            color="primary"
                                            component="span"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            style={
                                              Object {
                                                "height": 20,
                                                "width": 20,
                                              }
                                            }
                                            tabIndex={null}
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              centerRipple={true}
                                              className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                              component="span"
                                              disabled={false}
                                              focusRipple={true}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              style={
                                                Object {
                                                  "height": 20,
                                                  "width": 20,
                                                }
                                              }
                                              tabIndex={null}
                                            >
                                              <ForwardRef(ButtonBase)
                                                centerRipple={true}
                                                className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="span"
                                                disabled={false}
                                                focusRipple={true}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                style={
                                                  Object {
                                                    "height": 20,
                                                    "width": 20,
                                                  }
                                                }
                                                tabIndex={null}
                                              >
                                                <span
                                                  aria-disabled={false}
                                                  className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  style={
                                                    Object {
                                                      "height": 20,
                                                      "width": 20,
                                                    }
                                                  }
                                                  tabIndex={null}
                                                >
                                                  <span
                                                    className="MuiIconButton-label"
                                                  >
                                                    <input
                                                      checked={false}
                                                      className="PrivateSwitchBase-input-4"
                                                      data-indeterminate={false}
                                                      onChange={[Function]}
                                                      type="checkbox"
                                                    />
                                                    <ForwardRef(CheckBoxOutlineBlankIcon)>
                                                      <WithStyles(ForwardRef(SvgIcon))>
                                                        <ForwardRef(SvgIcon)
                                                          classes={
                                                            Object {
                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                              "colorError": "MuiSvgIcon-colorError",
                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                              "root": "MuiSvgIcon-root",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            className="MuiSvgIcon-root"
                                                            focusable="false"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <path
                                                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                            />
                                                          </svg>
                                                        </ForwardRef(SvgIcon)>
                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                    </ForwardRef(CheckBoxOutlineBlankIcon)>
                                                  </span>
                                                  <WithStyles(memo)
                                                    center={true}
                                                  >
                                                    <ForwardRef(TouchRipple)
                                                      center={true}
                                                      classes={
                                                        Object {
                                                          "child": "MuiTouchRipple-child",
                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                          "ripple": "MuiTouchRipple-ripple",
                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                          "root": "MuiTouchRipple-root",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        className="MuiTouchRipple-root"
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          component={null}
                                                          exit={true}
                                                        />
                                                      </span>
                                                    </ForwardRef(TouchRipple)>
                                                  </WithStyles(memo)>
                                                </span>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(IconButton)>
                                        </WithStyles(ForwardRef(IconButton))>
                                      </ForwardRef(SwitchBase)>
                                    </WithStyles(ForwardRef(SwitchBase))>
                                  </ForwardRef(Checkbox)>
                                </WithStyles(ForwardRef(Checkbox))>
                                <WithStyles(ForwardRef(IconButton))
                                  aria-label="expand row"
                                  onClick={[Function]}
                                  size="small"
                                  style={
                                    Object {
                                      "marginLeft": "10px",
                                    }
                                  }
                                >
                                  <ForwardRef(IconButton)
                                    aria-label="expand row"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit",
                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                        "edgeStart": "MuiIconButton-edgeStart",
                                        "label": "MuiIconButton-label",
                                        "root": "MuiIconButton-root",
                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                      }
                                    }
                                    onClick={[Function]}
                                    size="small"
                                    style={
                                      Object {
                                        "marginLeft": "10px",
                                      }
                                    }
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      aria-label="expand row"
                                      centerRipple={true}
                                      className="MuiIconButton-root MuiIconButton-sizeSmall"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "marginLeft": "10px",
                                        }
                                      }
                                    >
                                      <ForwardRef(ButtonBase)
                                        aria-label="expand row"
                                        centerRipple={true}
                                        className="MuiIconButton-root MuiIconButton-sizeSmall"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "marginLeft": "10px",
                                          }
                                        }
                                      >
                                        <button
                                          aria-label="expand row"
                                          className="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          style={
                                            Object {
                                              "marginLeft": "10px",
                                            }
                                          }
                                          tabIndex={0}
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <ForwardRef(KeyboardArrowDownIcon)>
                                              <WithStyles(ForwardRef(SvgIcon))>
                                                <ForwardRef(SvgIcon)
                                                  classes={
                                                    Object {
                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                      "colorError": "MuiSvgIcon-colorError",
                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                      "root": "MuiSvgIcon-root",
                                                    }
                                                  }
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="MuiSvgIcon-root"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SvgIcon)>
                                              </WithStyles(ForwardRef(SvgIcon))>
                                            </ForwardRef(KeyboardArrowDownIcon)>
                                          </span>
                                          <WithStyles(memo)
                                            center={true}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={true}
                                              classes={
                                                Object {
                                                  "child": "MuiTouchRipple-child",
                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                  "ripple": "MuiTouchRipple-ripple",
                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                  "root": "MuiTouchRipple-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="MuiTouchRipple-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(memo)>
                                        </button>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(IconButton)>
                                </WithStyles(ForwardRef(IconButton))>
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                          <WithStyles(ForwardRef(TableCell))
                            key="name"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <ForwardRef(TableCell)
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              onClick={[Function]}
                              style={Object {}}
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body"
                                onClick={[Function]}
                                style={Object {}}
                              >
                                <OverflowTip
                                  content="Minimum Rest at Home Base (Minimum Rest at Home Base)"
                                  maxWidth="200px"
                                  tooltipStyle={
                                    Object {
                                      "maxWidth": "235px",
                                    }
                                  }
                                  value="Minimum Rest at Home Base (Minimum Rest at Home Base)"
                                >
                                  <SierraMuiTooltip
                                    classes={
                                      Object {
                                        "popper": "ellipse-zoom-popper",
                                      }
                                    }
                                    disableHoverListener={true}
                                    interactive={true}
                                    style={
                                      Object {
                                        "maxWidth": "235px",
                                      }
                                    }
                                    title="Minimum Rest at Home Base (Minimum Rest at Home Base)"
                                  >
                                    <WithStyles(ForwardRef(Tooltip))
                                      arrow={true}
                                      classes={
                                        Object {
                                          "popper": "ellipse-zoom-popper",
                                        }
                                      }
                                      disableHoverListener={true}
                                      interactive={true}
                                      style={
                                        Object {
                                          "maxWidth": "235px",
                                        }
                                      }
                                      title="Minimum Rest at Home Base (Minimum Rest at Home Base)"
                                    >
                                      <ForwardRef(Tooltip)
                                        arrow={true}
                                        classes={
                                          Object {
                                            "arrow": "MuiTooltip-arrow",
                                            "popper": "MuiTooltip-popper ellipse-zoom-popper",
                                            "popperArrow": "MuiTooltip-popperArrow",
                                            "popperInteractive": "MuiTooltip-popperInteractive",
                                            "tooltip": "MuiTooltip-tooltip",
                                            "tooltipArrow": "MuiTooltip-tooltipArrow",
                                            "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                            "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                            "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                            "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                            "touch": "MuiTooltip-touch",
                                          }
                                        }
                                        disableHoverListener={true}
                                        interactive={true}
                                        style={
                                          Object {
                                            "maxWidth": "235px",
                                          }
                                        }
                                        title="Minimum Rest at Home Base (Minimum Rest at Home Base)"
                                      >
                                        <div
                                          aria-describedby={null}
                                          className=""
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchStart={[Function]}
                                          style={
                                            Object {
                                              "maxWidth": "200px",
                                              "overflow": "hidden",
                                              "textOverflow": "ellipsis",
                                              "whiteSpace": "nowrap",
                                            }
                                          }
                                          title={null}
                                        >
                                          Minimum Rest at Home Base (Minimum Rest at Home Base)
                                        </div>
                                        <ForwardRef(Popper)
                                          anchorEl={
                                            <div
                                              class=""
                                              style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 200px;"
                                            >
                                              Minimum Rest at Home Base (Minimum Rest at Home Base)
                                            </div>
                                          }
                                          className="MuiTooltip-popper ellipse-zoom-popper MuiTooltip-popperInteractive MuiTooltip-popperArrow"
                                          id={null}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          open={false}
                                          placement="bottom"
                                          popperOptions={
                                            Object {
                                              "modifiers": Object {
                                                "arrow": Object {
                                                  "element": null,
                                                  "enabled": false,
                                                },
                                              },
                                            }
                                          }
                                          transition={true}
                                        />
                                      </ForwardRef(Tooltip)>
                                    </WithStyles(ForwardRef(Tooltip))>
                                  </SierraMuiTooltip>
                                </OverflowTip>
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                          <WithStyles(ForwardRef(TableCell))
                            key="state"
                            onClick={[Function]}
                            style={
                              Object {
                                "width": "120px",
                              }
                            }
                          >
                            <ForwardRef(TableCell)
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              onClick={[Function]}
                              style={
                                Object {
                                  "width": "120px",
                                }
                              }
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "width": "120px",
                                  }
                                }
                              >
                                <SelectInput
                                  data={
                                    Object {
                                      "catagory": "CAR Government Regulation",
                                      "id": 3,
                                      "name": "Minimum Rest at Home Base (Minimum Rest at Home Base)",
                                      "settingsFrom": "Baseline Rules",
                                      "state": true,
                                      "type": "Rest RUle",
                                    }
                                  }
                                  defaultValue="_default"
                                  enableReset={false}
                                  error={false}
                                  getTooltipContent={[Function]}
                                  handleDisable={[Function]}
                                  handleReset={[Function]}
                                  handleTooltipDisable={[Function]}
                                  items={
                                    Array [
                                      Object {
                                        "display": "On",
                                        "value": true,
                                      },
                                      Object {
                                        "display": "Off",
                                        "value": false,
                                      },
                                    ]
                                  }
                                  onChange={[Function]}
                                  placeholder=""
                                  removeOverlay={[Function]}
                                  style={
                                    Object {
                                      "fontSize": "0.8125rem",
                                      "width": "120px",
                                    }
                                  }
                                  value={true}
                                >
                                  <span
                                    className=""
                                  >
                                     
                                    <WithStyles(ForwardRef(Select))
                                      className=""
                                      disabled={false}
                                      onChange={[Function]}
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "fontSize": "0.8125rem",
                                          "width": "120px",
                                          "zIndex": 1,
                                        }
                                      }
                                      value={true}
                                    >
                                      <ForwardRef(Select)
                                        className=""
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "filled": "MuiSelect-filled",
                                            "icon": "MuiSelect-icon",
                                            "iconFilled": "MuiSelect-iconFilled",
                                            "iconOpen": "MuiSelect-iconOpen",
                                            "iconOutlined": "MuiSelect-iconOutlined",
                                            "nativeInput": "MuiSelect-nativeInput",
                                            "outlined": "MuiSelect-outlined",
                                            "root": "MuiSelect-root",
                                            "select": "MuiSelect-select",
                                            "selectMenu": "MuiSelect-selectMenu",
                                          }
                                        }
                                        disabled={false}
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "fontSize": "0.8125rem",
                                            "width": "120px",
                                            "zIndex": 1,
                                          }
                                        }
                                        value={true}
                                      >
                                        <WithStyles(ForwardRef(Input))
                                          className=""
                                          disabled={false}
                                          inputComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "propTypes": Object {
                                                "IconComponent": [Function],
                                                "MenuProps": [Function],
                                                "SelectDisplayProps": [Function],
                                                "aria-label": [Function],
                                                "autoFocus": [Function],
                                                "autoWidth": [Function],
                                                "children": [Function],
                                                "className": [Function],
                                                "classes": [Function],
                                                "defaultValue": [Function],
                                                "disabled": [Function],
                                                "displayEmpty": [Function],
                                                "inputRef": [Function],
                                                "labelId": [Function],
                                                "multiple": [Function],
                                                "name": [Function],
                                                "onBlur": [Function],
                                                "onChange": [Function],
                                                "onClose": [Function],
                                                "onFocus": [Function],
                                                "onOpen": [Function],
                                                "open": [Function],
                                                "readOnly": [Function],
                                                "renderValue": [Function],
                                                "tabIndex": [Function],
                                                "type": [Function],
                                                "value": [Function],
                                                "variant": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          inputProps={
                                            Object {
                                              "IconComponent": Object {
                                                "$$typeof": Symbol(react.memo),
                                                "compare": null,
                                                "type": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "render": [Function],
                                                },
                                              },
                                              "MenuProps": undefined,
                                              "SelectDisplayProps": Object {
                                                "id": undefined,
                                              },
                                              "autoWidth": false,
                                              "children": Array [
                                                <WithStyles(ForwardRef(MenuItem))
                                                  disabled={true}
                                                  style={
                                                    Object {
                                                      "display": "none",
                                                    }
                                                  }
                                                  value="_default"
                                                >
                                                  
                                                </WithStyles(ForwardRef(MenuItem))>,
                                                Array [
                                                  <WithStyles(ForwardRef(MenuItem))
                                                    value={true}
                                                  >
                                                    On
                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                  <WithStyles(ForwardRef(MenuItem))
                                                    value={false}
                                                  >
                                                    Off
                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                ],
                                              ],
                                              "classes": Object {
                                                "disabled": "Mui-disabled",
                                                "filled": "MuiSelect-filled",
                                                "icon": "MuiSelect-icon",
                                                "iconFilled": "MuiSelect-iconFilled",
                                                "iconOpen": "MuiSelect-iconOpen",
                                                "iconOutlined": "MuiSelect-iconOutlined",
                                                "nativeInput": "MuiSelect-nativeInput",
                                                "outlined": "MuiSelect-outlined",
                                                "root": "MuiSelect-root",
                                                "select": "MuiSelect-select",
                                                "selectMenu": "MuiSelect-selectMenu",
                                              },
                                              "displayEmpty": false,
                                              "labelId": undefined,
                                              "multiple": false,
                                              "onClose": undefined,
                                              "onOpen": undefined,
                                              "open": undefined,
                                              "renderValue": undefined,
                                              "type": undefined,
                                              "variant": "standard",
                                            }
                                          }
                                          onChange={[Function]}
                                          onClick={[Function]}
                                          style={
                                            Object {
                                              "fontSize": "0.8125rem",
                                              "width": "120px",
                                              "zIndex": 1,
                                            }
                                          }
                                          value={true}
                                        >
                                          <ForwardRef(Input)
                                            className=""
                                            classes={
                                              Object {
                                                "colorSecondary": "MuiInput-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "focused": "Mui-focused",
                                                "formControl": "MuiInput-formControl",
                                                "fullWidth": "MuiInput-fullWidth",
                                                "input": "MuiInput-input",
                                                "inputMarginDense": "MuiInput-inputMarginDense",
                                                "inputMultiline": "MuiInput-inputMultiline",
                                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                "marginDense": "MuiInput-marginDense",
                                                "multiline": "MuiInput-multiline",
                                                "root": "MuiInput-root",
                                                "underline": "MuiInput-underline",
                                              }
                                            }
                                            disabled={false}
                                            inputComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "propTypes": Object {
                                                  "IconComponent": [Function],
                                                  "MenuProps": [Function],
                                                  "SelectDisplayProps": [Function],
                                                  "aria-label": [Function],
                                                  "autoFocus": [Function],
                                                  "autoWidth": [Function],
                                                  "children": [Function],
                                                  "className": [Function],
                                                  "classes": [Function],
                                                  "defaultValue": [Function],
                                                  "disabled": [Function],
                                                  "displayEmpty": [Function],
                                                  "inputRef": [Function],
                                                  "labelId": [Function],
                                                  "multiple": [Function],
                                                  "name": [Function],
                                                  "onBlur": [Function],
                                                  "onChange": [Function],
                                                  "onClose": [Function],
                                                  "onFocus": [Function],
                                                  "onOpen": [Function],
                                                  "open": [Function],
                                                  "readOnly": [Function],
                                                  "renderValue": [Function],
                                                  "tabIndex": [Function],
                                                  "type": [Function],
                                                  "value": [Function],
                                                  "variant": [Function],
                                                },
                                                "render": [Function],
                                              }
                                            }
                                            inputProps={
                                              Object {
                                                "IconComponent": Object {
                                                  "$$typeof": Symbol(react.memo),
                                                  "compare": null,
                                                  "type": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "render": [Function],
                                                  },
                                                },
                                                "MenuProps": undefined,
                                                "SelectDisplayProps": Object {
                                                  "id": undefined,
                                                },
                                                "autoWidth": false,
                                                "children": Array [
                                                  <WithStyles(ForwardRef(MenuItem))
                                                    disabled={true}
                                                    style={
                                                      Object {
                                                        "display": "none",
                                                      }
                                                    }
                                                    value="_default"
                                                  >
                                                    
                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                  Array [
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      value={true}
                                                    >
                                                      On
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      value={false}
                                                    >
                                                      Off
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                  ],
                                                ],
                                                "classes": Object {
                                                  "disabled": "Mui-disabled",
                                                  "filled": "MuiSelect-filled",
                                                  "icon": "MuiSelect-icon",
                                                  "iconFilled": "MuiSelect-iconFilled",
                                                  "iconOpen": "MuiSelect-iconOpen",
                                                  "iconOutlined": "MuiSelect-iconOutlined",
                                                  "nativeInput": "MuiSelect-nativeInput",
                                                  "outlined": "MuiSelect-outlined",
                                                  "root": "MuiSelect-root",
                                                  "select": "MuiSelect-select",
                                                  "selectMenu": "MuiSelect-selectMenu",
                                                },
                                                "displayEmpty": false,
                                                "labelId": undefined,
                                                "multiple": false,
                                                "onClose": undefined,
                                                "onOpen": undefined,
                                                "open": undefined,
                                                "renderValue": undefined,
                                                "type": undefined,
                                                "variant": "standard",
                                              }
                                            }
                                            onChange={[Function]}
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "fontSize": "0.8125rem",
                                                "width": "120px",
                                                "zIndex": 1,
                                              }
                                            }
                                            value={true}
                                          >
                                            <WithStyles(ForwardRef(InputBase))
                                              className=""
                                              classes={
                                                Object {
                                                  "colorSecondary": "MuiInput-colorSecondary",
                                                  "disabled": "Mui-disabled",
                                                  "error": "Mui-error",
                                                  "focused": "Mui-focused",
                                                  "formControl": "MuiInput-formControl",
                                                  "fullWidth": "MuiInput-fullWidth",
                                                  "input": "MuiInput-input",
                                                  "inputMarginDense": "MuiInput-inputMarginDense",
                                                  "inputMultiline": "MuiInput-inputMultiline",
                                                  "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                  "marginDense": "MuiInput-marginDense",
                                                  "multiline": "MuiInput-multiline",
                                                  "root": "MuiInput-root MuiInput-underline",
                                                  "underline": null,
                                                }
                                              }
                                              disabled={false}
                                              fullWidth={false}
                                              inputComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "propTypes": Object {
                                                    "IconComponent": [Function],
                                                    "MenuProps": [Function],
                                                    "SelectDisplayProps": [Function],
                                                    "aria-label": [Function],
                                                    "autoFocus": [Function],
                                                    "autoWidth": [Function],
                                                    "children": [Function],
                                                    "className": [Function],
                                                    "classes": [Function],
                                                    "defaultValue": [Function],
                                                    "disabled": [Function],
                                                    "displayEmpty": [Function],
                                                    "inputRef": [Function],
                                                    "labelId": [Function],
                                                    "multiple": [Function],
                                                    "name": [Function],
                                                    "onBlur": [Function],
                                                    "onChange": [Function],
                                                    "onClose": [Function],
                                                    "onFocus": [Function],
                                                    "onOpen": [Function],
                                                    "open": [Function],
                                                    "readOnly": [Function],
                                                    "renderValue": [Function],
                                                    "tabIndex": [Function],
                                                    "type": [Function],
                                                    "value": [Function],
                                                    "variant": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              inputProps={
                                                Object {
                                                  "IconComponent": Object {
                                                    "$$typeof": Symbol(react.memo),
                                                    "compare": null,
                                                    "type": Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "render": [Function],
                                                    },
                                                  },
                                                  "MenuProps": undefined,
                                                  "SelectDisplayProps": Object {
                                                    "id": undefined,
                                                  },
                                                  "autoWidth": false,
                                                  "children": Array [
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      disabled={true}
                                                      style={
                                                        Object {
                                                          "display": "none",
                                                        }
                                                      }
                                                      value="_default"
                                                    >
                                                      
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                    Array [
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        value={true}
                                                      >
                                                        On
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        value={false}
                                                      >
                                                        Off
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                    ],
                                                  ],
                                                  "classes": Object {
                                                    "disabled": "Mui-disabled",
                                                    "filled": "MuiSelect-filled",
                                                    "icon": "MuiSelect-icon",
                                                    "iconFilled": "MuiSelect-iconFilled",
                                                    "iconOpen": "MuiSelect-iconOpen",
                                                    "iconOutlined": "MuiSelect-iconOutlined",
                                                    "nativeInput": "MuiSelect-nativeInput",
                                                    "outlined": "MuiSelect-outlined",
                                                    "root": "MuiSelect-root",
                                                    "select": "MuiSelect-select",
                                                    "selectMenu": "MuiSelect-selectMenu",
                                                  },
                                                  "displayEmpty": false,
                                                  "labelId": undefined,
                                                  "multiple": false,
                                                  "onClose": undefined,
                                                  "onOpen": undefined,
                                                  "open": undefined,
                                                  "renderValue": undefined,
                                                  "type": undefined,
                                                  "variant": "standard",
                                                }
                                              }
                                              multiline={false}
                                              onChange={[Function]}
                                              onClick={[Function]}
                                              style={
                                                Object {
                                                  "fontSize": "0.8125rem",
                                                  "width": "120px",
                                                  "zIndex": 1,
                                                }
                                              }
                                              type="text"
                                              value={true}
                                            >
                                              <ForwardRef(InputBase)
                                                className=""
                                                classes={
                                                  Object {
                                                    "adornedEnd": "MuiInputBase-adornedEnd",
                                                    "adornedStart": "MuiInputBase-adornedStart",
                                                    "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                    "disabled": "Mui-disabled Mui-disabled",
                                                    "error": "Mui-error Mui-error",
                                                    "focused": "Mui-focused Mui-focused",
                                                    "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                    "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                    "input": "MuiInputBase-input MuiInput-input",
                                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                    "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                    "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                    "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                    "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                  }
                                                }
                                                disabled={false}
                                                fullWidth={false}
                                                inputComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "propTypes": Object {
                                                      "IconComponent": [Function],
                                                      "MenuProps": [Function],
                                                      "SelectDisplayProps": [Function],
                                                      "aria-label": [Function],
                                                      "autoFocus": [Function],
                                                      "autoWidth": [Function],
                                                      "children": [Function],
                                                      "className": [Function],
                                                      "classes": [Function],
                                                      "defaultValue": [Function],
                                                      "disabled": [Function],
                                                      "displayEmpty": [Function],
                                                      "inputRef": [Function],
                                                      "labelId": [Function],
                                                      "multiple": [Function],
                                                      "name": [Function],
                                                      "onBlur": [Function],
                                                      "onChange": [Function],
                                                      "onClose": [Function],
                                                      "onFocus": [Function],
                                                      "onOpen": [Function],
                                                      "open": [Function],
                                                      "readOnly": [Function],
                                                      "renderValue": [Function],
                                                      "tabIndex": [Function],
                                                      "type": [Function],
                                                      "value": [Function],
                                                      "variant": [Function],
                                                    },
                                                    "render": [Function],
                                                  }
                                                }
                                                inputProps={
                                                  Object {
                                                    "IconComponent": Object {
                                                      "$$typeof": Symbol(react.memo),
                                                      "compare": null,
                                                      "type": Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "render": [Function],
                                                      },
                                                    },
                                                    "MenuProps": undefined,
                                                    "SelectDisplayProps": Object {
                                                      "id": undefined,
                                                    },
                                                    "autoWidth": false,
                                                    "children": Array [
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        disabled={true}
                                                        style={
                                                          Object {
                                                            "display": "none",
                                                          }
                                                        }
                                                        value="_default"
                                                      >
                                                        
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      Array [
                                                        <WithStyles(ForwardRef(MenuItem))
                                                          value={true}
                                                        >
                                                          On
                                                        </WithStyles(ForwardRef(MenuItem))>,
                                                        <WithStyles(ForwardRef(MenuItem))
                                                          value={false}
                                                        >
                                                          Off
                                                        </WithStyles(ForwardRef(MenuItem))>,
                                                      ],
                                                    ],
                                                    "classes": Object {
                                                      "disabled": "Mui-disabled",
                                                      "filled": "MuiSelect-filled",
                                                      "icon": "MuiSelect-icon",
                                                      "iconFilled": "MuiSelect-iconFilled",
                                                      "iconOpen": "MuiSelect-iconOpen",
                                                      "iconOutlined": "MuiSelect-iconOutlined",
                                                      "nativeInput": "MuiSelect-nativeInput",
                                                      "outlined": "MuiSelect-outlined",
                                                      "root": "MuiSelect-root",
                                                      "select": "MuiSelect-select",
                                                      "selectMenu": "MuiSelect-selectMenu",
                                                    },
                                                    "displayEmpty": false,
                                                    "labelId": undefined,
                                                    "multiple": false,
                                                    "onClose": undefined,
                                                    "onOpen": undefined,
                                                    "open": undefined,
                                                    "renderValue": undefined,
                                                    "type": undefined,
                                                    "variant": "standard",
                                                  }
                                                }
                                                multiline={false}
                                                onChange={[Function]}
                                                onClick={[Function]}
                                                style={
                                                  Object {
                                                    "fontSize": "0.8125rem",
                                                    "width": "120px",
                                                    "zIndex": 1,
                                                  }
                                                }
                                                type="text"
                                                value={true}
                                              >
                                                <div
                                                  className="MuiInputBase-root MuiInput-root MuiInput-underline"
                                                  onClick={[Function]}
                                                  style={
                                                    Object {
                                                      "fontSize": "0.8125rem",
                                                      "width": "120px",
                                                      "zIndex": 1,
                                                    }
                                                  }
                                                >
                                                  <ForwardRef(SelectInput)
                                                    IconComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.memo),
                                                        "compare": null,
                                                        "type": Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "render": [Function],
                                                        },
                                                      }
                                                    }
                                                    SelectDisplayProps={
                                                      Object {
                                                        "id": undefined,
                                                      }
                                                    }
                                                    autoWidth={false}
                                                    className="MuiInputBase-input MuiInput-input"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "filled": "MuiSelect-filled",
                                                        "icon": "MuiSelect-icon",
                                                        "iconFilled": "MuiSelect-iconFilled",
                                                        "iconOpen": "MuiSelect-iconOpen",
                                                        "iconOutlined": "MuiSelect-iconOutlined",
                                                        "nativeInput": "MuiSelect-nativeInput",
                                                        "outlined": "MuiSelect-outlined",
                                                        "root": "MuiSelect-root",
                                                        "select": "MuiSelect-select",
                                                        "selectMenu": "MuiSelect-selectMenu",
                                                      }
                                                    }
                                                    disabled={false}
                                                    displayEmpty={false}
                                                    inputRef={[Function]}
                                                    multiple={false}
                                                    onAnimationStart={[Function]}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    value={true}
                                                    variant="standard"
                                                  >
                                                    <div
                                                      aria-haspopup="listbox"
                                                      className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onMouseDown={[Function]}
                                                      role="button"
                                                      tabIndex={0}
                                                    >
                                                      On
                                                    </div>
                                                    <input
                                                      aria-hidden={true}
                                                      className="MuiSelect-nativeInput"
                                                      onAnimationStart={[Function]}
                                                      onChange={[Function]}
                                                      tabIndex={-1}
                                                      value={true}
                                                    />
                                                    <ForwardRef(ArrowDropDownIcon)
                                                      className="MuiSelect-icon"
                                                    >
                                                      <WithStyles(ForwardRef(SvgIcon))
                                                        className="MuiSelect-icon"
                                                      >
                                                        <ForwardRef(SvgIcon)
                                                          className="MuiSelect-icon"
                                                          classes={
                                                            Object {
                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                              "colorError": "MuiSvgIcon-colorError",
                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                              "root": "MuiSvgIcon-root",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            className="MuiSvgIcon-root MuiSelect-icon"
                                                            focusable="false"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <path
                                                              d="M7 10l5 5 5-5z"
                                                            />
                                                          </svg>
                                                        </ForwardRef(SvgIcon)>
                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                    </ForwardRef(ArrowDropDownIcon)>
                                                    <WithStyles(ForwardRef(Menu))
                                                      MenuListProps={
                                                        Object {
                                                          "aria-labelledby": undefined,
                                                          "disableListWrap": true,
                                                          "role": "listbox",
                                                        }
                                                      }
                                                      PaperProps={
                                                        Object {
                                                          "style": Object {
                                                            "minWidth": undefined,
                                                          },
                                                        }
                                                      }
                                                      anchorEl={
                                                        <div
                                                          aria-haspopup="listbox"
                                                          class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                          role="button"
                                                          tabindex="0"
                                                        >
                                                          On
                                                        </div>
                                                      }
                                                      id="menu-"
                                                      onClose={[Function]}
                                                      open={false}
                                                    >
                                                      <ForwardRef(Menu)
                                                        MenuListProps={
                                                          Object {
                                                            "aria-labelledby": undefined,
                                                            "disableListWrap": true,
                                                            "role": "listbox",
                                                          }
                                                        }
                                                        PaperProps={
                                                          Object {
                                                            "style": Object {
                                                              "minWidth": undefined,
                                                            },
                                                          }
                                                        }
                                                        anchorEl={
                                                          <div
                                                            aria-haspopup="listbox"
                                                            class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                            role="button"
                                                            tabindex="0"
                                                          >
                                                            On
                                                          </div>
                                                        }
                                                        classes={
                                                          Object {
                                                            "list": "MuiMenu-list",
                                                            "paper": "MuiMenu-paper",
                                                          }
                                                        }
                                                        id="menu-"
                                                        onClose={[Function]}
                                                        open={false}
                                                      >
                                                        <WithStyles(ForwardRef(Popover))
                                                          PaperProps={
                                                            Object {
                                                              "classes": Object {
                                                                "root": "MuiMenu-paper",
                                                              },
                                                              "style": Object {
                                                                "minWidth": undefined,
                                                              },
                                                            }
                                                          }
                                                          anchorEl={
                                                            <div
                                                              aria-haspopup="listbox"
                                                              class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                              role="button"
                                                              tabindex="0"
                                                            >
                                                              On
                                                            </div>
                                                          }
                                                          anchorOrigin={
                                                            Object {
                                                              "horizontal": "left",
                                                              "vertical": "top",
                                                            }
                                                          }
                                                          getContentAnchorEl={[Function]}
                                                          id="menu-"
                                                          onClose={[Function]}
                                                          onEntering={[Function]}
                                                          open={false}
                                                          transformOrigin={
                                                            Object {
                                                              "horizontal": "left",
                                                              "vertical": "top",
                                                            }
                                                          }
                                                          transitionDuration="auto"
                                                        >
                                                          <ForwardRef(Popover)
                                                            PaperProps={
                                                              Object {
                                                                "classes": Object {
                                                                  "root": "MuiMenu-paper",
                                                                },
                                                                "style": Object {
                                                                  "minWidth": undefined,
                                                                },
                                                              }
                                                            }
                                                            anchorEl={
                                                              <div
                                                                aria-haspopup="listbox"
                                                                class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                role="button"
                                                                tabindex="0"
                                                              >
                                                                On
                                                              </div>
                                                            }
                                                            anchorOrigin={
                                                              Object {
                                                                "horizontal": "left",
                                                                "vertical": "top",
                                                              }
                                                            }
                                                            classes={
                                                              Object {
                                                                "paper": "MuiPopover-paper",
                                                                "root": "MuiPopover-root",
                                                              }
                                                            }
                                                            getContentAnchorEl={[Function]}
                                                            id="menu-"
                                                            onClose={[Function]}
                                                            onEntering={[Function]}
                                                            open={false}
                                                            transformOrigin={
                                                              Object {
                                                                "horizontal": "left",
                                                                "vertical": "top",
                                                              }
                                                            }
                                                            transitionDuration="auto"
                                                          >
                                                            <ForwardRef(Modal)
                                                              BackdropProps={
                                                                Object {
                                                                  "invisible": true,
                                                                }
                                                              }
                                                              className="MuiPopover-root"
                                                              container={<body />}
                                                              id="menu-"
                                                              onClose={[Function]}
                                                              open={false}
                                                            />
                                                          </ForwardRef(Popover)>
                                                        </WithStyles(ForwardRef(Popover))>
                                                      </ForwardRef(Menu)>
                                                    </WithStyles(ForwardRef(Menu))>
                                                  </ForwardRef(SelectInput)>
                                                </div>
                                              </ForwardRef(InputBase)>
                                            </WithStyles(ForwardRef(InputBase))>
                                          </ForwardRef(Input)>
                                        </WithStyles(ForwardRef(Input))>
                                      </ForwardRef(Select)>
                                    </WithStyles(ForwardRef(Select))>
                                     
                                  </span>
                                </SelectInput>
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                          <WithStyles(ForwardRef(TableCell))
                            key="settingsFrom"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <ForwardRef(TableCell)
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              onClick={[Function]}
                              style={Object {}}
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body"
                                onClick={[Function]}
                                style={Object {}}
                              >
                                <ColorHighlighter
                                  data={
                                    Object {
                                      "catagory": "CAR Government Regulation",
                                      "id": 3,
                                      "name": "Minimum Rest at Home Base (Minimum Rest at Home Base)",
                                      "settingsFrom": "Baseline Rules",
                                      "state": true,
                                      "type": "Rest RUle",
                                    }
                                  }
                                  header="isEdited"
                                  highlighter={[Function]}
                                  style={
                                    Object {
                                      "color": "#FF650C",
                                    }
                                  }
                                  value="Baseline Rules"
                                >
                                  <span
                                    style={Object {}}
                                  >
                                    Baseline Rules
                                  </span>
                                </ColorHighlighter>
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                          <WithStyles(ForwardRef(TableCell))
                            key="catagory"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <ForwardRef(TableCell)
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              onClick={[Function]}
                              style={Object {}}
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body"
                                onClick={[Function]}
                                style={Object {}}
                              >
                                CAR Government Regulation
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                          <WithStyles(ForwardRef(TableCell))
                            key="type"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <ForwardRef(TableCell)
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              onClick={[Function]}
                              style={Object {}}
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body"
                                onClick={[Function]}
                                style={Object {}}
                              >
                                Rest RUle
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                        </tr>
                      </ForwardRef(TableRow)>
                    </WithStyles(ForwardRef(TableRow))>
                    <WithStyles(ForwardRef(TableRow))>
                      <ForwardRef(TableRow)
                        classes={
                          Object {
                            "footer": "MuiTableRow-footer",
                            "head": "MuiTableRow-head",
                            "hover": "MuiTableRow-hover",
                            "root": "MuiTableRow-root",
                            "selected": "Mui-selected",
                          }
                        }
                      >
                        <tr
                          className="MuiTableRow-root"
                          role={null}
                        >
                          <WithStyles(ForwardRef(TableCell))
                            className="no-border"
                            colSpan={6}
                            style={
                              Object {
                                "padding": 0,
                              }
                            }
                          >
                            <ForwardRef(TableCell)
                              className="no-border"
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              colSpan={6}
                              style={
                                Object {
                                  "padding": 0,
                                }
                              }
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body no-border"
                                colSpan={6}
                                style={
                                  Object {
                                    "padding": 0,
                                  }
                                }
                              >
                                <WithStyles(ForwardRef(Collapse))
                                  in={false}
                                  timeout="auto"
                                  unmountOnExit={true}
                                >
                                  <ForwardRef(Collapse)
                                    classes={
                                      Object {
                                        "container": "MuiCollapse-container",
                                        "entered": "MuiCollapse-entered",
                                        "hidden": "MuiCollapse-hidden",
                                        "wrapper": "MuiCollapse-wrapper",
                                        "wrapperInner": "MuiCollapse-wrapperInner",
                                      }
                                    }
                                    in={false}
                                    timeout="auto"
                                    unmountOnExit={true}
                                  >
                                    <Transition
                                      addEndListener={[Function]}
                                      appear={false}
                                      enter={true}
                                      exit={true}
                                      in={false}
                                      mountOnEnter={false}
                                      onEnter={[Function]}
                                      onEntered={[Function]}
                                      onEntering={[Function]}
                                      onExit={[Function]}
                                      onExited={[Function]}
                                      onExiting={[Function]}
                                      timeout={null}
                                      unmountOnExit={true}
                                    />
                                  </ForwardRef(Collapse)>
                                </WithStyles(ForwardRef(Collapse))>
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                        </tr>
                      </ForwardRef(TableRow)>
                    </WithStyles(ForwardRef(TableRow))>
                    <WithStyles(ForwardRef(TableRow))
                      classes={
                        Object {
                          "hover": "hover",
                          "root": "MuiTableRow",
                          "selected": "selected",
                        }
                      }
                      hover={true}
                      id="tablerow4"
                      selected={false}
                    >
                      <ForwardRef(TableRow)
                        classes={
                          Object {
                            "footer": "MuiTableRow-footer",
                            "head": "MuiTableRow-head",
                            "hover": "MuiTableRow-hover hover",
                            "root": "MuiTableRow-root MuiTableRow",
                            "selected": "Mui-selected selected",
                          }
                        }
                        hover={true}
                        id="tablerow4"
                        selected={false}
                      >
                        <tr
                          className="MuiTableRow-root MuiTableRow MuiTableRow-hover hover"
                          id="tablerow4"
                          role={null}
                        >
                          <WithStyles(ForwardRef(TableCell))
                            style={
                              Object {
                                "height": 40,
                                "paddingLeft": "18px",
                                "paddingRight": "0px",
                                "width": 40,
                              }
                            }
                          >
                            <ForwardRef(TableCell)
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              style={
                                Object {
                                  "height": 40,
                                  "paddingLeft": "18px",
                                  "paddingRight": "0px",
                                  "width": 40,
                                }
                              }
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body"
                                style={
                                  Object {
                                    "height": 40,
                                    "paddingLeft": "18px",
                                    "paddingRight": "0px",
                                    "width": 40,
                                  }
                                }
                              >
                                <WithStyles(ForwardRef(Checkbox))
                                  checked={false}
                                  color="primary"
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "height": 20,
                                      "width": 20,
                                    }
                                  }
                                >
                                  <ForwardRef(Checkbox)
                                    checked={false}
                                    classes={
                                      Object {
                                        "checked": "Mui-checked",
                                        "colorPrimary": "MuiCheckbox-colorPrimary",
                                        "colorSecondary": "MuiCheckbox-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "indeterminate": "MuiCheckbox-indeterminate",
                                        "root": "MuiCheckbox-root",
                                      }
                                    }
                                    color="primary"
                                    onClick={[Function]}
                                    style={
                                      Object {
                                        "height": 20,
                                        "width": 20,
                                      }
                                    }
                                  >
                                    <WithStyles(ForwardRef(SwitchBase))
                                      checked={false}
                                      checkedIcon={<Memo />}
                                      classes={
                                        Object {
                                          "checked": "Mui-checked",
                                          "disabled": "Mui-disabled",
                                          "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                                        }
                                      }
                                      color="primary"
                                      icon={<Memo />}
                                      inputProps={
                                        Object {
                                          "data-indeterminate": false,
                                        }
                                      }
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "height": 20,
                                          "width": 20,
                                        }
                                      }
                                      type="checkbox"
                                    >
                                      <ForwardRef(SwitchBase)
                                        checked={false}
                                        checkedIcon={<Memo />}
                                        classes={
                                          Object {
                                            "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                                            "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                                            "input": "PrivateSwitchBase-input-4",
                                            "root": "PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary",
                                          }
                                        }
                                        color="primary"
                                        icon={<Memo />}
                                        inputProps={
                                          Object {
                                            "data-indeterminate": false,
                                          }
                                        }
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "height": 20,
                                            "width": 20,
                                          }
                                        }
                                        type="checkbox"
                                      >
                                        <WithStyles(ForwardRef(IconButton))
                                          className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary"
                                          color="primary"
                                          component="span"
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          style={
                                            Object {
                                              "height": 20,
                                              "width": 20,
                                            }
                                          }
                                          tabIndex={null}
                                        >
                                          <ForwardRef(IconButton)
                                            className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary"
                                            classes={
                                              Object {
                                                "colorInherit": "MuiIconButton-colorInherit",
                                                "colorPrimary": "MuiIconButton-colorPrimary",
                                                "colorSecondary": "MuiIconButton-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "edgeEnd": "MuiIconButton-edgeEnd",
                                                "edgeStart": "MuiIconButton-edgeStart",
                                                "label": "MuiIconButton-label",
                                                "root": "MuiIconButton-root",
                                                "sizeSmall": "MuiIconButton-sizeSmall",
                                              }
                                            }
                                            color="primary"
                                            component="span"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            style={
                                              Object {
                                                "height": 20,
                                                "width": 20,
                                              }
                                            }
                                            tabIndex={null}
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              centerRipple={true}
                                              className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                              component="span"
                                              disabled={false}
                                              focusRipple={true}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              style={
                                                Object {
                                                  "height": 20,
                                                  "width": 20,
                                                }
                                              }
                                              tabIndex={null}
                                            >
                                              <ForwardRef(ButtonBase)
                                                centerRipple={true}
                                                className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="span"
                                                disabled={false}
                                                focusRipple={true}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                style={
                                                  Object {
                                                    "height": 20,
                                                    "width": 20,
                                                  }
                                                }
                                                tabIndex={null}
                                              >
                                                <span
                                                  aria-disabled={false}
                                                  className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  style={
                                                    Object {
                                                      "height": 20,
                                                      "width": 20,
                                                    }
                                                  }
                                                  tabIndex={null}
                                                >
                                                  <span
                                                    className="MuiIconButton-label"
                                                  >
                                                    <input
                                                      checked={false}
                                                      className="PrivateSwitchBase-input-4"
                                                      data-indeterminate={false}
                                                      onChange={[Function]}
                                                      type="checkbox"
                                                    />
                                                    <ForwardRef(CheckBoxOutlineBlankIcon)>
                                                      <WithStyles(ForwardRef(SvgIcon))>
                                                        <ForwardRef(SvgIcon)
                                                          classes={
                                                            Object {
                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                              "colorError": "MuiSvgIcon-colorError",
                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                              "root": "MuiSvgIcon-root",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            className="MuiSvgIcon-root"
                                                            focusable="false"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <path
                                                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                            />
                                                          </svg>
                                                        </ForwardRef(SvgIcon)>
                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                    </ForwardRef(CheckBoxOutlineBlankIcon)>
                                                  </span>
                                                  <WithStyles(memo)
                                                    center={true}
                                                  >
                                                    <ForwardRef(TouchRipple)
                                                      center={true}
                                                      classes={
                                                        Object {
                                                          "child": "MuiTouchRipple-child",
                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                          "ripple": "MuiTouchRipple-ripple",
                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                          "root": "MuiTouchRipple-root",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        className="MuiTouchRipple-root"
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          component={null}
                                                          exit={true}
                                                        />
                                                      </span>
                                                    </ForwardRef(TouchRipple)>
                                                  </WithStyles(memo)>
                                                </span>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(IconButton)>
                                        </WithStyles(ForwardRef(IconButton))>
                                      </ForwardRef(SwitchBase)>
                                    </WithStyles(ForwardRef(SwitchBase))>
                                  </ForwardRef(Checkbox)>
                                </WithStyles(ForwardRef(Checkbox))>
                                <WithStyles(ForwardRef(IconButton))
                                  aria-label="expand row"
                                  onClick={[Function]}
                                  size="small"
                                  style={
                                    Object {
                                      "marginLeft": "10px",
                                    }
                                  }
                                >
                                  <ForwardRef(IconButton)
                                    aria-label="expand row"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit",
                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                        "edgeStart": "MuiIconButton-edgeStart",
                                        "label": "MuiIconButton-label",
                                        "root": "MuiIconButton-root",
                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                      }
                                    }
                                    onClick={[Function]}
                                    size="small"
                                    style={
                                      Object {
                                        "marginLeft": "10px",
                                      }
                                    }
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      aria-label="expand row"
                                      centerRipple={true}
                                      className="MuiIconButton-root MuiIconButton-sizeSmall"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "marginLeft": "10px",
                                        }
                                      }
                                    >
                                      <ForwardRef(ButtonBase)
                                        aria-label="expand row"
                                        centerRipple={true}
                                        className="MuiIconButton-root MuiIconButton-sizeSmall"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "marginLeft": "10px",
                                          }
                                        }
                                      >
                                        <button
                                          aria-label="expand row"
                                          className="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          style={
                                            Object {
                                              "marginLeft": "10px",
                                            }
                                          }
                                          tabIndex={0}
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <ForwardRef(KeyboardArrowDownIcon)>
                                              <WithStyles(ForwardRef(SvgIcon))>
                                                <ForwardRef(SvgIcon)
                                                  classes={
                                                    Object {
                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                      "colorError": "MuiSvgIcon-colorError",
                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                      "root": "MuiSvgIcon-root",
                                                    }
                                                  }
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="MuiSvgIcon-root"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SvgIcon)>
                                              </WithStyles(ForwardRef(SvgIcon))>
                                            </ForwardRef(KeyboardArrowDownIcon)>
                                          </span>
                                          <WithStyles(memo)
                                            center={true}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={true}
                                              classes={
                                                Object {
                                                  "child": "MuiTouchRipple-child",
                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                  "ripple": "MuiTouchRipple-ripple",
                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                  "root": "MuiTouchRipple-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="MuiTouchRipple-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(memo)>
                                        </button>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(IconButton)>
                                </WithStyles(ForwardRef(IconButton))>
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                          <WithStyles(ForwardRef(TableCell))
                            key="name"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <ForwardRef(TableCell)
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              onClick={[Function]}
                              style={Object {}}
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body"
                                onClick={[Function]}
                                style={Object {}}
                              >
                                <OverflowTip
                                  content="Earily Duty"
                                  maxWidth="200px"
                                  tooltipStyle={
                                    Object {
                                      "maxWidth": "235px",
                                    }
                                  }
                                  value="Earily Duty"
                                >
                                  <SierraMuiTooltip
                                    classes={
                                      Object {
                                        "popper": "ellipse-zoom-popper",
                                      }
                                    }
                                    disableHoverListener={true}
                                    interactive={true}
                                    style={
                                      Object {
                                        "maxWidth": "235px",
                                      }
                                    }
                                    title="Earily Duty"
                                  >
                                    <WithStyles(ForwardRef(Tooltip))
                                      arrow={true}
                                      classes={
                                        Object {
                                          "popper": "ellipse-zoom-popper",
                                        }
                                      }
                                      disableHoverListener={true}
                                      interactive={true}
                                      style={
                                        Object {
                                          "maxWidth": "235px",
                                        }
                                      }
                                      title="Earily Duty"
                                    >
                                      <ForwardRef(Tooltip)
                                        arrow={true}
                                        classes={
                                          Object {
                                            "arrow": "MuiTooltip-arrow",
                                            "popper": "MuiTooltip-popper ellipse-zoom-popper",
                                            "popperArrow": "MuiTooltip-popperArrow",
                                            "popperInteractive": "MuiTooltip-popperInteractive",
                                            "tooltip": "MuiTooltip-tooltip",
                                            "tooltipArrow": "MuiTooltip-tooltipArrow",
                                            "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                            "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                            "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                            "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                            "touch": "MuiTooltip-touch",
                                          }
                                        }
                                        disableHoverListener={true}
                                        interactive={true}
                                        style={
                                          Object {
                                            "maxWidth": "235px",
                                          }
                                        }
                                        title="Earily Duty"
                                      >
                                        <div
                                          aria-describedby={null}
                                          className=""
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchStart={[Function]}
                                          style={
                                            Object {
                                              "maxWidth": "200px",
                                              "overflow": "hidden",
                                              "textOverflow": "ellipsis",
                                              "whiteSpace": "nowrap",
                                            }
                                          }
                                          title={null}
                                        >
                                          Earily Duty
                                        </div>
                                        <ForwardRef(Popper)
                                          anchorEl={
                                            <div
                                              class=""
                                              style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 200px;"
                                            >
                                              Earily Duty
                                            </div>
                                          }
                                          className="MuiTooltip-popper ellipse-zoom-popper MuiTooltip-popperInteractive MuiTooltip-popperArrow"
                                          id={null}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          open={false}
                                          placement="bottom"
                                          popperOptions={
                                            Object {
                                              "modifiers": Object {
                                                "arrow": Object {
                                                  "element": null,
                                                  "enabled": false,
                                                },
                                              },
                                            }
                                          }
                                          transition={true}
                                        />
                                      </ForwardRef(Tooltip)>
                                    </WithStyles(ForwardRef(Tooltip))>
                                  </SierraMuiTooltip>
                                </OverflowTip>
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                          <WithStyles(ForwardRef(TableCell))
                            key="state"
                            onClick={[Function]}
                            style={
                              Object {
                                "width": "120px",
                              }
                            }
                          >
                            <ForwardRef(TableCell)
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              onClick={[Function]}
                              style={
                                Object {
                                  "width": "120px",
                                }
                              }
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "width": "120px",
                                  }
                                }
                              >
                                <SelectInput
                                  data={
                                    Object {
                                      "catagory": "OverSeas Cabin Contract",
                                      "id": 4,
                                      "isEdited": true,
                                      "name": "Earily Duty",
                                      "settingsFrom": "Widebody",
                                      "state": false,
                                      "type": "Cost RUle",
                                    }
                                  }
                                  defaultValue="_default"
                                  enableReset={false}
                                  error={false}
                                  getTooltipContent={[Function]}
                                  handleDisable={[Function]}
                                  handleReset={[Function]}
                                  handleTooltipDisable={[Function]}
                                  items={
                                    Array [
                                      Object {
                                        "display": "On",
                                        "value": true,
                                      },
                                      Object {
                                        "display": "Off",
                                        "value": false,
                                      },
                                    ]
                                  }
                                  onChange={[Function]}
                                  placeholder=""
                                  removeOverlay={[Function]}
                                  style={
                                    Object {
                                      "fontSize": "0.8125rem",
                                      "width": "120px",
                                    }
                                  }
                                  value={false}
                                >
                                  <span
                                    className=""
                                  >
                                     
                                    <WithStyles(ForwardRef(Select))
                                      className=""
                                      disabled={false}
                                      onChange={[Function]}
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "fontSize": "0.8125rem",
                                          "width": "120px",
                                          "zIndex": 1,
                                        }
                                      }
                                      value={false}
                                    >
                                      <ForwardRef(Select)
                                        className=""
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "filled": "MuiSelect-filled",
                                            "icon": "MuiSelect-icon",
                                            "iconFilled": "MuiSelect-iconFilled",
                                            "iconOpen": "MuiSelect-iconOpen",
                                            "iconOutlined": "MuiSelect-iconOutlined",
                                            "nativeInput": "MuiSelect-nativeInput",
                                            "outlined": "MuiSelect-outlined",
                                            "root": "MuiSelect-root",
                                            "select": "MuiSelect-select",
                                            "selectMenu": "MuiSelect-selectMenu",
                                          }
                                        }
                                        disabled={false}
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "fontSize": "0.8125rem",
                                            "width": "120px",
                                            "zIndex": 1,
                                          }
                                        }
                                        value={false}
                                      >
                                        <WithStyles(ForwardRef(Input))
                                          className=""
                                          disabled={false}
                                          inputComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "propTypes": Object {
                                                "IconComponent": [Function],
                                                "MenuProps": [Function],
                                                "SelectDisplayProps": [Function],
                                                "aria-label": [Function],
                                                "autoFocus": [Function],
                                                "autoWidth": [Function],
                                                "children": [Function],
                                                "className": [Function],
                                                "classes": [Function],
                                                "defaultValue": [Function],
                                                "disabled": [Function],
                                                "displayEmpty": [Function],
                                                "inputRef": [Function],
                                                "labelId": [Function],
                                                "multiple": [Function],
                                                "name": [Function],
                                                "onBlur": [Function],
                                                "onChange": [Function],
                                                "onClose": [Function],
                                                "onFocus": [Function],
                                                "onOpen": [Function],
                                                "open": [Function],
                                                "readOnly": [Function],
                                                "renderValue": [Function],
                                                "tabIndex": [Function],
                                                "type": [Function],
                                                "value": [Function],
                                                "variant": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          inputProps={
                                            Object {
                                              "IconComponent": Object {
                                                "$$typeof": Symbol(react.memo),
                                                "compare": null,
                                                "type": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "render": [Function],
                                                },
                                              },
                                              "MenuProps": undefined,
                                              "SelectDisplayProps": Object {
                                                "id": undefined,
                                              },
                                              "autoWidth": false,
                                              "children": Array [
                                                <WithStyles(ForwardRef(MenuItem))
                                                  disabled={true}
                                                  style={
                                                    Object {
                                                      "display": "none",
                                                    }
                                                  }
                                                  value="_default"
                                                >
                                                  
                                                </WithStyles(ForwardRef(MenuItem))>,
                                                Array [
                                                  <WithStyles(ForwardRef(MenuItem))
                                                    value={true}
                                                  >
                                                    On
                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                  <WithStyles(ForwardRef(MenuItem))
                                                    value={false}
                                                  >
                                                    Off
                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                ],
                                              ],
                                              "classes": Object {
                                                "disabled": "Mui-disabled",
                                                "filled": "MuiSelect-filled",
                                                "icon": "MuiSelect-icon",
                                                "iconFilled": "MuiSelect-iconFilled",
                                                "iconOpen": "MuiSelect-iconOpen",
                                                "iconOutlined": "MuiSelect-iconOutlined",
                                                "nativeInput": "MuiSelect-nativeInput",
                                                "outlined": "MuiSelect-outlined",
                                                "root": "MuiSelect-root",
                                                "select": "MuiSelect-select",
                                                "selectMenu": "MuiSelect-selectMenu",
                                              },
                                              "displayEmpty": false,
                                              "labelId": undefined,
                                              "multiple": false,
                                              "onClose": undefined,
                                              "onOpen": undefined,
                                              "open": undefined,
                                              "renderValue": undefined,
                                              "type": undefined,
                                              "variant": "standard",
                                            }
                                          }
                                          onChange={[Function]}
                                          onClick={[Function]}
                                          style={
                                            Object {
                                              "fontSize": "0.8125rem",
                                              "width": "120px",
                                              "zIndex": 1,
                                            }
                                          }
                                          value={false}
                                        >
                                          <ForwardRef(Input)
                                            className=""
                                            classes={
                                              Object {
                                                "colorSecondary": "MuiInput-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "focused": "Mui-focused",
                                                "formControl": "MuiInput-formControl",
                                                "fullWidth": "MuiInput-fullWidth",
                                                "input": "MuiInput-input",
                                                "inputMarginDense": "MuiInput-inputMarginDense",
                                                "inputMultiline": "MuiInput-inputMultiline",
                                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                "marginDense": "MuiInput-marginDense",
                                                "multiline": "MuiInput-multiline",
                                                "root": "MuiInput-root",
                                                "underline": "MuiInput-underline",
                                              }
                                            }
                                            disabled={false}
                                            inputComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "propTypes": Object {
                                                  "IconComponent": [Function],
                                                  "MenuProps": [Function],
                                                  "SelectDisplayProps": [Function],
                                                  "aria-label": [Function],
                                                  "autoFocus": [Function],
                                                  "autoWidth": [Function],
                                                  "children": [Function],
                                                  "className": [Function],
                                                  "classes": [Function],
                                                  "defaultValue": [Function],
                                                  "disabled": [Function],
                                                  "displayEmpty": [Function],
                                                  "inputRef": [Function],
                                                  "labelId": [Function],
                                                  "multiple": [Function],
                                                  "name": [Function],
                                                  "onBlur": [Function],
                                                  "onChange": [Function],
                                                  "onClose": [Function],
                                                  "onFocus": [Function],
                                                  "onOpen": [Function],
                                                  "open": [Function],
                                                  "readOnly": [Function],
                                                  "renderValue": [Function],
                                                  "tabIndex": [Function],
                                                  "type": [Function],
                                                  "value": [Function],
                                                  "variant": [Function],
                                                },
                                                "render": [Function],
                                              }
                                            }
                                            inputProps={
                                              Object {
                                                "IconComponent": Object {
                                                  "$$typeof": Symbol(react.memo),
                                                  "compare": null,
                                                  "type": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "render": [Function],
                                                  },
                                                },
                                                "MenuProps": undefined,
                                                "SelectDisplayProps": Object {
                                                  "id": undefined,
                                                },
                                                "autoWidth": false,
                                                "children": Array [
                                                  <WithStyles(ForwardRef(MenuItem))
                                                    disabled={true}
                                                    style={
                                                      Object {
                                                        "display": "none",
                                                      }
                                                    }
                                                    value="_default"
                                                  >
                                                    
                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                  Array [
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      value={true}
                                                    >
                                                      On
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      value={false}
                                                    >
                                                      Off
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                  ],
                                                ],
                                                "classes": Object {
                                                  "disabled": "Mui-disabled",
                                                  "filled": "MuiSelect-filled",
                                                  "icon": "MuiSelect-icon",
                                                  "iconFilled": "MuiSelect-iconFilled",
                                                  "iconOpen": "MuiSelect-iconOpen",
                                                  "iconOutlined": "MuiSelect-iconOutlined",
                                                  "nativeInput": "MuiSelect-nativeInput",
                                                  "outlined": "MuiSelect-outlined",
                                                  "root": "MuiSelect-root",
                                                  "select": "MuiSelect-select",
                                                  "selectMenu": "MuiSelect-selectMenu",
                                                },
                                                "displayEmpty": false,
                                                "labelId": undefined,
                                                "multiple": false,
                                                "onClose": undefined,
                                                "onOpen": undefined,
                                                "open": undefined,
                                                "renderValue": undefined,
                                                "type": undefined,
                                                "variant": "standard",
                                              }
                                            }
                                            onChange={[Function]}
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "fontSize": "0.8125rem",
                                                "width": "120px",
                                                "zIndex": 1,
                                              }
                                            }
                                            value={false}
                                          >
                                            <WithStyles(ForwardRef(InputBase))
                                              className=""
                                              classes={
                                                Object {
                                                  "colorSecondary": "MuiInput-colorSecondary",
                                                  "disabled": "Mui-disabled",
                                                  "error": "Mui-error",
                                                  "focused": "Mui-focused",
                                                  "formControl": "MuiInput-formControl",
                                                  "fullWidth": "MuiInput-fullWidth",
                                                  "input": "MuiInput-input",
                                                  "inputMarginDense": "MuiInput-inputMarginDense",
                                                  "inputMultiline": "MuiInput-inputMultiline",
                                                  "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                  "marginDense": "MuiInput-marginDense",
                                                  "multiline": "MuiInput-multiline",
                                                  "root": "MuiInput-root MuiInput-underline",
                                                  "underline": null,
                                                }
                                              }
                                              disabled={false}
                                              fullWidth={false}
                                              inputComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "propTypes": Object {
                                                    "IconComponent": [Function],
                                                    "MenuProps": [Function],
                                                    "SelectDisplayProps": [Function],
                                                    "aria-label": [Function],
                                                    "autoFocus": [Function],
                                                    "autoWidth": [Function],
                                                    "children": [Function],
                                                    "className": [Function],
                                                    "classes": [Function],
                                                    "defaultValue": [Function],
                                                    "disabled": [Function],
                                                    "displayEmpty": [Function],
                                                    "inputRef": [Function],
                                                    "labelId": [Function],
                                                    "multiple": [Function],
                                                    "name": [Function],
                                                    "onBlur": [Function],
                                                    "onChange": [Function],
                                                    "onClose": [Function],
                                                    "onFocus": [Function],
                                                    "onOpen": [Function],
                                                    "open": [Function],
                                                    "readOnly": [Function],
                                                    "renderValue": [Function],
                                                    "tabIndex": [Function],
                                                    "type": [Function],
                                                    "value": [Function],
                                                    "variant": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              inputProps={
                                                Object {
                                                  "IconComponent": Object {
                                                    "$$typeof": Symbol(react.memo),
                                                    "compare": null,
                                                    "type": Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "render": [Function],
                                                    },
                                                  },
                                                  "MenuProps": undefined,
                                                  "SelectDisplayProps": Object {
                                                    "id": undefined,
                                                  },
                                                  "autoWidth": false,
                                                  "children": Array [
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      disabled={true}
                                                      style={
                                                        Object {
                                                          "display": "none",
                                                        }
                                                      }
                                                      value="_default"
                                                    >
                                                      
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                    Array [
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        value={true}
                                                      >
                                                        On
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        value={false}
                                                      >
                                                        Off
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                    ],
                                                  ],
                                                  "classes": Object {
                                                    "disabled": "Mui-disabled",
                                                    "filled": "MuiSelect-filled",
                                                    "icon": "MuiSelect-icon",
                                                    "iconFilled": "MuiSelect-iconFilled",
                                                    "iconOpen": "MuiSelect-iconOpen",
                                                    "iconOutlined": "MuiSelect-iconOutlined",
                                                    "nativeInput": "MuiSelect-nativeInput",
                                                    "outlined": "MuiSelect-outlined",
                                                    "root": "MuiSelect-root",
                                                    "select": "MuiSelect-select",
                                                    "selectMenu": "MuiSelect-selectMenu",
                                                  },
                                                  "displayEmpty": false,
                                                  "labelId": undefined,
                                                  "multiple": false,
                                                  "onClose": undefined,
                                                  "onOpen": undefined,
                                                  "open": undefined,
                                                  "renderValue": undefined,
                                                  "type": undefined,
                                                  "variant": "standard",
                                                }
                                              }
                                              multiline={false}
                                              onChange={[Function]}
                                              onClick={[Function]}
                                              style={
                                                Object {
                                                  "fontSize": "0.8125rem",
                                                  "width": "120px",
                                                  "zIndex": 1,
                                                }
                                              }
                                              type="text"
                                              value={false}
                                            >
                                              <ForwardRef(InputBase)
                                                className=""
                                                classes={
                                                  Object {
                                                    "adornedEnd": "MuiInputBase-adornedEnd",
                                                    "adornedStart": "MuiInputBase-adornedStart",
                                                    "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                    "disabled": "Mui-disabled Mui-disabled",
                                                    "error": "Mui-error Mui-error",
                                                    "focused": "Mui-focused Mui-focused",
                                                    "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                    "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                    "input": "MuiInputBase-input MuiInput-input",
                                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                    "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                    "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                    "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                    "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                  }
                                                }
                                                disabled={false}
                                                fullWidth={false}
                                                inputComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "propTypes": Object {
                                                      "IconComponent": [Function],
                                                      "MenuProps": [Function],
                                                      "SelectDisplayProps": [Function],
                                                      "aria-label": [Function],
                                                      "autoFocus": [Function],
                                                      "autoWidth": [Function],
                                                      "children": [Function],
                                                      "className": [Function],
                                                      "classes": [Function],
                                                      "defaultValue": [Function],
                                                      "disabled": [Function],
                                                      "displayEmpty": [Function],
                                                      "inputRef": [Function],
                                                      "labelId": [Function],
                                                      "multiple": [Function],
                                                      "name": [Function],
                                                      "onBlur": [Function],
                                                      "onChange": [Function],
                                                      "onClose": [Function],
                                                      "onFocus": [Function],
                                                      "onOpen": [Function],
                                                      "open": [Function],
                                                      "readOnly": [Function],
                                                      "renderValue": [Function],
                                                      "tabIndex": [Function],
                                                      "type": [Function],
                                                      "value": [Function],
                                                      "variant": [Function],
                                                    },
                                                    "render": [Function],
                                                  }
                                                }
                                                inputProps={
                                                  Object {
                                                    "IconComponent": Object {
                                                      "$$typeof": Symbol(react.memo),
                                                      "compare": null,
                                                      "type": Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "render": [Function],
                                                      },
                                                    },
                                                    "MenuProps": undefined,
                                                    "SelectDisplayProps": Object {
                                                      "id": undefined,
                                                    },
                                                    "autoWidth": false,
                                                    "children": Array [
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        disabled={true}
                                                        style={
                                                          Object {
                                                            "display": "none",
                                                          }
                                                        }
                                                        value="_default"
                                                      >
                                                        
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      Array [
                                                        <WithStyles(ForwardRef(MenuItem))
                                                          value={true}
                                                        >
                                                          On
                                                        </WithStyles(ForwardRef(MenuItem))>,
                                                        <WithStyles(ForwardRef(MenuItem))
                                                          value={false}
                                                        >
                                                          Off
                                                        </WithStyles(ForwardRef(MenuItem))>,
                                                      ],
                                                    ],
                                                    "classes": Object {
                                                      "disabled": "Mui-disabled",
                                                      "filled": "MuiSelect-filled",
                                                      "icon": "MuiSelect-icon",
                                                      "iconFilled": "MuiSelect-iconFilled",
                                                      "iconOpen": "MuiSelect-iconOpen",
                                                      "iconOutlined": "MuiSelect-iconOutlined",
                                                      "nativeInput": "MuiSelect-nativeInput",
                                                      "outlined": "MuiSelect-outlined",
                                                      "root": "MuiSelect-root",
                                                      "select": "MuiSelect-select",
                                                      "selectMenu": "MuiSelect-selectMenu",
                                                    },
                                                    "displayEmpty": false,
                                                    "labelId": undefined,
                                                    "multiple": false,
                                                    "onClose": undefined,
                                                    "onOpen": undefined,
                                                    "open": undefined,
                                                    "renderValue": undefined,
                                                    "type": undefined,
                                                    "variant": "standard",
                                                  }
                                                }
                                                multiline={false}
                                                onChange={[Function]}
                                                onClick={[Function]}
                                                style={
                                                  Object {
                                                    "fontSize": "0.8125rem",
                                                    "width": "120px",
                                                    "zIndex": 1,
                                                  }
                                                }
                                                type="text"
                                                value={false}
                                              >
                                                <div
                                                  className="MuiInputBase-root MuiInput-root MuiInput-underline"
                                                  onClick={[Function]}
                                                  style={
                                                    Object {
                                                      "fontSize": "0.8125rem",
                                                      "width": "120px",
                                                      "zIndex": 1,
                                                    }
                                                  }
                                                >
                                                  <ForwardRef(SelectInput)
                                                    IconComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.memo),
                                                        "compare": null,
                                                        "type": Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "render": [Function],
                                                        },
                                                      }
                                                    }
                                                    SelectDisplayProps={
                                                      Object {
                                                        "id": undefined,
                                                      }
                                                    }
                                                    autoWidth={false}
                                                    className="MuiInputBase-input MuiInput-input"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "filled": "MuiSelect-filled",
                                                        "icon": "MuiSelect-icon",
                                                        "iconFilled": "MuiSelect-iconFilled",
                                                        "iconOpen": "MuiSelect-iconOpen",
                                                        "iconOutlined": "MuiSelect-iconOutlined",
                                                        "nativeInput": "MuiSelect-nativeInput",
                                                        "outlined": "MuiSelect-outlined",
                                                        "root": "MuiSelect-root",
                                                        "select": "MuiSelect-select",
                                                        "selectMenu": "MuiSelect-selectMenu",
                                                      }
                                                    }
                                                    disabled={false}
                                                    displayEmpty={false}
                                                    inputRef={[Function]}
                                                    multiple={false}
                                                    onAnimationStart={[Function]}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    value={false}
                                                    variant="standard"
                                                  >
                                                    <div
                                                      aria-haspopup="listbox"
                                                      className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onMouseDown={[Function]}
                                                      role="button"
                                                      tabIndex={0}
                                                    >
                                                      Off
                                                    </div>
                                                    <input
                                                      aria-hidden={true}
                                                      className="MuiSelect-nativeInput"
                                                      onAnimationStart={[Function]}
                                                      onChange={[Function]}
                                                      tabIndex={-1}
                                                      value={false}
                                                    />
                                                    <ForwardRef(ArrowDropDownIcon)
                                                      className="MuiSelect-icon"
                                                    >
                                                      <WithStyles(ForwardRef(SvgIcon))
                                                        className="MuiSelect-icon"
                                                      >
                                                        <ForwardRef(SvgIcon)
                                                          className="MuiSelect-icon"
                                                          classes={
                                                            Object {
                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                              "colorError": "MuiSvgIcon-colorError",
                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                              "root": "MuiSvgIcon-root",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            className="MuiSvgIcon-root MuiSelect-icon"
                                                            focusable="false"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <path
                                                              d="M7 10l5 5 5-5z"
                                                            />
                                                          </svg>
                                                        </ForwardRef(SvgIcon)>
                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                    </ForwardRef(ArrowDropDownIcon)>
                                                    <WithStyles(ForwardRef(Menu))
                                                      MenuListProps={
                                                        Object {
                                                          "aria-labelledby": undefined,
                                                          "disableListWrap": true,
                                                          "role": "listbox",
                                                        }
                                                      }
                                                      PaperProps={
                                                        Object {
                                                          "style": Object {
                                                            "minWidth": undefined,
                                                          },
                                                        }
                                                      }
                                                      anchorEl={
                                                        <div
                                                          aria-haspopup="listbox"
                                                          class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                          role="button"
                                                          tabindex="0"
                                                        >
                                                          Off
                                                        </div>
                                                      }
                                                      id="menu-"
                                                      onClose={[Function]}
                                                      open={false}
                                                    >
                                                      <ForwardRef(Menu)
                                                        MenuListProps={
                                                          Object {
                                                            "aria-labelledby": undefined,
                                                            "disableListWrap": true,
                                                            "role": "listbox",
                                                          }
                                                        }
                                                        PaperProps={
                                                          Object {
                                                            "style": Object {
                                                              "minWidth": undefined,
                                                            },
                                                          }
                                                        }
                                                        anchorEl={
                                                          <div
                                                            aria-haspopup="listbox"
                                                            class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                            role="button"
                                                            tabindex="0"
                                                          >
                                                            Off
                                                          </div>
                                                        }
                                                        classes={
                                                          Object {
                                                            "list": "MuiMenu-list",
                                                            "paper": "MuiMenu-paper",
                                                          }
                                                        }
                                                        id="menu-"
                                                        onClose={[Function]}
                                                        open={false}
                                                      >
                                                        <WithStyles(ForwardRef(Popover))
                                                          PaperProps={
                                                            Object {
                                                              "classes": Object {
                                                                "root": "MuiMenu-paper",
                                                              },
                                                              "style": Object {
                                                                "minWidth": undefined,
                                                              },
                                                            }
                                                          }
                                                          anchorEl={
                                                            <div
                                                              aria-haspopup="listbox"
                                                              class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                              role="button"
                                                              tabindex="0"
                                                            >
                                                              Off
                                                            </div>
                                                          }
                                                          anchorOrigin={
                                                            Object {
                                                              "horizontal": "left",
                                                              "vertical": "top",
                                                            }
                                                          }
                                                          getContentAnchorEl={[Function]}
                                                          id="menu-"
                                                          onClose={[Function]}
                                                          onEntering={[Function]}
                                                          open={false}
                                                          transformOrigin={
                                                            Object {
                                                              "horizontal": "left",
                                                              "vertical": "top",
                                                            }
                                                          }
                                                          transitionDuration="auto"
                                                        >
                                                          <ForwardRef(Popover)
                                                            PaperProps={
                                                              Object {
                                                                "classes": Object {
                                                                  "root": "MuiMenu-paper",
                                                                },
                                                                "style": Object {
                                                                  "minWidth": undefined,
                                                                },
                                                              }
                                                            }
                                                            anchorEl={
                                                              <div
                                                                aria-haspopup="listbox"
                                                                class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                role="button"
                                                                tabindex="0"
                                                              >
                                                                Off
                                                              </div>
                                                            }
                                                            anchorOrigin={
                                                              Object {
                                                                "horizontal": "left",
                                                                "vertical": "top",
                                                              }
                                                            }
                                                            classes={
                                                              Object {
                                                                "paper": "MuiPopover-paper",
                                                                "root": "MuiPopover-root",
                                                              }
                                                            }
                                                            getContentAnchorEl={[Function]}
                                                            id="menu-"
                                                            onClose={[Function]}
                                                            onEntering={[Function]}
                                                            open={false}
                                                            transformOrigin={
                                                              Object {
                                                                "horizontal": "left",
                                                                "vertical": "top",
                                                              }
                                                            }
                                                            transitionDuration="auto"
                                                          >
                                                            <ForwardRef(Modal)
                                                              BackdropProps={
                                                                Object {
                                                                  "invisible": true,
                                                                }
                                                              }
                                                              className="MuiPopover-root"
                                                              container={<body />}
                                                              id="menu-"
                                                              onClose={[Function]}
                                                              open={false}
                                                            />
                                                          </ForwardRef(Popover)>
                                                        </WithStyles(ForwardRef(Popover))>
                                                      </ForwardRef(Menu)>
                                                    </WithStyles(ForwardRef(Menu))>
                                                  </ForwardRef(SelectInput)>
                                                </div>
                                              </ForwardRef(InputBase)>
                                            </WithStyles(ForwardRef(InputBase))>
                                          </ForwardRef(Input)>
                                        </WithStyles(ForwardRef(Input))>
                                      </ForwardRef(Select)>
                                    </WithStyles(ForwardRef(Select))>
                                     
                                  </span>
                                </SelectInput>
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                          <WithStyles(ForwardRef(TableCell))
                            key="settingsFrom"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <ForwardRef(TableCell)
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              onClick={[Function]}
                              style={Object {}}
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body"
                                onClick={[Function]}
                                style={Object {}}
                              >
                                <ColorHighlighter
                                  data={
                                    Object {
                                      "catagory": "OverSeas Cabin Contract",
                                      "id": 4,
                                      "isEdited": true,
                                      "name": "Earily Duty",
                                      "settingsFrom": "Widebody",
                                      "state": false,
                                      "type": "Cost RUle",
                                    }
                                  }
                                  header="isEdited"
                                  highlighter={[Function]}
                                  style={
                                    Object {
                                      "color": "#FF650C",
                                    }
                                  }
                                  value="Widebody"
                                >
                                  <span
                                    style={Object {}}
                                  >
                                    Widebody
                                  </span>
                                </ColorHighlighter>
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                          <WithStyles(ForwardRef(TableCell))
                            key="catagory"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <ForwardRef(TableCell)
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              onClick={[Function]}
                              style={Object {}}
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body"
                                onClick={[Function]}
                                style={Object {}}
                              >
                                OverSeas Cabin Contract
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                          <WithStyles(ForwardRef(TableCell))
                            key="type"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <ForwardRef(TableCell)
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              onClick={[Function]}
                              style={Object {}}
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body"
                                onClick={[Function]}
                                style={Object {}}
                              >
                                Cost RUle
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                        </tr>
                      </ForwardRef(TableRow)>
                    </WithStyles(ForwardRef(TableRow))>
                    <WithStyles(ForwardRef(TableRow))>
                      <ForwardRef(TableRow)
                        classes={
                          Object {
                            "footer": "MuiTableRow-footer",
                            "head": "MuiTableRow-head",
                            "hover": "MuiTableRow-hover",
                            "root": "MuiTableRow-root",
                            "selected": "Mui-selected",
                          }
                        }
                      >
                        <tr
                          className="MuiTableRow-root"
                          role={null}
                        >
                          <WithStyles(ForwardRef(TableCell))
                            className="no-border"
                            colSpan={6}
                            style={
                              Object {
                                "padding": 0,
                              }
                            }
                          >
                            <ForwardRef(TableCell)
                              className="no-border"
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              colSpan={6}
                              style={
                                Object {
                                  "padding": 0,
                                }
                              }
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body no-border"
                                colSpan={6}
                                style={
                                  Object {
                                    "padding": 0,
                                  }
                                }
                              >
                                <WithStyles(ForwardRef(Collapse))
                                  in={false}
                                  timeout="auto"
                                  unmountOnExit={true}
                                >
                                  <ForwardRef(Collapse)
                                    classes={
                                      Object {
                                        "container": "MuiCollapse-container",
                                        "entered": "MuiCollapse-entered",
                                        "hidden": "MuiCollapse-hidden",
                                        "wrapper": "MuiCollapse-wrapper",
                                        "wrapperInner": "MuiCollapse-wrapperInner",
                                      }
                                    }
                                    in={false}
                                    timeout="auto"
                                    unmountOnExit={true}
                                  >
                                    <Transition
                                      addEndListener={[Function]}
                                      appear={false}
                                      enter={true}
                                      exit={true}
                                      in={false}
                                      mountOnEnter={false}
                                      onEnter={[Function]}
                                      onEntered={[Function]}
                                      onEntering={[Function]}
                                      onExit={[Function]}
                                      onExited={[Function]}
                                      onExiting={[Function]}
                                      timeout={null}
                                      unmountOnExit={true}
                                    />
                                  </ForwardRef(Collapse)>
                                </WithStyles(ForwardRef(Collapse))>
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                        </tr>
                      </ForwardRef(TableRow)>
                    </WithStyles(ForwardRef(TableRow))>
                    <WithStyles(ForwardRef(TableRow))
                      classes={
                        Object {
                          "hover": "hover",
                          "root": "MuiTableRow",
                          "selected": "selected",
                        }
                      }
                      hover={true}
                      id="tablerow5"
                      selected={false}
                    >
                      <ForwardRef(TableRow)
                        classes={
                          Object {
                            "footer": "MuiTableRow-footer",
                            "head": "MuiTableRow-head",
                            "hover": "MuiTableRow-hover hover",
                            "root": "MuiTableRow-root MuiTableRow",
                            "selected": "Mui-selected selected",
                          }
                        }
                        hover={true}
                        id="tablerow5"
                        selected={false}
                      >
                        <tr
                          className="MuiTableRow-root MuiTableRow MuiTableRow-hover hover"
                          id="tablerow5"
                          role={null}
                        >
                          <WithStyles(ForwardRef(TableCell))
                            style={
                              Object {
                                "height": 40,
                                "paddingLeft": "18px",
                                "paddingRight": "0px",
                                "width": 40,
                              }
                            }
                          >
                            <ForwardRef(TableCell)
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              style={
                                Object {
                                  "height": 40,
                                  "paddingLeft": "18px",
                                  "paddingRight": "0px",
                                  "width": 40,
                                }
                              }
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body"
                                style={
                                  Object {
                                    "height": 40,
                                    "paddingLeft": "18px",
                                    "paddingRight": "0px",
                                    "width": 40,
                                  }
                                }
                              >
                                <WithStyles(ForwardRef(Checkbox))
                                  checked={false}
                                  color="primary"
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "height": 20,
                                      "width": 20,
                                    }
                                  }
                                >
                                  <ForwardRef(Checkbox)
                                    checked={false}
                                    classes={
                                      Object {
                                        "checked": "Mui-checked",
                                        "colorPrimary": "MuiCheckbox-colorPrimary",
                                        "colorSecondary": "MuiCheckbox-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "indeterminate": "MuiCheckbox-indeterminate",
                                        "root": "MuiCheckbox-root",
                                      }
                                    }
                                    color="primary"
                                    onClick={[Function]}
                                    style={
                                      Object {
                                        "height": 20,
                                        "width": 20,
                                      }
                                    }
                                  >
                                    <WithStyles(ForwardRef(SwitchBase))
                                      checked={false}
                                      checkedIcon={<Memo />}
                                      classes={
                                        Object {
                                          "checked": "Mui-checked",
                                          "disabled": "Mui-disabled",
                                          "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                                        }
                                      }
                                      color="primary"
                                      icon={<Memo />}
                                      inputProps={
                                        Object {
                                          "data-indeterminate": false,
                                        }
                                      }
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "height": 20,
                                          "width": 20,
                                        }
                                      }
                                      type="checkbox"
                                    >
                                      <ForwardRef(SwitchBase)
                                        checked={false}
                                        checkedIcon={<Memo />}
                                        classes={
                                          Object {
                                            "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                                            "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                                            "input": "PrivateSwitchBase-input-4",
                                            "root": "PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary",
                                          }
                                        }
                                        color="primary"
                                        icon={<Memo />}
                                        inputProps={
                                          Object {
                                            "data-indeterminate": false,
                                          }
                                        }
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "height": 20,
                                            "width": 20,
                                          }
                                        }
                                        type="checkbox"
                                      >
                                        <WithStyles(ForwardRef(IconButton))
                                          className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary"
                                          color="primary"
                                          component="span"
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          style={
                                            Object {
                                              "height": 20,
                                              "width": 20,
                                            }
                                          }
                                          tabIndex={null}
                                        >
                                          <ForwardRef(IconButton)
                                            className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary"
                                            classes={
                                              Object {
                                                "colorInherit": "MuiIconButton-colorInherit",
                                                "colorPrimary": "MuiIconButton-colorPrimary",
                                                "colorSecondary": "MuiIconButton-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "edgeEnd": "MuiIconButton-edgeEnd",
                                                "edgeStart": "MuiIconButton-edgeStart",
                                                "label": "MuiIconButton-label",
                                                "root": "MuiIconButton-root",
                                                "sizeSmall": "MuiIconButton-sizeSmall",
                                              }
                                            }
                                            color="primary"
                                            component="span"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            style={
                                              Object {
                                                "height": 20,
                                                "width": 20,
                                              }
                                            }
                                            tabIndex={null}
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              centerRipple={true}
                                              className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                              component="span"
                                              disabled={false}
                                              focusRipple={true}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              style={
                                                Object {
                                                  "height": 20,
                                                  "width": 20,
                                                }
                                              }
                                              tabIndex={null}
                                            >
                                              <ForwardRef(ButtonBase)
                                                centerRipple={true}
                                                className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="span"
                                                disabled={false}
                                                focusRipple={true}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                style={
                                                  Object {
                                                    "height": 20,
                                                    "width": 20,
                                                  }
                                                }
                                                tabIndex={null}
                                              >
                                                <span
                                                  aria-disabled={false}
                                                  className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  style={
                                                    Object {
                                                      "height": 20,
                                                      "width": 20,
                                                    }
                                                  }
                                                  tabIndex={null}
                                                >
                                                  <span
                                                    className="MuiIconButton-label"
                                                  >
                                                    <input
                                                      checked={false}
                                                      className="PrivateSwitchBase-input-4"
                                                      data-indeterminate={false}
                                                      onChange={[Function]}
                                                      type="checkbox"
                                                    />
                                                    <ForwardRef(CheckBoxOutlineBlankIcon)>
                                                      <WithStyles(ForwardRef(SvgIcon))>
                                                        <ForwardRef(SvgIcon)
                                                          classes={
                                                            Object {
                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                              "colorError": "MuiSvgIcon-colorError",
                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                              "root": "MuiSvgIcon-root",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            className="MuiSvgIcon-root"
                                                            focusable="false"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <path
                                                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                            />
                                                          </svg>
                                                        </ForwardRef(SvgIcon)>
                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                    </ForwardRef(CheckBoxOutlineBlankIcon)>
                                                  </span>
                                                  <WithStyles(memo)
                                                    center={true}
                                                  >
                                                    <ForwardRef(TouchRipple)
                                                      center={true}
                                                      classes={
                                                        Object {
                                                          "child": "MuiTouchRipple-child",
                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                          "ripple": "MuiTouchRipple-ripple",
                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                          "root": "MuiTouchRipple-root",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        className="MuiTouchRipple-root"
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          component={null}
                                                          exit={true}
                                                        />
                                                      </span>
                                                    </ForwardRef(TouchRipple)>
                                                  </WithStyles(memo)>
                                                </span>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(IconButton)>
                                        </WithStyles(ForwardRef(IconButton))>
                                      </ForwardRef(SwitchBase)>
                                    </WithStyles(ForwardRef(SwitchBase))>
                                  </ForwardRef(Checkbox)>
                                </WithStyles(ForwardRef(Checkbox))>
                                <WithStyles(ForwardRef(IconButton))
                                  aria-label="expand row"
                                  onClick={[Function]}
                                  size="small"
                                  style={
                                    Object {
                                      "marginLeft": "10px",
                                    }
                                  }
                                >
                                  <ForwardRef(IconButton)
                                    aria-label="expand row"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit",
                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                        "edgeStart": "MuiIconButton-edgeStart",
                                        "label": "MuiIconButton-label",
                                        "root": "MuiIconButton-root",
                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                      }
                                    }
                                    onClick={[Function]}
                                    size="small"
                                    style={
                                      Object {
                                        "marginLeft": "10px",
                                      }
                                    }
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      aria-label="expand row"
                                      centerRipple={true}
                                      className="MuiIconButton-root MuiIconButton-sizeSmall"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "marginLeft": "10px",
                                        }
                                      }
                                    >
                                      <ForwardRef(ButtonBase)
                                        aria-label="expand row"
                                        centerRipple={true}
                                        className="MuiIconButton-root MuiIconButton-sizeSmall"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "marginLeft": "10px",
                                          }
                                        }
                                      >
                                        <button
                                          aria-label="expand row"
                                          className="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          style={
                                            Object {
                                              "marginLeft": "10px",
                                            }
                                          }
                                          tabIndex={0}
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <ForwardRef(KeyboardArrowDownIcon)>
                                              <WithStyles(ForwardRef(SvgIcon))>
                                                <ForwardRef(SvgIcon)
                                                  classes={
                                                    Object {
                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                      "colorError": "MuiSvgIcon-colorError",
                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                      "root": "MuiSvgIcon-root",
                                                    }
                                                  }
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="MuiSvgIcon-root"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SvgIcon)>
                                              </WithStyles(ForwardRef(SvgIcon))>
                                            </ForwardRef(KeyboardArrowDownIcon)>
                                          </span>
                                          <WithStyles(memo)
                                            center={true}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={true}
                                              classes={
                                                Object {
                                                  "child": "MuiTouchRipple-child",
                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                  "ripple": "MuiTouchRipple-ripple",
                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                  "root": "MuiTouchRipple-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="MuiTouchRipple-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(memo)>
                                        </button>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(IconButton)>
                                </WithStyles(ForwardRef(IconButton))>
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                          <WithStyles(ForwardRef(TableCell))
                            key="name"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <ForwardRef(TableCell)
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              onClick={[Function]}
                              style={Object {}}
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body"
                                onClick={[Function]}
                                style={Object {}}
                              >
                                <OverflowTip
                                  content="Late Duty"
                                  maxWidth="200px"
                                  tooltipStyle={
                                    Object {
                                      "maxWidth": "235px",
                                    }
                                  }
                                  value="Late Duty"
                                >
                                  <SierraMuiTooltip
                                    classes={
                                      Object {
                                        "popper": "ellipse-zoom-popper",
                                      }
                                    }
                                    disableHoverListener={true}
                                    interactive={true}
                                    style={
                                      Object {
                                        "maxWidth": "235px",
                                      }
                                    }
                                    title="Late Duty"
                                  >
                                    <WithStyles(ForwardRef(Tooltip))
                                      arrow={true}
                                      classes={
                                        Object {
                                          "popper": "ellipse-zoom-popper",
                                        }
                                      }
                                      disableHoverListener={true}
                                      interactive={true}
                                      style={
                                        Object {
                                          "maxWidth": "235px",
                                        }
                                      }
                                      title="Late Duty"
                                    >
                                      <ForwardRef(Tooltip)
                                        arrow={true}
                                        classes={
                                          Object {
                                            "arrow": "MuiTooltip-arrow",
                                            "popper": "MuiTooltip-popper ellipse-zoom-popper",
                                            "popperArrow": "MuiTooltip-popperArrow",
                                            "popperInteractive": "MuiTooltip-popperInteractive",
                                            "tooltip": "MuiTooltip-tooltip",
                                            "tooltipArrow": "MuiTooltip-tooltipArrow",
                                            "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                            "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                            "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                            "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                            "touch": "MuiTooltip-touch",
                                          }
                                        }
                                        disableHoverListener={true}
                                        interactive={true}
                                        style={
                                          Object {
                                            "maxWidth": "235px",
                                          }
                                        }
                                        title="Late Duty"
                                      >
                                        <div
                                          aria-describedby={null}
                                          className=""
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchStart={[Function]}
                                          style={
                                            Object {
                                              "maxWidth": "200px",
                                              "overflow": "hidden",
                                              "textOverflow": "ellipsis",
                                              "whiteSpace": "nowrap",
                                            }
                                          }
                                          title={null}
                                        >
                                          Late Duty
                                        </div>
                                        <ForwardRef(Popper)
                                          anchorEl={
                                            <div
                                              class=""
                                              style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 200px;"
                                            >
                                              Late Duty
                                            </div>
                                          }
                                          className="MuiTooltip-popper ellipse-zoom-popper MuiTooltip-popperInteractive MuiTooltip-popperArrow"
                                          id={null}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          open={false}
                                          placement="bottom"
                                          popperOptions={
                                            Object {
                                              "modifiers": Object {
                                                "arrow": Object {
                                                  "element": null,
                                                  "enabled": false,
                                                },
                                              },
                                            }
                                          }
                                          transition={true}
                                        />
                                      </ForwardRef(Tooltip)>
                                    </WithStyles(ForwardRef(Tooltip))>
                                  </SierraMuiTooltip>
                                </OverflowTip>
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                          <WithStyles(ForwardRef(TableCell))
                            key="state"
                            onClick={[Function]}
                            style={
                              Object {
                                "width": "120px",
                              }
                            }
                          >
                            <ForwardRef(TableCell)
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              onClick={[Function]}
                              style={
                                Object {
                                  "width": "120px",
                                }
                              }
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "width": "120px",
                                  }
                                }
                              >
                                <SelectInput
                                  data={
                                    Object {
                                      "catagory": "Basic Pairing Rules",
                                      "id": 5,
                                      "name": "Late Duty",
                                      "settingsFrom": "Baseline Rules",
                                      "state": true,
                                      "type": "Soft Rule",
                                    }
                                  }
                                  defaultValue="_default"
                                  enableReset={false}
                                  error={false}
                                  getTooltipContent={[Function]}
                                  handleDisable={[Function]}
                                  handleReset={[Function]}
                                  handleTooltipDisable={[Function]}
                                  items={
                                    Array [
                                      Object {
                                        "display": "On",
                                        "value": true,
                                      },
                                      Object {
                                        "display": "Off",
                                        "value": false,
                                      },
                                    ]
                                  }
                                  onChange={[Function]}
                                  placeholder=""
                                  removeOverlay={[Function]}
                                  style={
                                    Object {
                                      "fontSize": "0.8125rem",
                                      "width": "120px",
                                    }
                                  }
                                  value={true}
                                >
                                  <span
                                    className=""
                                  >
                                     
                                    <WithStyles(ForwardRef(Select))
                                      className=""
                                      disabled={false}
                                      onChange={[Function]}
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "fontSize": "0.8125rem",
                                          "width": "120px",
                                          "zIndex": 1,
                                        }
                                      }
                                      value={true}
                                    >
                                      <ForwardRef(Select)
                                        className=""
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "filled": "MuiSelect-filled",
                                            "icon": "MuiSelect-icon",
                                            "iconFilled": "MuiSelect-iconFilled",
                                            "iconOpen": "MuiSelect-iconOpen",
                                            "iconOutlined": "MuiSelect-iconOutlined",
                                            "nativeInput": "MuiSelect-nativeInput",
                                            "outlined": "MuiSelect-outlined",
                                            "root": "MuiSelect-root",
                                            "select": "MuiSelect-select",
                                            "selectMenu": "MuiSelect-selectMenu",
                                          }
                                        }
                                        disabled={false}
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "fontSize": "0.8125rem",
                                            "width": "120px",
                                            "zIndex": 1,
                                          }
                                        }
                                        value={true}
                                      >
                                        <WithStyles(ForwardRef(Input))
                                          className=""
                                          disabled={false}
                                          inputComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "propTypes": Object {
                                                "IconComponent": [Function],
                                                "MenuProps": [Function],
                                                "SelectDisplayProps": [Function],
                                                "aria-label": [Function],
                                                "autoFocus": [Function],
                                                "autoWidth": [Function],
                                                "children": [Function],
                                                "className": [Function],
                                                "classes": [Function],
                                                "defaultValue": [Function],
                                                "disabled": [Function],
                                                "displayEmpty": [Function],
                                                "inputRef": [Function],
                                                "labelId": [Function],
                                                "multiple": [Function],
                                                "name": [Function],
                                                "onBlur": [Function],
                                                "onChange": [Function],
                                                "onClose": [Function],
                                                "onFocus": [Function],
                                                "onOpen": [Function],
                                                "open": [Function],
                                                "readOnly": [Function],
                                                "renderValue": [Function],
                                                "tabIndex": [Function],
                                                "type": [Function],
                                                "value": [Function],
                                                "variant": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          inputProps={
                                            Object {
                                              "IconComponent": Object {
                                                "$$typeof": Symbol(react.memo),
                                                "compare": null,
                                                "type": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "render": [Function],
                                                },
                                              },
                                              "MenuProps": undefined,
                                              "SelectDisplayProps": Object {
                                                "id": undefined,
                                              },
                                              "autoWidth": false,
                                              "children": Array [
                                                <WithStyles(ForwardRef(MenuItem))
                                                  disabled={true}
                                                  style={
                                                    Object {
                                                      "display": "none",
                                                    }
                                                  }
                                                  value="_default"
                                                >
                                                  
                                                </WithStyles(ForwardRef(MenuItem))>,
                                                Array [
                                                  <WithStyles(ForwardRef(MenuItem))
                                                    value={true}
                                                  >
                                                    On
                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                  <WithStyles(ForwardRef(MenuItem))
                                                    value={false}
                                                  >
                                                    Off
                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                ],
                                              ],
                                              "classes": Object {
                                                "disabled": "Mui-disabled",
                                                "filled": "MuiSelect-filled",
                                                "icon": "MuiSelect-icon",
                                                "iconFilled": "MuiSelect-iconFilled",
                                                "iconOpen": "MuiSelect-iconOpen",
                                                "iconOutlined": "MuiSelect-iconOutlined",
                                                "nativeInput": "MuiSelect-nativeInput",
                                                "outlined": "MuiSelect-outlined",
                                                "root": "MuiSelect-root",
                                                "select": "MuiSelect-select",
                                                "selectMenu": "MuiSelect-selectMenu",
                                              },
                                              "displayEmpty": false,
                                              "labelId": undefined,
                                              "multiple": false,
                                              "onClose": undefined,
                                              "onOpen": undefined,
                                              "open": undefined,
                                              "renderValue": undefined,
                                              "type": undefined,
                                              "variant": "standard",
                                            }
                                          }
                                          onChange={[Function]}
                                          onClick={[Function]}
                                          style={
                                            Object {
                                              "fontSize": "0.8125rem",
                                              "width": "120px",
                                              "zIndex": 1,
                                            }
                                          }
                                          value={true}
                                        >
                                          <ForwardRef(Input)
                                            className=""
                                            classes={
                                              Object {
                                                "colorSecondary": "MuiInput-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "focused": "Mui-focused",
                                                "formControl": "MuiInput-formControl",
                                                "fullWidth": "MuiInput-fullWidth",
                                                "input": "MuiInput-input",
                                                "inputMarginDense": "MuiInput-inputMarginDense",
                                                "inputMultiline": "MuiInput-inputMultiline",
                                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                "marginDense": "MuiInput-marginDense",
                                                "multiline": "MuiInput-multiline",
                                                "root": "MuiInput-root",
                                                "underline": "MuiInput-underline",
                                              }
                                            }
                                            disabled={false}
                                            inputComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "propTypes": Object {
                                                  "IconComponent": [Function],
                                                  "MenuProps": [Function],
                                                  "SelectDisplayProps": [Function],
                                                  "aria-label": [Function],
                                                  "autoFocus": [Function],
                                                  "autoWidth": [Function],
                                                  "children": [Function],
                                                  "className": [Function],
                                                  "classes": [Function],
                                                  "defaultValue": [Function],
                                                  "disabled": [Function],
                                                  "displayEmpty": [Function],
                                                  "inputRef": [Function],
                                                  "labelId": [Function],
                                                  "multiple": [Function],
                                                  "name": [Function],
                                                  "onBlur": [Function],
                                                  "onChange": [Function],
                                                  "onClose": [Function],
                                                  "onFocus": [Function],
                                                  "onOpen": [Function],
                                                  "open": [Function],
                                                  "readOnly": [Function],
                                                  "renderValue": [Function],
                                                  "tabIndex": [Function],
                                                  "type": [Function],
                                                  "value": [Function],
                                                  "variant": [Function],
                                                },
                                                "render": [Function],
                                              }
                                            }
                                            inputProps={
                                              Object {
                                                "IconComponent": Object {
                                                  "$$typeof": Symbol(react.memo),
                                                  "compare": null,
                                                  "type": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "render": [Function],
                                                  },
                                                },
                                                "MenuProps": undefined,
                                                "SelectDisplayProps": Object {
                                                  "id": undefined,
                                                },
                                                "autoWidth": false,
                                                "children": Array [
                                                  <WithStyles(ForwardRef(MenuItem))
                                                    disabled={true}
                                                    style={
                                                      Object {
                                                        "display": "none",
                                                      }
                                                    }
                                                    value="_default"
                                                  >
                                                    
                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                  Array [
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      value={true}
                                                    >
                                                      On
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      value={false}
                                                    >
                                                      Off
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                  ],
                                                ],
                                                "classes": Object {
                                                  "disabled": "Mui-disabled",
                                                  "filled": "MuiSelect-filled",
                                                  "icon": "MuiSelect-icon",
                                                  "iconFilled": "MuiSelect-iconFilled",
                                                  "iconOpen": "MuiSelect-iconOpen",
                                                  "iconOutlined": "MuiSelect-iconOutlined",
                                                  "nativeInput": "MuiSelect-nativeInput",
                                                  "outlined": "MuiSelect-outlined",
                                                  "root": "MuiSelect-root",
                                                  "select": "MuiSelect-select",
                                                  "selectMenu": "MuiSelect-selectMenu",
                                                },
                                                "displayEmpty": false,
                                                "labelId": undefined,
                                                "multiple": false,
                                                "onClose": undefined,
                                                "onOpen": undefined,
                                                "open": undefined,
                                                "renderValue": undefined,
                                                "type": undefined,
                                                "variant": "standard",
                                              }
                                            }
                                            onChange={[Function]}
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "fontSize": "0.8125rem",
                                                "width": "120px",
                                                "zIndex": 1,
                                              }
                                            }
                                            value={true}
                                          >
                                            <WithStyles(ForwardRef(InputBase))
                                              className=""
                                              classes={
                                                Object {
                                                  "colorSecondary": "MuiInput-colorSecondary",
                                                  "disabled": "Mui-disabled",
                                                  "error": "Mui-error",
                                                  "focused": "Mui-focused",
                                                  "formControl": "MuiInput-formControl",
                                                  "fullWidth": "MuiInput-fullWidth",
                                                  "input": "MuiInput-input",
                                                  "inputMarginDense": "MuiInput-inputMarginDense",
                                                  "inputMultiline": "MuiInput-inputMultiline",
                                                  "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                  "marginDense": "MuiInput-marginDense",
                                                  "multiline": "MuiInput-multiline",
                                                  "root": "MuiInput-root MuiInput-underline",
                                                  "underline": null,
                                                }
                                              }
                                              disabled={false}
                                              fullWidth={false}
                                              inputComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "propTypes": Object {
                                                    "IconComponent": [Function],
                                                    "MenuProps": [Function],
                                                    "SelectDisplayProps": [Function],
                                                    "aria-label": [Function],
                                                    "autoFocus": [Function],
                                                    "autoWidth": [Function],
                                                    "children": [Function],
                                                    "className": [Function],
                                                    "classes": [Function],
                                                    "defaultValue": [Function],
                                                    "disabled": [Function],
                                                    "displayEmpty": [Function],
                                                    "inputRef": [Function],
                                                    "labelId": [Function],
                                                    "multiple": [Function],
                                                    "name": [Function],
                                                    "onBlur": [Function],
                                                    "onChange": [Function],
                                                    "onClose": [Function],
                                                    "onFocus": [Function],
                                                    "onOpen": [Function],
                                                    "open": [Function],
                                                    "readOnly": [Function],
                                                    "renderValue": [Function],
                                                    "tabIndex": [Function],
                                                    "type": [Function],
                                                    "value": [Function],
                                                    "variant": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              inputProps={
                                                Object {
                                                  "IconComponent": Object {
                                                    "$$typeof": Symbol(react.memo),
                                                    "compare": null,
                                                    "type": Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "render": [Function],
                                                    },
                                                  },
                                                  "MenuProps": undefined,
                                                  "SelectDisplayProps": Object {
                                                    "id": undefined,
                                                  },
                                                  "autoWidth": false,
                                                  "children": Array [
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      disabled={true}
                                                      style={
                                                        Object {
                                                          "display": "none",
                                                        }
                                                      }
                                                      value="_default"
                                                    >
                                                      
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                    Array [
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        value={true}
                                                      >
                                                        On
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        value={false}
                                                      >
                                                        Off
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                    ],
                                                  ],
                                                  "classes": Object {
                                                    "disabled": "Mui-disabled",
                                                    "filled": "MuiSelect-filled",
                                                    "icon": "MuiSelect-icon",
                                                    "iconFilled": "MuiSelect-iconFilled",
                                                    "iconOpen": "MuiSelect-iconOpen",
                                                    "iconOutlined": "MuiSelect-iconOutlined",
                                                    "nativeInput": "MuiSelect-nativeInput",
                                                    "outlined": "MuiSelect-outlined",
                                                    "root": "MuiSelect-root",
                                                    "select": "MuiSelect-select",
                                                    "selectMenu": "MuiSelect-selectMenu",
                                                  },
                                                  "displayEmpty": false,
                                                  "labelId": undefined,
                                                  "multiple": false,
                                                  "onClose": undefined,
                                                  "onOpen": undefined,
                                                  "open": undefined,
                                                  "renderValue": undefined,
                                                  "type": undefined,
                                                  "variant": "standard",
                                                }
                                              }
                                              multiline={false}
                                              onChange={[Function]}
                                              onClick={[Function]}
                                              style={
                                                Object {
                                                  "fontSize": "0.8125rem",
                                                  "width": "120px",
                                                  "zIndex": 1,
                                                }
                                              }
                                              type="text"
                                              value={true}
                                            >
                                              <ForwardRef(InputBase)
                                                className=""
                                                classes={
                                                  Object {
                                                    "adornedEnd": "MuiInputBase-adornedEnd",
                                                    "adornedStart": "MuiInputBase-adornedStart",
                                                    "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                    "disabled": "Mui-disabled Mui-disabled",
                                                    "error": "Mui-error Mui-error",
                                                    "focused": "Mui-focused Mui-focused",
                                                    "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                    "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                    "input": "MuiInputBase-input MuiInput-input",
                                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                    "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                    "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                    "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                    "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                  }
                                                }
                                                disabled={false}
                                                fullWidth={false}
                                                inputComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "propTypes": Object {
                                                      "IconComponent": [Function],
                                                      "MenuProps": [Function],
                                                      "SelectDisplayProps": [Function],
                                                      "aria-label": [Function],
                                                      "autoFocus": [Function],
                                                      "autoWidth": [Function],
                                                      "children": [Function],
                                                      "className": [Function],
                                                      "classes": [Function],
                                                      "defaultValue": [Function],
                                                      "disabled": [Function],
                                                      "displayEmpty": [Function],
                                                      "inputRef": [Function],
                                                      "labelId": [Function],
                                                      "multiple": [Function],
                                                      "name": [Function],
                                                      "onBlur": [Function],
                                                      "onChange": [Function],
                                                      "onClose": [Function],
                                                      "onFocus": [Function],
                                                      "onOpen": [Function],
                                                      "open": [Function],
                                                      "readOnly": [Function],
                                                      "renderValue": [Function],
                                                      "tabIndex": [Function],
                                                      "type": [Function],
                                                      "value": [Function],
                                                      "variant": [Function],
                                                    },
                                                    "render": [Function],
                                                  }
                                                }
                                                inputProps={
                                                  Object {
                                                    "IconComponent": Object {
                                                      "$$typeof": Symbol(react.memo),
                                                      "compare": null,
                                                      "type": Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "render": [Function],
                                                      },
                                                    },
                                                    "MenuProps": undefined,
                                                    "SelectDisplayProps": Object {
                                                      "id": undefined,
                                                    },
                                                    "autoWidth": false,
                                                    "children": Array [
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        disabled={true}
                                                        style={
                                                          Object {
                                                            "display": "none",
                                                          }
                                                        }
                                                        value="_default"
                                                      >
                                                        
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      Array [
                                                        <WithStyles(ForwardRef(MenuItem))
                                                          value={true}
                                                        >
                                                          On
                                                        </WithStyles(ForwardRef(MenuItem))>,
                                                        <WithStyles(ForwardRef(MenuItem))
                                                          value={false}
                                                        >
                                                          Off
                                                        </WithStyles(ForwardRef(MenuItem))>,
                                                      ],
                                                    ],
                                                    "classes": Object {
                                                      "disabled": "Mui-disabled",
                                                      "filled": "MuiSelect-filled",
                                                      "icon": "MuiSelect-icon",
                                                      "iconFilled": "MuiSelect-iconFilled",
                                                      "iconOpen": "MuiSelect-iconOpen",
                                                      "iconOutlined": "MuiSelect-iconOutlined",
                                                      "nativeInput": "MuiSelect-nativeInput",
                                                      "outlined": "MuiSelect-outlined",
                                                      "root": "MuiSelect-root",
                                                      "select": "MuiSelect-select",
                                                      "selectMenu": "MuiSelect-selectMenu",
                                                    },
                                                    "displayEmpty": false,
                                                    "labelId": undefined,
                                                    "multiple": false,
                                                    "onClose": undefined,
                                                    "onOpen": undefined,
                                                    "open": undefined,
                                                    "renderValue": undefined,
                                                    "type": undefined,
                                                    "variant": "standard",
                                                  }
                                                }
                                                multiline={false}
                                                onChange={[Function]}
                                                onClick={[Function]}
                                                style={
                                                  Object {
                                                    "fontSize": "0.8125rem",
                                                    "width": "120px",
                                                    "zIndex": 1,
                                                  }
                                                }
                                                type="text"
                                                value={true}
                                              >
                                                <div
                                                  className="MuiInputBase-root MuiInput-root MuiInput-underline"
                                                  onClick={[Function]}
                                                  style={
                                                    Object {
                                                      "fontSize": "0.8125rem",
                                                      "width": "120px",
                                                      "zIndex": 1,
                                                    }
                                                  }
                                                >
                                                  <ForwardRef(SelectInput)
                                                    IconComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.memo),
                                                        "compare": null,
                                                        "type": Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "render": [Function],
                                                        },
                                                      }
                                                    }
                                                    SelectDisplayProps={
                                                      Object {
                                                        "id": undefined,
                                                      }
                                                    }
                                                    autoWidth={false}
                                                    className="MuiInputBase-input MuiInput-input"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "filled": "MuiSelect-filled",
                                                        "icon": "MuiSelect-icon",
                                                        "iconFilled": "MuiSelect-iconFilled",
                                                        "iconOpen": "MuiSelect-iconOpen",
                                                        "iconOutlined": "MuiSelect-iconOutlined",
                                                        "nativeInput": "MuiSelect-nativeInput",
                                                        "outlined": "MuiSelect-outlined",
                                                        "root": "MuiSelect-root",
                                                        "select": "MuiSelect-select",
                                                        "selectMenu": "MuiSelect-selectMenu",
                                                      }
                                                    }
                                                    disabled={false}
                                                    displayEmpty={false}
                                                    inputRef={[Function]}
                                                    multiple={false}
                                                    onAnimationStart={[Function]}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    value={true}
                                                    variant="standard"
                                                  >
                                                    <div
                                                      aria-haspopup="listbox"
                                                      className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onMouseDown={[Function]}
                                                      role="button"
                                                      tabIndex={0}
                                                    >
                                                      On
                                                    </div>
                                                    <input
                                                      aria-hidden={true}
                                                      className="MuiSelect-nativeInput"
                                                      onAnimationStart={[Function]}
                                                      onChange={[Function]}
                                                      tabIndex={-1}
                                                      value={true}
                                                    />
                                                    <ForwardRef(ArrowDropDownIcon)
                                                      className="MuiSelect-icon"
                                                    >
                                                      <WithStyles(ForwardRef(SvgIcon))
                                                        className="MuiSelect-icon"
                                                      >
                                                        <ForwardRef(SvgIcon)
                                                          className="MuiSelect-icon"
                                                          classes={
                                                            Object {
                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                              "colorError": "MuiSvgIcon-colorError",
                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                              "root": "MuiSvgIcon-root",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            className="MuiSvgIcon-root MuiSelect-icon"
                                                            focusable="false"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <path
                                                              d="M7 10l5 5 5-5z"
                                                            />
                                                          </svg>
                                                        </ForwardRef(SvgIcon)>
                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                    </ForwardRef(ArrowDropDownIcon)>
                                                    <WithStyles(ForwardRef(Menu))
                                                      MenuListProps={
                                                        Object {
                                                          "aria-labelledby": undefined,
                                                          "disableListWrap": true,
                                                          "role": "listbox",
                                                        }
                                                      }
                                                      PaperProps={
                                                        Object {
                                                          "style": Object {
                                                            "minWidth": undefined,
                                                          },
                                                        }
                                                      }
                                                      anchorEl={
                                                        <div
                                                          aria-haspopup="listbox"
                                                          class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                          role="button"
                                                          tabindex="0"
                                                        >
                                                          On
                                                        </div>
                                                      }
                                                      id="menu-"
                                                      onClose={[Function]}
                                                      open={false}
                                                    >
                                                      <ForwardRef(Menu)
                                                        MenuListProps={
                                                          Object {
                                                            "aria-labelledby": undefined,
                                                            "disableListWrap": true,
                                                            "role": "listbox",
                                                          }
                                                        }
                                                        PaperProps={
                                                          Object {
                                                            "style": Object {
                                                              "minWidth": undefined,
                                                            },
                                                          }
                                                        }
                                                        anchorEl={
                                                          <div
                                                            aria-haspopup="listbox"
                                                            class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                            role="button"
                                                            tabindex="0"
                                                          >
                                                            On
                                                          </div>
                                                        }
                                                        classes={
                                                          Object {
                                                            "list": "MuiMenu-list",
                                                            "paper": "MuiMenu-paper",
                                                          }
                                                        }
                                                        id="menu-"
                                                        onClose={[Function]}
                                                        open={false}
                                                      >
                                                        <WithStyles(ForwardRef(Popover))
                                                          PaperProps={
                                                            Object {
                                                              "classes": Object {
                                                                "root": "MuiMenu-paper",
                                                              },
                                                              "style": Object {
                                                                "minWidth": undefined,
                                                              },
                                                            }
                                                          }
                                                          anchorEl={
                                                            <div
                                                              aria-haspopup="listbox"
                                                              class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                              role="button"
                                                              tabindex="0"
                                                            >
                                                              On
                                                            </div>
                                                          }
                                                          anchorOrigin={
                                                            Object {
                                                              "horizontal": "left",
                                                              "vertical": "top",
                                                            }
                                                          }
                                                          getContentAnchorEl={[Function]}
                                                          id="menu-"
                                                          onClose={[Function]}
                                                          onEntering={[Function]}
                                                          open={false}
                                                          transformOrigin={
                                                            Object {
                                                              "horizontal": "left",
                                                              "vertical": "top",
                                                            }
                                                          }
                                                          transitionDuration="auto"
                                                        >
                                                          <ForwardRef(Popover)
                                                            PaperProps={
                                                              Object {
                                                                "classes": Object {
                                                                  "root": "MuiMenu-paper",
                                                                },
                                                                "style": Object {
                                                                  "minWidth": undefined,
                                                                },
                                                              }
                                                            }
                                                            anchorEl={
                                                              <div
                                                                aria-haspopup="listbox"
                                                                class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                role="button"
                                                                tabindex="0"
                                                              >
                                                                On
                                                              </div>
                                                            }
                                                            anchorOrigin={
                                                              Object {
                                                                "horizontal": "left",
                                                                "vertical": "top",
                                                              }
                                                            }
                                                            classes={
                                                              Object {
                                                                "paper": "MuiPopover-paper",
                                                                "root": "MuiPopover-root",
                                                              }
                                                            }
                                                            getContentAnchorEl={[Function]}
                                                            id="menu-"
                                                            onClose={[Function]}
                                                            onEntering={[Function]}
                                                            open={false}
                                                            transformOrigin={
                                                              Object {
                                                                "horizontal": "left",
                                                                "vertical": "top",
                                                              }
                                                            }
                                                            transitionDuration="auto"
                                                          >
                                                            <ForwardRef(Modal)
                                                              BackdropProps={
                                                                Object {
                                                                  "invisible": true,
                                                                }
                                                              }
                                                              className="MuiPopover-root"
                                                              container={<body />}
                                                              id="menu-"
                                                              onClose={[Function]}
                                                              open={false}
                                                            />
                                                          </ForwardRef(Popover)>
                                                        </WithStyles(ForwardRef(Popover))>
                                                      </ForwardRef(Menu)>
                                                    </WithStyles(ForwardRef(Menu))>
                                                  </ForwardRef(SelectInput)>
                                                </div>
                                              </ForwardRef(InputBase)>
                                            </WithStyles(ForwardRef(InputBase))>
                                          </ForwardRef(Input)>
                                        </WithStyles(ForwardRef(Input))>
                                      </ForwardRef(Select)>
                                    </WithStyles(ForwardRef(Select))>
                                     
                                  </span>
                                </SelectInput>
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                          <WithStyles(ForwardRef(TableCell))
                            key="settingsFrom"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <ForwardRef(TableCell)
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              onClick={[Function]}
                              style={Object {}}
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body"
                                onClick={[Function]}
                                style={Object {}}
                              >
                                <ColorHighlighter
                                  data={
                                    Object {
                                      "catagory": "Basic Pairing Rules",
                                      "id": 5,
                                      "name": "Late Duty",
                                      "settingsFrom": "Baseline Rules",
                                      "state": true,
                                      "type": "Soft Rule",
                                    }
                                  }
                                  header="isEdited"
                                  highlighter={[Function]}
                                  style={
                                    Object {
                                      "color": "#FF650C",
                                    }
                                  }
                                  value="Baseline Rules"
                                >
                                  <span
                                    style={Object {}}
                                  >
                                    Baseline Rules
                                  </span>
                                </ColorHighlighter>
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                          <WithStyles(ForwardRef(TableCell))
                            key="catagory"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <ForwardRef(TableCell)
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              onClick={[Function]}
                              style={Object {}}
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body"
                                onClick={[Function]}
                                style={Object {}}
                              >
                                Basic Pairing Rules
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                          <WithStyles(ForwardRef(TableCell))
                            key="type"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <ForwardRef(TableCell)
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              onClick={[Function]}
                              style={Object {}}
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body"
                                onClick={[Function]}
                                style={Object {}}
                              >
                                Soft Rule
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                        </tr>
                      </ForwardRef(TableRow)>
                    </WithStyles(ForwardRef(TableRow))>
                    <WithStyles(ForwardRef(TableRow))>
                      <ForwardRef(TableRow)
                        classes={
                          Object {
                            "footer": "MuiTableRow-footer",
                            "head": "MuiTableRow-head",
                            "hover": "MuiTableRow-hover",
                            "root": "MuiTableRow-root",
                            "selected": "Mui-selected",
                          }
                        }
                      >
                        <tr
                          className="MuiTableRow-root"
                          role={null}
                        >
                          <WithStyles(ForwardRef(TableCell))
                            className="no-border"
                            colSpan={6}
                            style={
                              Object {
                                "padding": 0,
                              }
                            }
                          >
                            <ForwardRef(TableCell)
                              className="no-border"
                              classes={
                                Object {
                                  "alignCenter": "MuiTableCell-alignCenter",
                                  "alignJustify": "MuiTableCell-alignJustify",
                                  "alignLeft": "MuiTableCell-alignLeft",
                                  "alignRight": "MuiTableCell-alignRight",
                                  "body": "MuiTableCell-body",
                                  "footer": "MuiTableCell-footer",
                                  "head": "MuiTableCell-head",
                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                  "paddingNone": "MuiTableCell-paddingNone",
                                  "root": "MuiTableCell-root",
                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                  "stickyHeader": "MuiTableCell-stickyHeader",
                                }
                              }
                              colSpan={6}
                              style={
                                Object {
                                  "padding": 0,
                                }
                              }
                            >
                              <td
                                aria-sort={null}
                                className="MuiTableCell-root MuiTableCell-body no-border"
                                colSpan={6}
                                style={
                                  Object {
                                    "padding": 0,
                                  }
                                }
                              >
                                <WithStyles(ForwardRef(Collapse))
                                  in={false}
                                  timeout="auto"
                                  unmountOnExit={true}
                                >
                                  <ForwardRef(Collapse)
                                    classes={
                                      Object {
                                        "container": "MuiCollapse-container",
                                        "entered": "MuiCollapse-entered",
                                        "hidden": "MuiCollapse-hidden",
                                        "wrapper": "MuiCollapse-wrapper",
                                        "wrapperInner": "MuiCollapse-wrapperInner",
                                      }
                                    }
                                    in={false}
                                    timeout="auto"
                                    unmountOnExit={true}
                                  >
                                    <Transition
                                      addEndListener={[Function]}
                                      appear={false}
                                      enter={true}
                                      exit={true}
                                      in={false}
                                      mountOnEnter={false}
                                      onEnter={[Function]}
                                      onEntered={[Function]}
                                      onEntering={[Function]}
                                      onExit={[Function]}
                                      onExited={[Function]}
                                      onExiting={[Function]}
                                      timeout={null}
                                      unmountOnExit={true}
                                    />
                                  </ForwardRef(Collapse)>
                                </WithStyles(ForwardRef(Collapse))>
                              </td>
                            </ForwardRef(TableCell)>
                          </WithStyles(ForwardRef(TableCell))>
                        </tr>
                      </ForwardRef(TableRow)>
                    </WithStyles(ForwardRef(TableRow))>
                  </tbody>
                </ForwardRef(TableBody)>
              </WithStyles(ForwardRef(TableBody))>
            </RootRef>
          </div>
        </ScrollBar>
      </GenericTableBody>
    </table>
  </ForwardRef(Table)>
</WithStyles(ForwardRef(Table))>
`;
